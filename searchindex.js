Search.setIndex({"docnames": ["Introduction/pages/contributing", "Introduction/pages/conventions", "Introduction/pages/installation", "Introduction/pages/introduction", "Introduction/pages/welcome_page", "NuRadioMC/apidoc/NuRadioMC.EvtGen", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII", "NuRadioMC/apidoc/NuRadioMC.SignalGen", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations", "NuRadioMC/apidoc/NuRadioMC.SignalProp", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing", "NuRadioMC/apidoc/NuRadioMC.simulation", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation", "NuRadioMC/apidoc/NuRadioMC.utilities", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities", "NuRadioMC/apidoc/NuRadioMC.utilities.medium", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting", "NuRadioMC/apidoc/NuRadioMC.utilities.runner", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5", "NuRadioMC/pages/HDF5_structure", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2", "NuRadioMC/pages/Manuals/event_generation", "NuRadioMC/pages/Manuals/example-multi_station_coincidences", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial", "NuRadioMC/pages/Manuals/icemodels", "NuRadioMC/pages/Manuals/running_on_a_cluster", "NuRadioMC/pages/Manuals/signal_generation", "NuRadioMC/pages/Manuals/signal_propagation", "NuRadioMC/pages/Manuals/simulation_configuration", "NuRadioMC/pages/Manuals/veff_tutorial", "NuRadioMC/pages/code_documentation", "NuRadioMC/pages/manuals", "NuRadioMC/pages/welcome_page", "NuRadioReco/apidoc/NuRadioReco.detector", "NuRadioReco/apidoc/NuRadioReco.detector.ARA", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector", "NuRadioReco/apidoc/NuRadioReco.detector.amp", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern", "NuRadioReco/apidoc/NuRadioReco.detector.detector", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector", "NuRadioReco/apidoc/NuRadioReco.detector.response", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector", "NuRadioReco/apidoc/NuRadioReco.framework", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower", "NuRadioReco/apidoc/NuRadioReco.framework.base_station", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace", "NuRadioReco/apidoc/NuRadioReco.framework.channel", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field", "NuRadioReco/apidoc/NuRadioReco.framework.event", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization", "NuRadioReco/apidoc/NuRadioReco.framework.parameters", "NuRadioReco/apidoc/NuRadioReco.framework.particle", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station", "NuRadioReco/apidoc/NuRadioReco.framework.station", "NuRadioReco/apidoc/NuRadioReco.framework.trigger", "NuRadioReco/apidoc/NuRadioReco.modules", "NuRadioReco/apidoc/NuRadioReco.modules.ARA", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter", "NuRadioReco/apidoc/NuRadioReco.modules.base", "NuRadioReco/apidoc/NuRadioReco.modules.base.module", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.custom", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators", "NuRadioReco/apidoc/NuRadioReco.modules.io", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot.readARAData", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel", "NuRadioReco/apidoc/NuRadioReco.utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator", "NuRadioReco/apidoc/NuRadioReco.utilities.fft", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities", "NuRadioReco/apidoc/NuRadioReco.utilities.ice", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.logging", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses", "NuRadioReco/apidoc/NuRadioReco.utilities.noise", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names", "NuRadioReco/apidoc/NuRadioReco.utilities.templates", "NuRadioReco/apidoc/NuRadioReco.utilities.timing", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.units", "NuRadioReco/apidoc/NuRadioReco.utilities.version", "NuRadioReco/pages/code_documentation", "NuRadioReco/pages/detector/antennamodels", "NuRadioReco/pages/detector/detector", "NuRadioReco/pages/detector/detector_database_fields", "NuRadioReco/pages/detector/rnog", "NuRadioReco/pages/detector_tree", "NuRadioReco/pages/event_display", "NuRadioReco/pages/event_structure", "NuRadioReco/pages/how_to/vertex_reconstruction", "NuRadioReco/pages/howto_documentation", "NuRadioReco/pages/nur_modules", "NuRadioReco/pages/utilities", "NuRadioReco/pages/welcome_page", "main"], "filenames": ["Introduction/pages/contributing.rst", "Introduction/pages/conventions.rst", "Introduction/pages/installation.rst", "Introduction/pages/introduction.rst", "Introduction/pages/welcome_page.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5.rst", "NuRadioMC/pages/HDF5_structure.rst", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2.rst", "NuRadioMC/pages/Manuals/event_generation.rst", "NuRadioMC/pages/Manuals/example-multi_station_coincidences.rst", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial.rst", "NuRadioMC/pages/Manuals/icemodels.rst", "NuRadioMC/pages/Manuals/running_on_a_cluster.rst", "NuRadioMC/pages/Manuals/signal_generation.rst", "NuRadioMC/pages/Manuals/signal_propagation.rst", "NuRadioMC/pages/Manuals/simulation_configuration.rst", "NuRadioMC/pages/Manuals/veff_tutorial.rst", "NuRadioMC/pages/code_documentation.rst", "NuRadioMC/pages/manuals.rst", "NuRadioMC/pages/welcome_page.rst", "NuRadioReco/apidoc/NuRadioReco.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.amp.rst", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties.rst", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse.rst", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.response.rst", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json.rst", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db.rst", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector.rst", "NuRadioReco/apidoc/NuRadioReco.framework.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace.rst", "NuRadioReco/apidoc/NuRadioReco.framework.channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field.rst", "NuRadioReco/apidoc/NuRadioReco.framework.event.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameters.rst", "NuRadioReco/apidoc/NuRadioReco.framework.particle.rst", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.module.rst", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow.rst", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot.readARAData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.fft.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.ice.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.logging.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.noise.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.templates.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.timing.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.units.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.version.rst", "NuRadioReco/pages/code_documentation.rst", "NuRadioReco/pages/detector/antennamodels.rst", "NuRadioReco/pages/detector/detector.rst", "NuRadioReco/pages/detector/detector_database_fields.rst", "NuRadioReco/pages/detector/rnog.rst", "NuRadioReco/pages/detector_tree.rst", "NuRadioReco/pages/event_display.rst", "NuRadioReco/pages/event_structure.rst", "NuRadioReco/pages/how_to/vertex_reconstruction.rst", "NuRadioReco/pages/howto_documentation.rst", "NuRadioReco/pages/nur_modules.rst", "NuRadioReco/pages/utilities.rst", "NuRadioReco/pages/welcome_page.rst", "main.rst"], "titles": ["Contributing to NuRadioMC", "Some notes on conventions", "Installing NuRadioMC / NuRadioReco", "Introduction", "Introduction", "NuRadioMC.EvtGen package", "NuRadioMC.EvtGen.NuRadioMCtoAraSim module", "NuRadioMC.EvtGen.NuRadioProposal module", "NuRadioMC.EvtGen.create_tau_tab module", "NuRadioMC.EvtGen.generate_cylinder module", "NuRadioMC.EvtGen.generate_unforced module", "NuRadioMC.EvtGen.generator module", "NuRadioMC.EvtGen.generator_ASCII module", "NuRadioMC.EvtGen.generator_skeleton module", "NuRadioMC.EvtGen.hdf5_to_ASCII module", "NuRadioMC.EvtGen.proposal_table_manager module", "NuRadioMC.EvtGen.readARAEventList module", "NuRadioMC.EvtGen.readEventList_ASCII module", "NuRadioMC.SignalGen package", "NuRadioMC.SignalGen.ARZ package", "NuRadioMC.SignalGen.ARZ.ARZ module", "NuRadioMC.SignalGen.HCRB2017 module", "NuRadioMC.SignalGen.askaryan module", "NuRadioMC.SignalGen.emitter module", "NuRadioMC.SignalGen.parametrizations module", "NuRadioMC.SignalProp package", "NuRadioMC.SignalProp.analyticraytracing module", "NuRadioMC.SignalProp.directRayTracing module", "NuRadioMC.SignalProp.propagation module", "NuRadioMC.SignalProp.propagation_base_class module", "NuRadioMC.SignalProp.radioproparaytracing module", "NuRadioMC.simulation package", "NuRadioMC.simulation.simulation module", "NuRadioMC.utilities package", "NuRadioMC.utilities.Veff module", "NuRadioMC.utilities.attenuation module", "NuRadioMC.utilities.cross_sections module", "NuRadioMC.utilities.dump_hdf5 module", "NuRadioMC.utilities.earth_attenuation module", "NuRadioMC.utilities.fluxes module", "NuRadioMC.utilities.inelasticities module", "NuRadioMC.utilities.medium module", "NuRadioMC.utilities.medium_base module", "NuRadioMC.utilities.merge_hdf5 module", "NuRadioMC.utilities.muon_flux module", "NuRadioMC.utilities.plotting module", "NuRadioMC.utilities.runner module", "NuRadioMC.utilities.runner_example module", "NuRadioMC.utilities.split_hdf5 module", "HDF5 output structure", "HDF5 output structure (v2.2)", "Event Generation", "Example: Multi-station coincidences", "Example: Calculating expected sensitivities", "Ice and attenuation models", "Running on a cluster", "Signal Generation (electric field)", "Signal Propagation", "Simulation and configuration", "Example: Calculating effective volume", "Code Documentation", "Manuals", "NuRadioMC Documentation", "NuRadioReco.detector package", "NuRadioReco.detector.ARA package", "NuRadioReco.detector.ARA.analog_components module", "NuRadioReco.detector.ARIANNA package", "NuRadioReco.detector.ARIANNA.analog_components module", "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module", "NuRadioReco.detector.RNO_G package", "NuRadioReco.detector.RNO_G.analog_components module", "NuRadioReco.detector.RNO_G.db_mongo_read module", "NuRadioReco.detector.RNO_G.db_mongo_write module", "NuRadioReco.detector.RNO_G.rnog_detector module", "NuRadioReco.detector.amp module", "NuRadioReco.detector.antennapattern module", "NuRadioReco.detector.detector module", "NuRadioReco.detector.detector_base module", "NuRadioReco.detector.detector_sql module", "NuRadioReco.detector.detector_sys_uncertainties module", "NuRadioReco.detector.filterresponse module", "NuRadioReco.detector.generic_detector module", "NuRadioReco.detector.response module", "NuRadioReco.detector.sql_to_json module", "NuRadioReco.detector.test_detector_db module", "NuRadioReco.detector.visualize_detector module", "NuRadioReco.framework package", "NuRadioReco.framework.base_shower module", "NuRadioReco.framework.base_station module", "NuRadioReco.framework.base_trace module", "NuRadioReco.framework.channel module", "NuRadioReco.framework.electric_field module", "NuRadioReco.framework.event module", "NuRadioReco.framework.hybrid_information module", "NuRadioReco.framework.hybrid_shower module", "NuRadioReco.framework.parameter_serialization module", "NuRadioReco.framework.parameters module", "NuRadioReco.framework.particle module", "NuRadioReco.framework.radio_shower module", "NuRadioReco.framework.sim_channel module", "NuRadioReco.framework.sim_station module", "NuRadioReco.framework.station module", "NuRadioReco.framework.trigger module", "NuRadioReco.modules package", "NuRadioReco.modules.ARA package", "NuRadioReco.modules.ARA.hardwareResponseIncorporator module", "NuRadioReco.modules.ARA.triggerSimulator module", "NuRadioReco.modules.ARIANNA package", "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module", "NuRadioReco.modules.RNO_G package", "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module", "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module", "NuRadioReco.modules.analogToDigitalConverter module", "NuRadioReco.modules.base package", "NuRadioReco.modules.base.module module", "NuRadioReco.modules.beamFormingDirectionFitter module", "NuRadioReco.modules.channelAddCableDelay module", "NuRadioReco.modules.channelAntennaDedispersion module", "NuRadioReco.modules.channelBandPassFilter module", "NuRadioReco.modules.channelGalacticNoiseAdder module", "NuRadioReco.modules.channelGenericNoiseAdder module", "NuRadioReco.modules.channelLengthAdjuster module", "NuRadioReco.modules.channelResampler module", "NuRadioReco.modules.channelSignalReconstructor module", "NuRadioReco.modules.channelStopFilter module", "NuRadioReco.modules.channelTemplateCorrelation module", "NuRadioReco.modules.channelTimeOffsetCalculator module", "NuRadioReco.modules.channelTimeWindow module", "NuRadioReco.modules.correlationDirectionFitter module", "NuRadioReco.modules.cosmicRayEnergyReconstructor module", "NuRadioReco.modules.custom package", "NuRadioReco.modules.custom.deltaT package", "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module", "NuRadioReco.modules.efieldAirToIcePropagator module", "NuRadioReco.modules.efieldRadioInterferometricReconstruction module", "NuRadioReco.modules.efieldTimeDirectionFitter module", "NuRadioReco.modules.efieldToVoltageConverter module", "NuRadioReco.modules.efieldToVoltageConverterPerEfield module", "NuRadioReco.modules.electricFieldBandPassFilter module", "NuRadioReco.modules.electricFieldResampler module", "NuRadioReco.modules.electricFieldSignalReconstructor module", "NuRadioReco.modules.eventTypeIdentifier module", "NuRadioReco.modules.iftElectricFieldReconstructor package", "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module", "NuRadioReco.modules.iftElectricFieldReconstructor.operators module", "NuRadioReco.modules.io package", "NuRadioReco.modules.io.NuRadioRecoio module", "NuRadioReco.modules.io.RNO_G package", "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module", "NuRadioReco.modules.io.araroot package", "NuRadioReco.modules.io.araroot.readARAData module", "NuRadioReco.modules.io.coreas package", "NuRadioReco.modules.io.coreas.coreas module", "NuRadioReco.modules.io.coreas.readCoREAS module", "NuRadioReco.modules.io.coreas.readCoREASShower module", "NuRadioReco.modules.io.coreas.readCoREASStation module", "NuRadioReco.modules.io.coreas.readCoREASStationGrid module", "NuRadioReco.modules.io.coreas.simulationSelector module", "NuRadioReco.modules.io.eventReader module", "NuRadioReco.modules.io.eventWriter module", "NuRadioReco.modules.io.event_parser_factory module", "NuRadioReco.modules.io.snowshovel package", "NuRadioReco.modules.io.snowshovel.readARIANNAData module", "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module", "NuRadioReco.modules.measured_noise package", "NuRadioReco.modules.measured_noise.ARIANNA package", "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module", "NuRadioReco.modules.measured_noise.RNO_G package", "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module", "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module", "NuRadioReco.modules.neutrinoDirectionReconstructor package", "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module", "NuRadioReco.modules.neutrinoVertexReconstructor package", "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module", "NuRadioReco.modules.phasedarray package", "NuRadioReco.modules.phasedarray.triggerSimulator module", "NuRadioReco.modules.sphericalWaveFitter module", "NuRadioReco.modules.templateDirectionFitter module", "NuRadioReco.modules.trigger package", "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module", "NuRadioReco.modules.trigger.envelopeTrigger module", "NuRadioReco.modules.trigger.highLowThreshold module", "NuRadioReco.modules.trigger.multiHighLowThreshold module", "NuRadioReco.modules.trigger.powerIntegration module", "NuRadioReco.modules.trigger.rnog_surface_trigger module", "NuRadioReco.modules.trigger.simpleThreshold module", "NuRadioReco.modules.triggerTimeAdjuster module", "NuRadioReco.modules.voltageToAnalyticEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverterPerChannel module", "NuRadioReco.utilities package", "NuRadioReco.utilities.analytic_pulse module", "NuRadioReco.utilities.bandpass_filter module", "NuRadioReco.utilities.cr_flux module", "NuRadioReco.utilities.diodeSimulator module", "NuRadioReco.utilities.fft module", "NuRadioReco.utilities.geometryUtilities module", "NuRadioReco.utilities.ice module", "NuRadioReco.utilities.interferometry module", "NuRadioReco.utilities.io_utilities module", "NuRadioReco.utilities.logging module", "NuRadioReco.utilities.metaclasses module", "NuRadioReco.utilities.noise module", "NuRadioReco.utilities.particle_names module", "NuRadioReco.utilities.templates module", "NuRadioReco.utilities.timing module", "NuRadioReco.utilities.traceWindows module", "NuRadioReco.utilities.trace_utilities module", "NuRadioReco.utilities.units module", "NuRadioReco.utilities.version module", "Code Documentation", "Antenna Models", "Detector Description", "Properties of Detector Description", "The RNO-G detector class and database interface", "Detector Description", "Event Display", "Data Structure", "Use the Vertex Reconstruction Modules", "Manuals", "Modules", "Utilities", "NuRadioReco Documentation", "Welcome to NuRadio\u2019s documentation!"], "terms": {"thank": [0, 56, 219, 220], "you": [0, 2, 3, 11, 26, 49, 50, 54, 57, 59, 70, 71, 72, 77, 79, 81, 88, 89, 90, 91, 92, 99, 100, 101, 134, 157, 210, 213, 216, 218, 220, 222, 223], "consid": [0, 2, 11, 26, 27, 29, 30, 34, 38, 51, 52, 56, 58, 73, 96, 171, 188], "i": [0, 1, 2, 3, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 106, 108, 110, 111, 112, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 134, 136, 141, 143, 144, 146, 148, 152, 153, 154, 156, 158, 159, 160, 163, 166, 168, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 208, 209, 210, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224], "intend": 0, "commun": [0, 56, 96], "base": [0, 1, 7, 11, 20, 22, 24, 26, 27, 29, 30, 32, 38, 41, 42, 46, 55, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 169, 171, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 202, 203, 204, 206, 222], "simul": [0, 3, 10, 11, 22, 24, 26, 27, 29, 30, 34, 41, 42, 46, 49, 50, 51, 53, 55, 56, 60, 61, 62, 73, 75, 77, 79, 81, 91, 92, 96, 99, 105, 106, 108, 110, 111, 112, 119, 126, 136, 152, 153, 154, 155, 156, 157, 169, 171, 177, 182, 183, 184, 185, 187, 188, 189, 190, 213, 214, 216, 219, 222], "reconstruct": [0, 3, 39, 56, 58, 59, 70, 77, 79, 81, 96, 108, 110, 111, 115, 126, 128, 129, 134, 135, 140, 143, 159, 163, 171, 174, 175, 189, 190, 210, 214, 216, 219, 221, 222, 224], "softwar": [0, 55, 59], "radio": [0, 2, 3, 11, 21, 22, 24, 30, 49, 51, 53, 56, 57, 59, 87, 92, 94, 96, 98, 119, 129, 134, 143, 148, 155, 189, 209, 214], "neutrino": [0, 1, 3, 10, 11, 21, 22, 24, 30, 32, 36, 38, 39, 49, 51, 52, 55, 56, 58, 59, 88, 91, 96, 100, 101, 125, 141, 171, 206, 219, 220], "detector": [0, 2, 3, 21, 22, 24, 26, 27, 29, 30, 32, 38, 39, 49, 50, 51, 55, 56, 92, 106, 108, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 138, 139, 140, 143, 146, 152, 153, 154, 155, 156, 157, 158, 159, 169, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 204, 208, 209, 212, 213, 220, 222, 223, 224, 225], "everyon": 0, "invit": 0, "us": [0, 1, 3, 7, 10, 11, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 46, 49, 50, 52, 53, 55, 57, 58, 59, 71, 72, 73, 76, 77, 79, 81, 82, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 106, 108, 110, 111, 112, 114, 115, 118, 119, 120, 121, 125, 126, 128, 134, 135, 136, 141, 143, 148, 154, 157, 158, 166, 168, 169, 171, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 198, 201, 202, 204, 208, 209, 210, 213, 214, 215, 216, 218, 221, 222, 223], "experi": [0, 51, 56, 112, 214, 219, 222], "If": [0, 2, 3, 7, 10, 11, 20, 21, 24, 26, 27, 29, 30, 32, 41, 42, 49, 50, 51, 52, 56, 58, 59, 70, 71, 72, 73, 75, 76, 81, 82, 88, 89, 90, 91, 92, 99, 100, 101, 102, 106, 108, 110, 111, 112, 120, 121, 123, 126, 134, 143, 146, 148, 153, 154, 156, 158, 159, 168, 169, 174, 177, 188, 189, 196, 201, 202, 204, 208, 213, 214, 215, 218, 219, 223], "significantli": [0, 57], "pleas": [0, 1, 2, 3, 21, 49, 51, 57, 59, 196, 213, 222], "contact": 0, "anel": 0, "cg": 0, "laser": [0, 72], "github": [0, 2, 30, 51, 53, 57, 59, 65, 119, 148], "so": [0, 2, 20, 26, 27, 29, 40, 46, 49, 51, 54, 55, 56, 57, 58, 59, 73, 77, 78, 79, 81, 112, 119, 141, 169, 189, 209, 210, 213, 214, 215, 218, 219, 220, 223], "we": [0, 2, 11, 22, 23, 24, 26, 34, 49, 51, 52, 54, 55, 56, 57, 58, 59, 73, 75, 91, 126, 168, 169, 213, 214, 215, 216, 220, 223], "ar": [0, 1, 2, 3, 7, 10, 11, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 89, 90, 91, 92, 96, 99, 102, 106, 108, 110, 111, 112, 118, 119, 120, 121, 123, 124, 125, 126, 134, 141, 143, 146, 148, 152, 153, 154, 156, 158, 159, 163, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 190, 192, 195, 204, 209, 213, 214, 215, 216, 218, 219, 220, 222, 223], "inform": [0, 7, 11, 22, 23, 24, 26, 27, 29, 30, 38, 49, 50, 51, 54, 56, 57, 58, 59, 71, 72, 73, 75, 92, 112, 120, 143, 146, 148, 158, 177, 208, 213, 214, 216, 222], "about": [0, 22, 23, 24, 26, 27, 29, 30, 34, 49, 50, 58, 59, 71, 72, 92, 110, 214, 219, 223], "ongo": 0, "activ": [0, 10, 21, 26, 32, 72, 124, 218, 223], "both": [0, 2, 20, 24, 51, 52, 54, 56, 57, 75, 82, 143, 154, 159, 177, 190, 202, 213, 214, 215, 219, 220, 222], "also": [0, 2, 11, 20, 26, 27, 29, 30, 34, 41, 42, 49, 51, 54, 56, 57, 58, 59, 62, 73, 77, 79, 81, 99, 112, 114, 119, 134, 143, 169, 175, 189, 202, 208, 210, 214, 216, 219, 220, 222, 224], "abl": [0, 2, 41, 42, 55, 56, 214], "provid": [0, 1, 2, 11, 24, 26, 32, 40, 49, 50, 51, 54, 56, 57, 58, 59, 62, 73, 75, 77, 82, 92, 96, 119, 122, 134, 148, 189, 191, 201, 213, 214, 219, 220, 222, 223, 224], "commit": [0, 56, 96, 211], "access": [0, 2, 41, 42, 49, 50, 51, 54, 56, 71, 72, 75, 77, 96, 146, 148, 214, 219], "repositori": [0, 2, 59, 96, 211, 219], "find": [0, 3, 26, 27, 29, 30, 49, 51, 54, 57, 71, 72, 134, 143, 154, 177, 191, 200, 220], "an": [0, 1, 2, 7, 10, 11, 20, 23, 26, 28, 30, 34, 38, 41, 42, 48, 49, 50, 51, 53, 54, 56, 58, 72, 73, 75, 77, 79, 81, 82, 89, 90, 91, 92, 96, 99, 102, 106, 110, 112, 114, 115, 126, 129, 134, 143, 148, 152, 154, 159, 169, 171, 174, 175, 177, 183, 184, 189, 190, 195, 197, 198, 200, 202, 204, 208, 209, 213, 214, 215, 216, 219, 220, 222, 223], "issu": [0, 51, 56, 177, 182, 186, 187], "bug": 0, "creat": [0, 2, 7, 11, 26, 49, 50, 51, 52, 53, 55, 56, 57, 58, 72, 73, 77, 96, 152, 153, 156, 174, 177, 201, 208, 213, 214, 215, 222, 223], "want": [0, 2, 11, 26, 51, 52, 54, 56, 57, 58, 59, 70, 71, 72, 73, 77, 79, 81, 92, 112, 215, 216, 218, 219, 220, 222, 223], "your": [0, 2, 26, 27, 29, 30, 41, 42, 55, 59, 70, 71, 72, 89, 90, 91, 99, 134, 210, 216, 218, 222], "new": [0, 7, 11, 20, 23, 24, 26, 27, 29, 30, 40, 42, 46, 51, 54, 56, 57, 58, 72, 77, 79, 81, 91, 114, 122, 139, 141, 155, 166, 168, 169, 202, 213, 214, 216, 219, 223], "branch": [0, 40, 51, 222], "make": [0, 11, 26, 51, 52, 56, 58, 59, 108, 111, 134, 148, 157, 214, 218, 219, 220, 222, 223], "pull": [0, 51, 75, 148], "request": [0, 20, 24, 41, 42, 51, 56, 58, 71, 72, 73, 75, 81, 153, 156, 177, 194, 213, 214], "loos": 0, "follow": [0, 2, 11, 26, 29, 34, 40, 41, 49, 50, 51, 52, 54, 55, 57, 58, 59, 72, 76, 92, 112, 129, 159, 189, 213, 214, 215, 222], "git": [0, 2, 96, 211], "flow": 0, "model": [0, 11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 35, 36, 38, 41, 42, 51, 57, 58, 59, 61, 73, 75, 77, 78, 79, 81, 96, 119, 134, 143, 171, 196, 199, 208, 217, 220, 222], "A": [0, 1, 10, 11, 21, 22, 24, 36, 38, 49, 50, 51, 54, 55, 56, 57, 58, 59, 71, 72, 73, 75, 78, 92, 96, 112, 134, 143, 148, 153, 154, 166, 175, 189, 214, 215, 219, 220, 222], "detail": [0, 1, 2, 7, 11, 22, 23, 24, 26, 36, 49, 50, 51, 55, 56, 57, 72, 77, 148, 219], "tutori": [0, 3, 52, 59, 62, 224], "given": [0, 1, 3, 7, 11, 22, 23, 24, 26, 27, 29, 30, 38, 40, 51, 52, 53, 54, 56, 57, 58, 71, 72, 77, 79, 81, 92, 96, 100, 106, 112, 120, 134, 136, 146, 152, 154, 155, 158, 160, 174, 175, 177, 184, 188, 195, 196, 198, 200, 214, 215, 219, 222], "here": [0, 1, 2, 3, 26, 27, 29, 30, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 73, 75, 120, 134, 171, 189, 210, 214, 215, 223], "short": [0, 23, 56, 58], "summari": 0, "below": [0, 1, 2, 7, 11, 21, 26, 38, 49, 51, 53, 54, 56, 57, 58, 73, 79, 112, 118, 143, 148, 177, 182, 186, 187, 194, 213, 222], "The": [0, 1, 2, 7, 10, 11, 20, 24, 26, 27, 28, 29, 30, 34, 38, 40, 41, 42, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 106, 108, 110, 111, 112, 114, 115, 118, 119, 120, 121, 124, 125, 126, 128, 134, 135, 136, 148, 152, 154, 163, 166, 168, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 200, 202, 204, 209, 213, 215, 217, 218, 219, 220, 222, 223], "master": [0, 51, 53, 58, 65], "reserv": [0, 46], "stabl": 0, "releas": 0, "user": [0, 2, 7, 11, 22, 23, 24, 26, 32, 41, 42, 51, 55, 56, 57, 58, 77, 79, 81, 112, 156, 213, 215, 223], "can": [0, 2, 3, 7, 11, 22, 23, 24, 26, 27, 29, 30, 32, 34, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 71, 72, 75, 77, 79, 81, 87, 94, 96, 98, 102, 108, 110, 111, 112, 118, 120, 121, 126, 134, 141, 143, 146, 148, 154, 157, 159, 163, 169, 171, 177, 182, 183, 184, 185, 186, 187, 188, 189, 203, 204, 208, 210, 213, 214, 215, 218, 219, 220, 222, 223, 224], "alwai": [0, 24, 41, 42, 56, 214, 219, 223], "check": [0, 3, 7, 26, 27, 29, 30, 49, 50, 51, 52, 55, 73, 76, 77, 79, 80, 81, 88, 92, 100, 101, 106, 169, 174, 177, 214, 219, 223], "out": [0, 3, 30, 51, 52, 55, 58, 67, 70, 71, 72, 110, 126, 148, 196, 214, 219], "get": [0, 2, 11, 20, 24, 26, 30, 35, 40, 41, 42, 52, 54, 56, 57, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 91, 92, 102, 108, 111, 112, 126, 136, 158, 169, 195, 196, 198, 206, 214, 219], "latest": [0, 49, 214], "all": [0, 1, 2, 7, 10, 11, 15, 24, 26, 27, 28, 29, 30, 32, 34, 36, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 72, 73, 75, 77, 79, 81, 82, 92, 96, 100, 102, 110, 112, 114, 115, 121, 125, 126, 128, 134, 146, 148, 154, 155, 158, 159, 163, 169, 171, 177, 182, 183, 184, 185, 186, 187, 188, 202, 204, 206, 210, 213, 214, 218, 219, 220, 222, 223], "develop": [0, 20, 213], "happen": [0, 38, 49, 50, 51, 56, 58, 71, 72, 112, 204], "featur": [0, 2, 51, 54, 55, 57, 62, 214, 222, 224], "merg": [0, 49, 50, 51, 52, 58], "after": [0, 46, 51, 58, 77, 79, 81, 89, 90, 91, 96, 99, 102, 112, 136, 159, 177, 196, 204, 214, 219, 222], "review": [0, 22, 24], "sure": [0, 26, 27, 29, 30, 56, 58, 89, 90, 91, 99, 134, 218, 220], "specifi": [0, 1, 7, 10, 11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 49, 50, 51, 54, 55, 56, 57, 58, 59, 71, 72, 73, 75, 77, 79, 81, 82, 88, 100, 101, 108, 110, 111, 112, 118, 119, 120, 121, 124, 127, 128, 136, 138, 141, 143, 148, 156, 159, 160, 163, 169, 171, 174, 177, 182, 183, 184, 185, 186, 187, 188, 194, 200, 202, 204, 213, 214, 215, 216, 222], "when": [0, 11, 26, 30, 32, 42, 49, 51, 54, 56, 57, 58, 71, 72, 73, 76, 81, 88, 92, 100, 101, 108, 111, 126, 134, 148, 159, 169, 171, 189, 198, 204, 214, 215, 216, 220, 222, 223], "allow": [0, 2, 20, 30, 32, 34, 41, 42, 51, 52, 53, 56, 57, 58, 59, 71, 72, 73, 77, 79, 81, 82, 112, 114, 118, 148, 169, 194, 204, 206, 214, 216, 219, 222], "hotfix": 0, "These": [0, 2, 49, 50, 51, 54, 56, 58, 216, 222], "well": [0, 2, 22, 23, 24, 49, 50, 51, 54, 56, 57, 58, 96, 159, 168, 214, 216, 219, 220], "where": [0, 1, 7, 11, 20, 21, 23, 26, 34, 38, 49, 50, 51, 52, 54, 55, 56, 57, 58, 68, 77, 79, 81, 96, 102, 108, 110, 111, 120, 124, 127, 168, 169, 174, 182, 183, 184, 185, 186, 187, 196, 208, 214, 216, 219, 220], "tag": 0, "made": [0, 56, 70, 134], "changelog": 0, "correct": [0, 1, 2, 30, 34, 55, 56, 57, 58, 70, 76, 77, 78, 79, 81, 82, 96, 126, 141, 148, 174, 175, 197, 214, 223], "To": [0, 1, 2, 34, 50, 52, 54, 55, 56, 57, 58, 59, 62, 73, 77, 202, 214, 216, 219, 220, 222, 223, 224], "start": [0, 7, 20, 26, 27, 29, 30, 38, 46, 49, 50, 51, 52, 56, 57, 58, 71, 72, 96, 102, 112, 123, 143, 148, 177, 188, 214, 218, 219], "first": [0, 2, 7, 10, 11, 26, 27, 29, 30, 49, 50, 51, 52, 54, 56, 58, 73, 75, 77, 79, 81, 82, 92, 96, 110, 124, 125, 134, 136, 148, 160, 169, 171, 175, 177, 201, 206, 213, 214, 215, 216, 218, 220], "checkout": 0, "b": [0, 26, 49, 57, 118, 181, 189, 190], "my_new_featur": 0, "which": [0, 1, 2, 7, 10, 11, 20, 23, 26, 27, 28, 29, 30, 32, 34, 38, 41, 42, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 71, 72, 73, 75, 77, 79, 81, 82, 88, 89, 90, 91, 96, 99, 100, 101, 102, 106, 108, 111, 112, 114, 115, 118, 119, 120, 121, 123, 125, 126, 127, 134, 141, 143, 144, 148, 152, 153, 156, 159, 163, 168, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 189, 195, 198, 200, 202, 204, 209, 214, 215, 216, 219, 222, 223], "should": [0, 2, 7, 11, 26, 27, 29, 30, 34, 41, 42, 51, 54, 55, 56, 57, 58, 59, 71, 72, 75, 77, 79, 81, 89, 90, 91, 92, 99, 102, 108, 110, 111, 112, 114, 118, 120, 121, 126, 127, 136, 141, 143, 146, 148, 169, 174, 175, 182, 188, 200, 202, 204, 209, 210, 214, 218, 219, 220, 222], "replac": [0, 20, 42, 81, 108, 111, 114, 214, 222], "line": [0, 3, 20, 21, 22, 24, 26, 28, 34, 51, 55, 56, 59, 118, 134, 138, 175, 177, 194, 200, 222], "now": [0, 2, 56, 57, 58, 73, 162], "written": [0, 11, 32, 51, 56, 57, 58, 71, 72, 159, 210, 214, 219], "fix": [0, 26, 46, 51, 52, 56, 112, 156, 168, 171, 196, 215], "push": 0, "normal": [0, 22, 23, 24, 34, 51, 82, 108, 111, 193, 197, 198, 200, 214], "except": [0, 1, 51, 159, 219], "need": [0, 2, 11, 15, 20, 22, 23, 24, 26, 29, 39, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 70, 75, 77, 79, 81, 102, 106, 112, 118, 121, 134, 154, 157, 166, 169, 175, 177, 182, 183, 184, 185, 186, 187, 189, 190, 196, 204, 209, 210, 213, 214, 215, 216, 219, 220, 223], "includ": [0, 1, 2, 3, 26, 27, 29, 30, 39, 49, 50, 56, 57, 59, 73, 77, 79, 81, 92, 110, 120, 134, 143, 169, 171, 174, 222], "set": [0, 2, 7, 10, 11, 20, 21, 24, 26, 27, 29, 30, 41, 42, 52, 55, 56, 57, 58, 59, 71, 72, 73, 77, 79, 81, 88, 89, 90, 91, 92, 99, 100, 101, 102, 112, 114, 119, 123, 125, 127, 132, 134, 136, 140, 141, 143, 146, 148, 153, 154, 156, 158, 159, 169, 174, 175, 177, 179, 183, 184, 189, 202, 204, 206, 214, 215, 216, 219, 220, 222], "upstream": 0, "initi": [0, 11, 26, 32, 40, 41, 51, 77, 79, 81, 91, 96, 99, 102, 134, 146, 148, 153, 154, 155, 156, 171, 174, 189, 216, 219, 222], "onli": [0, 2, 7, 11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 36, 38, 41, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 88, 89, 90, 91, 92, 99, 100, 101, 102, 108, 110, 111, 112, 120, 126, 134, 141, 143, 148, 153, 156, 163, 168, 169, 171, 188, 189, 190, 196, 203, 209, 214, 216, 219, 220, 222, 223], "exist": [0, 7, 10, 11, 26, 27, 29, 30, 32, 42, 48, 49, 51, 55, 56, 57, 58, 71, 72, 77, 81, 92, 188, 202, 203, 216, 223], "local": [0, 1, 2, 56, 59, 75, 76, 77, 96, 152], "machin": [0, 57], "origin": [0, 1, 11, 20, 22, 23, 24, 26, 30, 81, 87, 94, 96, 98, 108, 111, 112, 134, 177, 209], "onc": [0, 2, 51, 56, 57, 73, 75, 148, 214, 216, 220], "readi": 0, "befor": [0, 26, 30, 51, 56, 70, 89, 90, 91, 99, 108, 111, 121, 136, 148, 168, 171, 174, 175, 177, 182, 188, 189, 204, 222], "introduc": [0, 41, 42, 58, 223], "more": [0, 1, 7, 11, 20, 22, 26, 27, 29, 30, 34, 41, 42, 49, 50, 51, 55, 56, 57, 58, 77, 96, 110, 120, 143, 148, 159, 213, 214, 215, 216, 219, 222], "them": [0, 26, 27, 29, 46, 51, 56, 58, 73, 82, 110, 112, 148, 168, 169, 216], "clearli": 0, "function": [0, 1, 7, 11, 20, 26, 27, 28, 29, 30, 34, 35, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 56, 57, 58, 67, 70, 71, 72, 73, 75, 76, 77, 81, 82, 88, 92, 100, 101, 102, 108, 110, 111, 112, 118, 123, 127, 143, 146, 148, 153, 154, 156, 158, 160, 169, 171, 188, 189, 190, 194, 195, 198, 202, 208, 209, 214, 219, 220, 222, 223], "have": [0, 1, 2, 3, 7, 10, 11, 20, 30, 36, 41, 42, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 67, 70, 71, 72, 73, 77, 79, 81, 88, 89, 90, 91, 99, 100, 101, 102, 112, 118, 119, 126, 148, 157, 159, 163, 168, 169, 175, 177, 182, 204, 209, 210, 214, 215, 216, 219, 220, 222, 223, 224], "correctli": [0, 22, 23, 24, 49, 50, 51, 215, 218], "comment": [0, 58, 219], "appropri": [0, 26, 51, 188, 214], "reflect": [0, 26, 27, 29, 30, 34, 41, 42, 49, 54, 56, 57, 58, 96, 174, 175, 198, 209, 214], "It": [0, 2, 7, 11, 26, 27, 29, 34, 42, 51, 54, 55, 56, 58, 59, 73, 76, 81, 108, 111, 114, 119, 121, 126, 134, 136, 154, 169, 171, 177, 209, 214, 216, 219, 220, 222], "succesfulli": [0, 2], "complet": [0, 26, 54, 56, 57, 58, 59, 62, 73, 77, 81, 204, 214, 215, 224], "test": [0, 52, 71, 72, 106, 220], "run": [0, 2, 11, 26, 27, 29, 30, 31, 32, 33, 42, 46, 49, 50, 51, 58, 61, 73, 77, 79, 81, 92, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 214, 216, 218, 219, 220, 222], "automat": [0, 2, 11, 26, 30, 42, 54, 55, 56, 57, 58, 77, 79, 81, 89, 90, 91, 99, 141, 177, 213, 214, 219], "each": [0, 3, 7, 20, 22, 23, 24, 26, 27, 29, 30, 34, 38, 49, 50, 51, 52, 55, 56, 58, 71, 72, 73, 91, 102, 110, 114, 120, 126, 132, 134, 137, 148, 153, 155, 156, 171, 174, 177, 186, 188, 189, 190, 191, 196, 200, 204, 214, 215, 216, 219, 220, 222], "time": [0, 7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 39, 46, 49, 50, 51, 52, 57, 58, 71, 72, 73, 75, 77, 78, 79, 81, 82, 88, 89, 90, 91, 96, 99, 100, 101, 102, 106, 112, 114, 115, 119, 120, 122, 123, 124, 126, 127, 134, 136, 143, 148, 163, 166, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 200, 203, 204, 208, 209, 213, 214, 215, 219, 220, 222, 223], "implement": [0, 22, 23, 24, 26, 27, 29, 41, 42, 53, 56, 57, 58, 59, 67, 70, 73, 75, 106, 118, 120, 134, 143, 194, 199, 204, 219, 222], "doe": [0, 2, 22, 24, 26, 27, 29, 30, 42, 49, 51, 56, 58, 71, 72, 81, 89, 90, 91, 99, 112, 118, 169, 174, 175, 188, 214, 219, 220, 223], "break": 0, "anyth": 0, "still": [0, 75, 112, 163, 214, 222], "built": [0, 219, 222], "One": [0, 26, 34, 49, 50, 51, 55, 56, 57, 58, 59, 214], "core": [0, 10, 11, 34, 38, 46, 51, 55, 58, 86, 96, 134, 152, 153, 156], "ha": [0, 7, 11, 20, 26, 49, 51, 52, 54, 55, 56, 57, 58, 59, 73, 77, 79, 81, 82, 88, 92, 99, 100, 101, 102, 119, 120, 143, 148, 157, 169, 189, 194, 196, 197, 209, 213, 214, 216, 219, 220, 222], "approv": [0, 51, 58], "wait": 0, "least": [0, 58, 81, 92, 112, 136, 169, 189, 190, 204], "24": [0, 82, 96], "hour": [0, 55, 223], "even": [0, 52, 56, 58, 71, 72, 120, 220, 222, 223], "been": [0, 11, 20, 26, 51, 56, 57, 58, 67, 70, 81, 92, 102, 112, 159, 196, 213, 214, 220, 222], "other": [0, 26, 27, 29, 30, 51, 54, 56, 57, 59, 73, 81, 82, 110, 118, 126, 134, 141, 148, 154, 163, 168, 169, 174, 190, 204, 214, 216, 219, 222], "mai": [0, 2, 26, 27, 29, 30, 49, 50, 54, 134, 189, 214, 219, 220, 222], "look": [0, 3, 26, 56, 62, 134, 148, 169, 188, 214, 224], "thei": [0, 7, 41, 42, 49, 50, 51, 52, 56, 58, 73, 81, 112, 214, 216, 219, 220, 223], "might": [0, 11, 20, 26, 49, 52, 73, 89, 90, 91, 96, 99, 120, 134, 148, 166, 168, 214, 216], "someth": [0, 59], "miss": [0, 2, 58, 81, 214], "In": [0, 2, 11, 22, 23, 24, 26, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 108, 111, 118, 122, 148, 169, 189, 190, 194, 214, 215, 219, 222], "gener": [0, 1, 2, 5, 10, 13, 15, 23, 24, 26, 27, 29, 30, 40, 42, 48, 49, 50, 58, 61, 81, 92, 96, 106, 118, 120, 132, 136, 153, 156, 168, 169, 174, 175, 204, 219, 222], "try": [0, 146, 148, 201], "industri": 0, "explicitli": [0, 26, 118, 189, 214], "mention": 0, "resort": [0, 56], "best": [0, 51, 56, 143, 216, 222], "practic": [0, 22, 51, 56, 58, 112, 220], "tri": [0, 2, 154, 177], "pep": 0, "8": [0, 34, 38, 56, 58, 96, 134, 157, 196, 204, 209], "extens": [0, 1, 56], "especi": [0, 89, 90, 91, 99], "physic": [0, 1, 22, 24, 38, 51, 56, 115, 148], "behind": 0, "come": [0, 1, 51, 55, 56, 115, 119, 148, 196, 209, 219, 220], "variabl": [0, 2, 21, 41, 42, 51, 56, 57, 71, 72, 148, 154, 216], "defin": [0, 1, 10, 11, 22, 23, 24, 26, 30, 32, 36, 41, 42, 46, 49, 51, 52, 54, 55, 56, 57, 58, 59, 73, 76, 81, 82, 96, 108, 111, 112, 114, 121, 127, 134, 136, 143, 155, 156, 177, 188, 193, 200, 202, 208, 210, 214, 215, 216, 219, 220, 222, 223], "repres": [0, 23, 38, 51, 54, 152], "unit": [0, 7, 11, 20, 22, 23, 24, 26, 27, 29, 30, 34, 35, 36, 38, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 72, 75, 80, 82, 86, 102, 112, 118, 122, 123, 127, 128, 134, 138, 152, 177, 185, 189, 192, 195, 219, 220], "must": [0, 7, 11, 26, 32, 39, 51, 56, 57, 58, 72, 112, 118, 177, 188, 209, 215], "util": [0, 7, 26, 51, 53, 54, 55, 56, 57, 58, 60, 75, 102, 114, 126, 143, 212, 219, 220, 222, 224, 225], "avoid": [0, 7, 26, 27, 29, 154, 202, 214, 219], "ad": [0, 30, 41, 42, 51, 54, 56, 72, 92, 110, 112, 114, 118, 119, 120, 126, 136, 141, 154, 169, 202, 208, 214, 219], "without": [0, 41, 42, 49, 50, 51, 56, 57, 58, 76, 81, 110, 112, 158, 195, 214, 215], "clear": [0, 56, 114, 202], "thi": [0, 2, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 72, 73, 75, 76, 77, 79, 81, 82, 89, 90, 91, 92, 96, 99, 102, 106, 108, 110, 111, 112, 114, 118, 119, 120, 124, 126, 127, 134, 137, 141, 143, 146, 148, 154, 156, 158, 166, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 196, 198, 200, 201, 202, 204, 208, 209, 210, 213, 214, 215, 216, 219, 220, 222, 223], "part": [0, 26, 27, 29, 30, 51, 52, 55, 56, 75, 81, 112, 123, 204, 214, 215, 219], "sourc": [0, 7, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 166, 168, 169, 171, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214], "python": [0, 2, 3, 20, 28, 42, 52, 55, 57, 58, 59, 71, 72, 200, 201, 204, 214, 218, 222], "human": [0, 34, 59], "readabl": [0, 34, 59, 75], "sphinx": [0, 2], "numpi": [0, 2, 20, 41, 42, 56, 57, 58, 110, 223], "syntax": [0, 77, 79], "briefli": 0, "mean": [0, 10, 11, 26, 34, 38, 51, 52, 56, 73, 77, 79, 81, 82, 89, 90, 91, 96, 99, 102, 106, 112, 134, 148, 163, 169, 196, 213, 216, 218, 220, 222], "like": [0, 2, 34, 42, 54, 56, 57, 58, 59, 81, 96, 174, 189, 214, 219, 220], "def": [0, 51, 52, 54, 58, 134, 189, 222], "example_funct": 0, "x": [0, 1, 11, 21, 26, 30, 39, 40, 45, 46, 51, 52, 56, 57, 58, 75, 78, 79, 96, 134, 136, 144, 156, 174, 175, 178, 181, 189, 190, 198, 200, 213, 215], "y": [0, 1, 11, 20, 26, 30, 45, 51, 52, 55, 56, 57, 58, 72, 75, 79, 82, 96, 134, 136, 156, 175, 178, 200, 213, 215, 220], "mode": [0, 30, 32, 38, 49, 50, 58, 77, 81, 92, 101, 108, 110, 111, 112, 116, 136, 141, 144, 159, 188, 219], "quickli": [0, 52], "one": [0, 2, 10, 11, 15, 20, 26, 34, 36, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 88, 91, 92, 100, 101, 106, 110, 112, 125, 126, 134, 136, 146, 152, 154, 155, 158, 169, 177, 203, 204, 206, 209, 214, 219, 222, 223], "descript": [0, 22, 32, 38, 49, 50, 52, 55, 56, 57, 73, 76, 77, 79, 81, 106, 108, 111, 112, 115, 119, 121, 124, 125, 126, 128, 134, 135, 143, 146, 153, 154, 155, 156, 158, 159, 169, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 204, 213, 216, 219, 224, 225], "method": [0, 7, 20, 22, 24, 26, 27, 29, 30, 32, 34, 38, 41, 42, 46, 56, 57, 58, 71, 72, 73, 75, 77, 78, 79, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 169, 171, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 202, 203, 204, 206, 209, 214, 219, 220, 222, 223], "space": [0, 39, 54, 56, 57, 58, 96, 110, 134, 144, 171, 189, 191, 197, 219, 220], "option": [0, 7, 11, 26, 27, 28, 29, 30, 34, 35, 36, 38, 48, 49, 50, 51, 58, 71, 72, 73, 76, 81, 82, 89, 90, 91, 96, 99, 108, 111, 112, 116, 118, 120, 127, 134, 136, 138, 141, 143, 148, 159, 163, 168, 169, 174, 175, 186, 219, 222], "longer": [0, 96, 112, 220], "while": [0, 51, 56, 82, 208, 214, 219], "current": [0, 2, 10, 11, 22, 26, 27, 29, 30, 36, 38, 40, 50, 51, 59, 67, 70, 71, 72, 74, 77, 79, 81, 96, 136, 141, 148, 153, 156, 177, 202, 211, 214, 219], "enforc": [0, 223], "contain": [0, 3, 7, 11, 22, 24, 26, 30, 32, 34, 49, 50, 51, 54, 55, 56, 58, 59, 65, 71, 72, 73, 75, 77, 79, 81, 96, 110, 112, 119, 121, 125, 143, 146, 148, 154, 155, 159, 168, 169, 198, 204, 208, 209, 214, 215, 216, 218, 219, 220], "multipl": [0, 10, 11, 26, 46, 48, 49, 50, 51, 52, 58, 88, 92, 100, 101, 125, 184, 214, 219, 220, 222], "paragraph": 0, "separ": [0, 26, 27, 29, 30, 49, 50, 52, 55, 59, 91, 214, 219], "newlin": 0, "paramet": [0, 7, 10, 11, 13, 15, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 49, 50, 54, 56, 57, 58, 59, 65, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 101, 102, 106, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 163, 168, 169, 171, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 208, 209, 214, 222, 223], "float": [0, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 51, 57, 70, 73, 75, 77, 78, 79, 81, 82, 88, 89, 90, 91, 96, 99, 100, 101, 102, 106, 108, 110, 111, 112, 115, 118, 119, 120, 122, 123, 124, 126, 127, 128, 134, 136, 139, 143, 148, 156, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 204, 208, 209], "e": [0, 1, 10, 11, 20, 21, 22, 23, 24, 26, 32, 34, 38, 39, 40, 46, 49, 50, 51, 52, 56, 58, 59, 71, 72, 73, 75, 77, 78, 79, 81, 88, 89, 90, 91, 96, 99, 100, 101, 102, 108, 111, 118, 124, 126, 134, 148, 157, 163, 191, 195, 204, 209, 213, 214, 215, 216, 219, 222, 223], "g": [0, 1, 2, 26, 36, 38, 40, 49, 51, 59, 71, 72, 73, 77, 78, 79, 81, 82, 88, 96, 100, 101, 102, 110, 111, 118, 126, 134, 148, 157, 213, 214, 217, 219, 220, 222, 223], "distanc": [0, 7, 20, 21, 22, 24, 26, 27, 29, 30, 49, 50, 51, 52, 56, 58, 96, 134, 153, 156, 174, 175, 220], "metr": [0, 51, 56, 58], "int": [0, 7, 10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 39, 40, 48, 51, 56, 57, 68, 71, 72, 73, 75, 77, 79, 81, 82, 89, 90, 91, 92, 99, 102, 106, 108, 110, 111, 112, 114, 115, 118, 119, 120, 121, 123, 125, 126, 134, 135, 138, 144, 146, 148, 153, 156, 157, 159, 163, 168, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 189, 190, 194, 196, 197, 202, 204, 209], "str": [0, 26, 27, 29, 30, 36, 39, 52, 58, 71, 72, 73, 77, 79, 81, 82, 88, 89, 90, 91, 99, 100, 101, 114, 116, 134, 148, 168, 169, 190, 200, 202], "default": [0, 7, 10, 11, 15, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 35, 36, 38, 40, 41, 42, 48, 51, 55, 56, 57, 58, 59, 65, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 88, 89, 90, 91, 92, 99, 100, 101, 102, 108, 110, 111, 112, 114, 115, 118, 119, 120, 124, 125, 126, 128, 134, 135, 136, 138, 144, 146, 148, 153, 154, 156, 159, 163, 168, 169, 174, 177, 179, 183, 184, 185, 188, 189, 190, 193, 195, 198, 202, 203, 204, 214, 216, 220, 222], "some": [0, 2, 3, 4, 26, 49, 50, 51, 54, 56, 57, 59, 73, 118, 120, 126, 134, 148, 209, 214, 216, 220, 222, 223, 225], "limit": [0, 7, 26, 30, 34, 39, 53, 56, 115, 120, 128, 216, 220], "from": [0, 1, 2, 3, 7, 11, 15, 20, 21, 22, 24, 26, 27, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 71, 72, 73, 75, 77, 78, 79, 81, 82, 96, 99, 102, 105, 106, 108, 110, 111, 112, 114, 115, 118, 119, 120, 123, 126, 127, 129, 132, 133, 134, 138, 141, 143, 148, 152, 153, 154, 156, 158, 166, 168, 169, 174, 175, 177, 186, 189, 190, 191, 194, 196, 198, 200, 202, 204, 208, 209, 210, 213, 214, 215, 219, 220, 222, 223], "rest": [0, 51, 56, 58], "do": [0, 2, 20, 26, 30, 34, 41, 42, 51, 55, 56, 59, 75, 96, 112, 148, 168, 169, 188, 200, 214, 216, 219, 220, 223], "slowli": 0, "multilin": 0, "entri": [0, 26, 27, 29, 30, 34, 71, 72, 81, 82, 96, 110, 134, 186, 214], "over": [0, 10, 11, 38, 49, 50, 51, 55, 57, 58, 92, 125, 134, 148, 177, 185, 195, 204, 206, 214, 215, 219, 220, 222], "don": [0, 2, 52, 56, 58, 59, 210], "t": [0, 2, 22, 24, 26, 30, 49, 52, 55, 56, 58, 59, 72, 134, 198, 210], "forget": [0, 210], "indent": [0, 52, 73], "return": [0, 7, 11, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 54, 56, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 106, 108, 110, 111, 112, 115, 118, 120, 123, 134, 146, 148, 152, 153, 154, 155, 156, 157, 158, 160, 169, 174, 175, 177, 182, 183, 184, 185, 186, 187, 189, 190, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 208, 209, 211, 214, 219, 223], "re": [0, 49, 50, 58, 219], "result": [0, 20, 26, 27, 29, 30, 34, 38, 51, 55, 56, 58, 96, 119, 126, 134, 137, 143, 166, 189, 190, 200, 201, 209, 219, 220], "exampl": [0, 3, 11, 26, 27, 29, 30, 34, 49, 50, 55, 56, 58, 61, 62, 67, 70, 71, 72, 73, 77, 79, 81, 82, 118, 148, 168, 169, 189, 210, 214, 215, 219, 220, 222, 223, 224], "block": [0, 58, 96, 110, 148, 222], "1": [0, 2, 7, 10, 11, 12, 20, 26, 27, 29, 30, 32, 34, 38, 39, 41, 42, 49, 51, 54, 56, 57, 58, 72, 75, 76, 82, 96, 102, 108, 110, 111, 112, 115, 118, 119, 122, 124, 125, 127, 128, 134, 135, 136, 144, 148, 153, 156, 157, 168, 169, 171, 177, 179, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 198, 204, 210, 213, 214, 215, 218, 219, 220], "3": [0, 2, 7, 10, 11, 23, 26, 27, 29, 30, 34, 36, 38, 39, 41, 42, 49, 50, 51, 53, 56, 58, 59, 73, 76, 77, 79, 81, 87, 91, 94, 96, 98, 106, 110, 114, 125, 128, 134, 135, 143, 171, 178, 179, 189, 190, 198, 200, 213], "4": [0, 2, 34, 51, 53, 58, 59, 67, 73, 76, 96, 114, 119, 190, 214], "section": [0, 11, 36, 39, 49, 51, 57, 58, 134, 219, 222], "numpydoc": [0, 2], "most": [0, 1, 2, 11, 26, 51, 53, 54, 55, 56, 58, 110, 174, 214, 219, 220, 223], "ones": [0, 51, 57, 58, 112, 219], "extend": [0, 10, 11, 51, 56, 154, 219], "yield": [0, 56, 148, 216], "see": [0, 2, 11, 22, 26, 35, 36, 38, 40, 49, 50, 51, 56, 57, 58, 73, 75, 76, 77, 79, 96, 112, 118, 123, 126, 134, 148, 177, 190, 213, 218, 219, 222], "note": [0, 2, 4, 7, 15, 20, 21, 22, 26, 27, 29, 30, 34, 38, 41, 42, 49, 57, 58, 59, 89, 90, 91, 96, 99, 108, 111, 112, 120, 143, 148, 152, 189, 202, 209, 222, 225], "titl": [0, 134], "underlin": 0, "same": [0, 7, 11, 20, 24, 26, 30, 41, 42, 49, 50, 51, 52, 58, 59, 73, 75, 77, 79, 81, 89, 90, 91, 99, 110, 112, 118, 120, 126, 159, 168, 169, 177, 188, 194, 206, 213, 214, 215, 219, 220, 222], "hyphen": 0, "length": [0, 7, 11, 20, 26, 27, 29, 30, 35, 36, 39, 41, 42, 51, 54, 56, 57, 58, 73, 75, 77, 79, 81, 89, 90, 91, 96, 99, 102, 110, 112, 123, 134, 136, 171, 177, 188, 204, 213, 219], "abov": [0, 1, 2, 7, 11, 26, 49, 51, 52, 54, 56, 58, 76, 110, 118, 119, 120, 159, 177, 182, 186, 187, 213, 222], "restructuredtext": 0, "consult": [0, 51], "basic": [0, 11, 42, 54, 73, 123, 135, 140, 162, 179], "summar": [0, 53], "publish": [0, 34, 134], "poetri": 0, "open": [0, 2, 51, 52, 55, 75, 134, 146, 152, 201, 214, 218], "pyproject": 0, "toml": [0, 2], "file": [0, 2, 7, 10, 11, 13, 23, 26, 27, 29, 30, 32, 34, 46, 48, 51, 52, 54, 56, 57, 65, 67, 73, 75, 76, 77, 79, 80, 81, 96, 112, 146, 148, 152, 153, 154, 155, 156, 158, 159, 160, 163, 166, 168, 169, 177, 189, 201, 204, 210, 218, 222], "root": [0, 2, 26, 56, 96, 148], "directori": [0, 2, 7, 15, 55, 57, 59, 68, 77, 79, 80, 81, 148, 168, 169, 189, 218], "under": [0, 26, 54, 57, 59, 62, 224], "tool": [0, 55, 58, 59], "name": [0, 7, 11, 26, 27, 28, 29, 30, 34, 41, 42, 46, 49, 50, 51, 54, 57, 58, 71, 72, 73, 75, 76, 77, 79, 81, 82, 88, 92, 93, 94, 96, 100, 101, 102, 106, 112, 114, 118, 134, 143, 148, 154, 158, 159, 160, 169, 177, 182, 183, 184, 185, 186, 187, 188, 201, 202, 205, 213, 219, 222], "2": [0, 2, 7, 11, 22, 24, 26, 30, 34, 38, 39, 49, 51, 56, 57, 58, 75, 76, 96, 102, 110, 112, 114, 115, 118, 119, 120, 125, 128, 134, 135, 138, 171, 174, 175, 177, 179, 182, 183, 184, 185, 186, 189, 190, 195, 204, 209, 213, 214, 215, 219, 220], "0": [0, 1, 2, 7, 10, 11, 20, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 72, 73, 75, 76, 82, 87, 96, 98, 102, 110, 112, 114, 115, 118, 119, 120, 124, 125, 127, 128, 134, 135, 136, 143, 144, 148, 153, 154, 156, 157, 171, 175, 177, 178, 179, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 206, 208, 209, 213, 214, 215, 218, 219, 220, 223], "semant": 0, "major": [0, 58, 146, 183, 204], "minor": [0, 146], "patch": 0, "maintain": [0, 214], "ensur": [0, 1, 2, 56, 73, 75, 134], "agre": [0, 56], "Then": [0, 26, 49, 51, 52, 58, 106, 114, 171, 202, 208, 214, 218, 222], "add": [0, 2, 41, 42, 51, 55, 56, 58, 59, 81, 82, 92, 100, 110, 116, 119, 120, 134, 141, 144, 168, 169, 202, 213, 216, 218, 219, 222], "21": [0, 96, 119], "accept": [0, 11, 51, 77, 79, 81, 189, 209, 219], "specif": [0, 26, 27, 29, 30, 34, 35, 38, 41, 42, 49, 50, 55, 56, 57, 73, 75, 77, 78, 79, 81, 92, 121, 148, 195, 201, 209, 219, 222], "greater": [0, 20, 26, 51, 56, 112], "ani": [0, 11, 22, 24, 26, 27, 29, 42, 49, 50, 51, 52, 56, 57, 58, 81, 88, 92, 96, 100, 101, 108, 110, 111, 114, 118, 144, 157, 159, 163, 166, 168, 194, 202, 214, 215, 216, 219, 222], "dev": [0, 2], "addition": [0, 215, 219], "requir": [0, 26, 27, 28, 29, 30, 52, 53, 55, 57, 73, 89, 90, 91, 99, 118, 129, 148, 169, 182, 183, 184, 186, 216, 219, 222], "extra": [0, 54, 56, 114, 202, 213], "order": [0, 2, 3, 7, 26, 49, 51, 52, 56, 58, 75, 89, 90, 91, 92, 96, 99, 102, 108, 111, 114, 118, 129, 138, 144, 163, 168, 175, 177, 182, 189, 194, 196, 203, 209, 214, 222], "rtd": 0, "theme": [0, 2], "instal": [0, 3, 4, 28, 30, 41, 42, 51, 55, 57, 59, 148, 218, 225], "apidoc": 0, "ext": 0, "autodoc": [0, 2], "modul": [0, 1, 2, 3, 5, 18, 19, 25, 31, 33, 49, 50, 54, 55, 56, 58, 59, 63, 64, 66, 69, 86, 192, 212, 214, 219, 221, 224, 225], "therefor": [0, 2, 41, 49, 50, 51, 55, 56, 81, 126, 152, 166, 214, 215, 220], "input": [0, 7, 11, 26, 30, 34, 48, 52, 56, 58, 71, 72, 75, 80, 110, 112, 125, 136, 146, 153, 154, 155, 156, 158, 163, 171, 186, 191, 195, 196, 209, 214, 219, 223], "howev": [0, 11, 26, 49, 51, 52, 54, 56, 57, 58, 134, 215, 216], "mani": [0, 26, 27, 29, 30, 34, 49, 50, 51, 52, 55, 56, 59, 121, 189, 204, 219], "case": [0, 2, 10, 11, 26, 27, 29, 30, 41, 42, 49, 51, 52, 55, 56, 57, 58, 77, 78, 79, 81, 92, 112, 118, 169, 190, 194, 214, 215, 219, 222], "extrem": [0, 22, 24, 51], "help": [0, 54, 58], "avail": [0, 2, 7, 11, 22, 23, 24, 26, 51, 52, 56, 57, 58, 62, 71, 72, 80, 112, 148, 163, 215, 224], "take": [0, 7, 20, 49, 51, 55, 56, 57, 58, 59, 73, 75, 82, 96, 112, 115, 134, 169, 174, 204, 214, 220, 222], "differ": [0, 20, 26, 27, 29, 30, 34, 35, 38, 41, 42, 49, 50, 51, 52, 54, 56, 58, 59, 62, 70, 71, 72, 75, 96, 102, 112, 118, 120, 125, 126, 136, 141, 143, 146, 158, 163, 166, 174, 175, 182, 183, 184, 185, 186, 187, 188, 200, 201, 204, 206, 214, 215, 216, 219, 220, 222, 224], "form": [0, 20, 26, 27, 28, 29, 30, 38, 56, 57, 59, 96, 115, 134, 177, 200, 220], "annot": [0, 62, 224], "script": [0, 2, 3, 7, 52, 53, 59, 74, 215, 220, 222], "modifi": [0, 2, 26, 27, 29, 30, 34, 58, 89, 90, 91, 99, 112, 188, 210, 214], "grip": 0, "place": [0, 15, 20, 52, 56, 57, 58, 59, 213, 214], "nuradioreco": [0, 1, 3, 4, 7, 32, 51, 53, 54, 55, 56, 57, 58, 59, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225], "folder": [0, 2, 34, 51, 55, 56, 57, 58, 75, 76, 77, 79, 114, 168, 169, 174, 175, 214, 218, 219], "insid": [0, 2, 219], "confus": [0, 26, 27, 29, 56, 219], "manual": [0, 1, 21, 58, 62, 73, 214, 224, 225], "onlin": [0, 2], "websit": [0, 2], "overview": [0, 1, 57, 59, 158], "page": [0, 49, 50, 53, 55, 58, 215, 216, 219, 225], "found": [0, 2, 3, 26, 27, 29, 30, 41, 54, 56, 57, 58, 59, 62, 73, 134, 143, 169, 214, 219, 223, 224], "templat": [0, 2, 96, 121, 125, 126, 143, 174, 175, 179, 192], "done": [0, 26, 51, 52, 55, 57, 75, 77, 79, 81, 174, 175, 188, 213, 216, 219, 220, 222], "make_doc": 0, "py": [0, 2, 11, 38, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 70, 73, 76, 102, 114, 202, 214, 215, 218, 220, 222], "build": [0, 42, 54], "html": [0, 118], "main": [0, 51, 59, 71, 72, 73, 77, 81, 102, 118, 215], "view": [0, 20, 30, 39, 56, 58, 96, 171, 206], "browser": [0, 214, 218], "symbol": [0, 51], "_": [0, 51], "long": [0, 56, 58, 89, 90, 91, 99, 112, 169, 188, 213, 214, 219, 220, 223], "nest": [0, 27, 29, 96, 204], "determin": [0, 11, 20, 26, 34, 49, 52, 54, 57, 58, 75, 76, 77, 78, 79, 81, 102, 121, 126, 134, 141, 143, 148, 171, 174, 175, 215, 220, 222], "level": [0, 7, 11, 20, 22, 24, 26, 27, 29, 30, 32, 49, 50, 56, 58, 73, 77, 79, 81, 82, 92, 96, 114, 146, 148, 154, 163, 168, 169, 202, 204, 219, 222], "subhead": 0, "subsect": 0, "split": [0, 10, 11, 48, 51, 52, 55, 159, 219], "commonli": [0, 57], "format": [0, 2, 34, 49, 50, 52, 55, 56, 59, 75, 88, 100, 101, 134, 148, 163, 219, 223], "italic": 0, "bold": 0, "singl": [0, 34, 38, 46, 49, 51, 52, 55, 71, 72, 77, 79, 81, 110, 114, 155, 166, 183, 184, 190, 202, 210, 219, 222], "bullet": 0, "point": [0, 2, 11, 26, 27, 29, 30, 34, 38, 41, 42, 49, 51, 54, 56, 57, 58, 59, 75, 78, 87, 94, 96, 98, 112, 119, 134, 174, 175, 177, 195, 200, 208, 214, 215, 216, 219, 220], "enumer": [0, 52, 55, 96, 219], "second": [0, 7, 10, 11, 22, 26, 30, 32, 51, 52, 56, 59, 75, 82, 96, 185, 215, 219, 223], "anoth": [0, 56, 57, 58, 59, 112, 159, 214, 219, 222], "sub": [0, 34, 49, 50, 51, 56], "notic": 0, "its": [0, 2, 34, 49, 51, 52, 56, 57, 58, 70, 77, 79, 81, 88, 92, 96, 100, 101, 114, 129, 144, 148, 202, 214, 216, 219, 223], "parent": [0, 7, 49, 92, 96, 114, 202, 219, 222], "similarli": [0, 214], "continu": [0, 26, 51, 52, 134], "last": [0, 20, 24, 34, 49, 56, 58, 96, 124, 146, 158, 213, 214, 222], "http": [0, 2, 11, 22, 24, 30, 35, 38, 40, 49, 51, 53, 57, 65, 115, 118, 119, 143, 148, 177, 190, 200, 213, 214, 218], "url": [0, 214], "com": [0, 2, 11, 30, 51, 53, 57, 65, 119, 148, 190], "trail": 0, "underscor": [0, 7], "For": [0, 2, 7, 11, 24, 26, 41, 42, 49, 51, 52, 54, 56, 57, 58, 59, 71, 72, 73, 76, 77, 81, 91, 134, 153, 156, 166, 210, 213, 214, 215, 220, 222, 223], "intern": [0, 20, 26, 27, 29, 30, 51, 58, 120, 214, 219, 223], "prefer": [0, 77, 79, 81], "instead": [0, 2, 10, 11, 26, 32, 51, 56, 73, 81, 102, 134, 148, 154, 171, 189, 195, 204, 210, 214, 215, 220, 223], "what": [0, 51, 56, 58, 71, 72, 114, 148, 159, 200, 204, 216, 222], "being": [0, 26, 27, 29, 30, 32, 51, 73, 81, 102, 112, 209, 214, 216], "doc": [0, 53, 118], "introduct": [0, 225], "render": [0, 11], "lead": [0, 56, 59, 89, 90, 91, 99, 108, 111, 143], "path": [0, 2, 7, 11, 15, 20, 26, 27, 29, 30, 32, 38, 49, 50, 51, 55, 56, 58, 65, 67, 68, 70, 75, 77, 79, 81, 96, 126, 148, 174, 175, 206, 211, 214, 218, 219], "ref": 0, "append": [0, 2, 11, 48, 52, 77, 79, 81, 124], "final": [0, 3, 26, 27, 29, 30, 49, 50, 51, 54, 58, 59, 62, 196, 214, 215, 222, 224], "class": [0, 7, 11, 20, 26, 27, 28, 29, 30, 32, 38, 41, 42, 46, 51, 57, 58, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 169, 171, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 202, 203, 204, 206, 217, 220, 222, 223], "etc": [0, 39, 49, 50, 54, 59, 157, 214], "mod": 0, "func": [0, 34], "respect": [0, 1, 2, 20, 26, 28, 51, 56, 73, 77, 81, 102, 155, 177, 198, 214], "logic": [0, 58, 106, 183, 184, 187, 204], "trace": [0, 2, 20, 22, 23, 24, 26, 27, 28, 29, 30, 34, 49, 50, 51, 52, 56, 58, 59, 77, 79, 81, 82, 89, 90, 91, 96, 99, 102, 110, 112, 115, 119, 121, 122, 123, 124, 127, 128, 132, 134, 136, 137, 139, 143, 148, 159, 168, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 191, 193, 196, 197, 200, 204, 209, 219], "framework": [0, 3, 49, 51, 54, 110, 112, 126, 143, 148, 188, 210, 212, 219, 220], "base_trac": [0, 86, 126, 143, 220], "direct": [0, 7, 10, 11, 21, 22, 24, 26, 27, 29, 30, 38, 41, 42, 49, 50, 51, 56, 57, 58, 59, 75, 77, 78, 79, 81, 87, 94, 96, 98, 115, 119, 125, 126, 128, 129, 134, 136, 157, 171, 174, 175, 179, 189, 190, 198, 200, 206, 209, 215, 219, 222], "languag": 0, "As": [0, 2, 46, 51, 52, 54, 56, 58, 219, 220, 222, 223], "r": [0, 10, 11, 20, 21, 22, 24, 26, 27, 29, 30, 36, 38, 49, 50, 51, 56, 57, 58, 59, 134, 174, 175, 198, 220], "5": [0, 26, 27, 29, 30, 34, 36, 49, 51, 52, 53, 54, 55, 56, 57, 58, 71, 72, 96, 106, 110, 120, 124, 125, 143, 157, 175, 183, 184, 186, 189, 190, 196, 204, 206, 210, 213, 219, 220, 223], "nuradiomc": [1, 3, 4, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 65, 67, 70, 75, 96, 102, 110, 126, 148, 211, 214, 219, 220, 222, 225], "cartesian": [1, 30, 49, 50, 177, 198], "surfac": [1, 11, 26, 27, 29, 30, 34, 38, 41, 42, 49, 52, 56, 58, 59, 70, 72, 79, 175, 186, 198, 213], "axi": [1, 11, 20, 21, 22, 24, 26, 30, 34, 52, 56, 58, 73, 75, 77, 79, 81, 87, 94, 96, 98, 134, 195, 200, 215, 220], "toward": [1, 87, 94, 96, 98, 213], "east": [1, 49, 58, 73, 75, 77, 78, 79, 81, 198, 215], "north": [1, 58, 73, 77, 78, 79, 81, 96], "z": [1, 10, 11, 26, 30, 35, 41, 42, 45, 51, 54, 57, 58, 79, 96, 134, 136, 174, 175, 178, 200, 215, 220], "upward": [1, 26, 73, 75, 77, 79, 81, 115, 215], "antenna": [1, 49, 50, 52, 56, 58, 59, 72, 73, 75, 77, 78, 79, 81, 96, 106, 115, 119, 126, 132, 134, 136, 137, 154, 156, 171, 175, 177, 179, 183, 184, 189, 190, 196, 209, 214, 216, 217, 220, 222], "posit": [1, 7, 10, 11, 20, 26, 36, 38, 41, 42, 45, 49, 51, 52, 54, 56, 57, 58, 59, 71, 72, 73, 75, 76, 77, 78, 79, 81, 91, 96, 118, 126, 134, 136, 143, 152, 153, 154, 156, 171, 174, 175, 177, 178, 189, 194, 198, 200, 209, 214, 215, 216, 219, 220], "typic": [1, 34, 41, 49, 52, 55, 58, 59, 91, 219], "center": [1, 11, 38, 39, 52, 73, 77, 81, 174, 175, 213, 220], "station": [1, 7, 11, 32, 34, 51, 58, 59, 61, 67, 71, 72, 73, 76, 77, 78, 79, 81, 82, 86, 88, 91, 92, 96, 100, 102, 105, 106, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 148, 152, 153, 154, 155, 156, 159, 166, 168, 169, 171, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 204, 208, 209, 214, 215, 216], "zenith": [1, 10, 11, 34, 38, 49, 50, 51, 58, 73, 75, 77, 78, 79, 81, 86, 87, 94, 96, 98, 115, 125, 128, 134, 152, 174, 190, 195, 198, 200, 206, 209, 215, 219], "theta": [1, 20, 21, 22, 24, 30, 34, 56, 58, 73, 75, 77, 78, 79, 81, 143, 198, 200, 213, 220], "deg": [1, 26, 34, 56, 82, 128, 204, 219, 220], "90deg": [1, 96, 115], "horizon": [1, 119], "180": [1, 52, 213, 215], "downward": [1, 26, 58, 59, 215], "azimuth": [1, 10, 11, 38, 49, 50, 51, 57, 58, 73, 75, 77, 78, 79, 81, 86, 87, 94, 96, 98, 115, 125, 128, 152, 175, 190, 198, 200, 206, 209, 215, 220], "phi": [1, 56, 57, 73, 75, 77, 78, 79, 81, 143, 175, 198, 200, 213], "count": [1, 26, 27, 29, 30, 34, 55, 73, 75, 77, 78, 79, 81, 112, 163, 177, 215, 219], "northward": [1, 215], "came": [1, 38], "opposit": [1, 38, 49], "propag": [1, 7, 11, 25, 26, 27, 29, 30, 32, 38, 49, 50, 51, 54, 56, 58, 59, 61, 73, 96, 133, 198, 220], "through": [1, 7, 23, 38, 41, 42, 49, 50, 51, 52, 54, 56, 57, 58, 73, 75, 88, 100, 101, 106, 115, 134, 146, 158, 163, 171, 188, 189, 214, 215, 218, 219], "earth": [1, 7, 11, 38, 49, 51, 58], "launch_vector": [1, 26, 27, 29, 30, 49, 50, 57], "askaryan": [1, 18, 20, 21, 24, 56, 59, 96, 220], "signal": [1, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 35, 39, 49, 50, 52, 58, 59, 61, 70, 71, 72, 73, 75, 77, 79, 81, 82, 96, 106, 108, 111, 115, 118, 121, 123, 126, 127, 128, 129, 132, 134, 135, 140, 143, 148, 157, 171, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 196, 198, 200, 208, 209, 216, 219, 220, 223], "emit": [1, 26, 56, 57, 96], "reach": [1, 11, 26, 27, 29, 30, 38, 49, 51, 56, 58, 174, 219], "quantiti": [1, 11, 72, 96, 123, 140, 200, 210], "auger": [1, 210], "print": [1, 26, 82, 204, 210, 214, 222, 223], "plot": [1, 2, 26, 33, 34, 39, 52, 53, 57, 59, 63, 82, 119, 134, 143, 171, 174, 175, 189, 195, 204, 218, 220], "convert": [1, 20, 34, 53, 58, 71, 80, 96, 112, 136, 148, 152, 191, 210, 214, 215], "dimension": [1, 34, 52, 56, 91, 210, 220], "conveni": [1, 34, 49, 50, 51, 55, 56, 88, 100, 101, 110, 194, 202], "encod": [1, 10, 11, 36, 51, 63, 75, 77, 148, 201], "pdg": [1, 7, 36, 49, 50, 51, 96, 205], "relev": [1, 7, 10, 11, 15, 26, 27, 29, 30, 34, 36, 49, 51, 54, 56, 59, 77, 88, 100, 101, 112, 157, 168, 169, 194, 197, 214, 215], "id": [1, 10, 11, 32, 34, 49, 50, 51, 58, 68, 71, 72, 73, 77, 79, 81, 82, 91, 92, 96, 98, 99, 100, 102, 106, 108, 110, 111, 115, 118, 120, 123, 125, 126, 135, 136, 143, 148, 152, 153, 154, 155, 163, 168, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 189, 190, 204, 205, 209, 214, 219], "u": [1, 10, 11, 51, 56, 57, 58, 216], "12": [1, 10, 11, 12, 20, 36, 51, 58, 96, 119], "14": [1, 10, 11, 12, 36, 51, 58, 96, 223], "16": [1, 10, 11, 12, 36, 51, 96, 102, 134, 177, 186, 204], "electron": [1, 10, 11, 36, 49, 51, 96, 124, 210, 216], "muon": [1, 7, 10, 11, 34, 36, 49], "tau": [1, 7, 10, 11, 22, 36, 40, 49, 51, 219], "overal": [1, 177, 222], "minu": [1, 11, 26, 51, 58], "sign": [1, 10, 11, 26, 36, 51, 143], "indic": [1, 7, 11, 41, 42, 51, 56, 72, 183, 209], "correspond": [1, 7, 11, 26, 27, 29, 30, 38, 40, 49, 52, 56, 75, 82, 91, 96, 99, 112, 126, 134, 136, 152, 174, 175, 188, 189, 198, 214, 215, 219, 222], "anti": [1, 10, 11, 36, 51], "tabl": [1, 7, 11, 15, 49, 51, 54, 148, 174, 175, 200, 214], "event": [1, 2, 7, 10, 11, 13, 21, 30, 32, 34, 39, 40, 48, 49, 50, 52, 55, 56, 58, 61, 81, 86, 88, 96, 100, 101, 102, 106, 108, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 138, 139, 140, 141, 143, 146, 148, 153, 154, 155, 156, 157, 158, 159, 163, 166, 169, 171, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 208, 222, 223, 224, 225], "6": [2, 10, 11, 22, 24, 34, 38, 39, 51, 96, 106, 110, 118, 125], "unix": [2, 73], "oper": [2, 20, 56, 58, 72, 82, 103, 142, 219], "system": [2, 11, 20, 38, 51, 57, 65, 75, 96, 106, 190, 192, 218, 220], "linux": 2, "maco": 2, "window": [2, 56, 58, 96, 102, 106, 118, 123, 124, 127, 134, 171, 177, 182, 183, 184, 185, 186, 187, 188, 193, 200, 204, 208], "subsystem": 2, "subpackag": [2, 60, 212], "import": [2, 3, 26, 27, 29, 30, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 73, 110, 119, 148, 166, 168, 214, 216, 219, 220, 222, 223], "cannot": [2, 56], "contribut": [2, 4, 49, 50, 51, 56, 225], "recent": 2, "download": [2, 15, 75, 213], "clone": 2, "nu": [2, 11, 30, 51, 53, 57, 96, 148, 171], "alreadi": [2, 7, 26, 27, 29, 30, 53, 54, 57, 72, 73, 77, 81, 110, 112, 126, 148, 159, 202, 209, 223], "up": [2, 10, 11, 22, 24, 26, 41, 42, 48, 49, 50, 51, 52, 55, 56, 89, 90, 91, 96, 99, 110, 114, 119, 120, 126, 169, 171, 174, 189, 198, 202, 214, 220], "navig": [2, 7, 51], "cd": [2, 55, 59], "python3": 2, "install_dev": 2, "launch": [2, 20, 26, 27, 29, 30, 49, 50, 57, 96], "interact": [2, 7, 10, 11, 21, 22, 24, 36, 38, 39, 40, 49, 50, 51, 56, 58, 59, 92, 96, 177, 220], "highli": 2, "recommend": [2, 26, 27, 29, 51, 56, 88, 100, 101, 112, 166, 169, 214, 220], "virtual": [2, 26], "environ": [2, 55, 72], "either": [2, 11, 20, 22, 24, 26, 41, 42, 56, 57, 58, 75, 77, 110, 126, 188, 191, 204], "m": [2, 7, 11, 22, 24, 30, 38, 51, 52, 54, 56, 57, 58, 96, 144, 189, 190, 195, 200, 223], "venv": 2, "name_of_venv": 2, "manag": 2, "conda": 2, "reason": [2, 51, 56, 177, 214, 216], "work": [2, 30, 42, 49, 50, 51, 54, 55, 56, 57, 59, 65, 67, 70, 71, 72, 75, 77, 79, 81, 102, 134, 143, 174, 175, 189, 214, 219, 220, 222], "addit": [2, 3, 11, 22, 23, 24, 26, 27, 29, 34, 49, 50, 51, 57, 70, 71, 72, 77, 91, 118, 134, 214, 217, 219, 222], "instruct": [2, 49, 50, 57], "export": [2, 33, 34, 55, 57, 69, 73], "profil": [2, 20, 21, 22, 26, 27, 29, 30, 41, 42, 54, 56, 57, 96, 126, 134], "termin": [2, 214], "zprofil": 2, "bashrc": 2, "zshrc": 2, "non": [2, 34, 36, 54, 56, 148, 166], "command": [2, 3, 59, 214], "scipi": [2, 110, 118, 138, 194, 195], "matplotlib": [2, 26, 53, 57, 58, 219, 220], "astropi": [2, 71, 72, 73, 77, 79, 81, 88, 100, 101, 148, 214], "tinydb": [2, 77], "serial": [2, 59, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 219], "aenum": 2, "h5py": [2, 49, 50, 52], "mysql": [2, 77, 214], "pymongo": [2, 71, 72], "dash": [2, 218], "plotli": 2, "peakutil": 2, "radiotool": [2, 55, 87, 94, 98, 134, 200], "newer": 2, "advanc": [2, 49, 56], "enum": [2, 96, 148, 158, 204, 219], "": [2, 7, 11, 26, 35, 36, 38, 51, 54, 56, 57, 58, 71, 72, 73, 75, 77, 81, 96, 102, 144, 157, 168, 177, 196, 198, 200, 203, 209, 210, 214, 216, 219], "hdf5": [2, 10, 11, 13, 23, 32, 34, 48, 51, 52, 58, 59, 62, 152, 153, 154, 155, 156, 219, 225], "uproot": [2, 148], "rno": [2, 56, 71, 72, 73, 82, 110, 111, 148, 213, 217, 220], "awkward": 2, "databas": [2, 63, 67, 69, 70, 71, 72, 73, 77, 79, 81, 82, 148, 217], "sql": [2, 76, 77, 79, 214], "datbas": 2, "mongodb": [2, 71, 72], "displai": [2, 56, 88, 100, 101, 210, 224, 225], "show": [2, 3, 34, 52, 54, 55, 57, 58, 82, 134, 195, 204, 219], "nuradiorecotempl": 2, "document": [2, 3, 7, 36, 51, 57, 58, 75, 77, 112, 213, 215], "readthedoc": 2, "our": [2, 3, 51, 52, 56, 58, 59, 112, 124, 213, 216], "docstr": [2, 219], "action": 2, "code": [2, 7, 11, 20, 26, 52, 54, 55, 56, 57, 58, 62, 73, 96, 118, 148, 210, 220, 222, 224, 225], "sphinx_rtd_them": 2, "debug": [2, 26, 27, 28, 29, 30, 32, 59, 73, 82, 105, 108, 111, 115, 117, 119, 120, 122, 123, 125, 127, 128, 132, 133, 134, 135, 136, 140, 143, 148, 152, 155, 157, 169, 171, 174, 175, 177, 178, 189, 204, 220, 222], "propos": [2, 7, 11, 15, 51, 134], "evtgen": [2, 51, 55, 60], "nuradiopropos": [2, 5, 11], "7": [2, 7, 11, 34, 35, 38, 51, 55, 96, 195], "particular": [2, 73, 92, 106, 182, 183, 184, 185, 186, 187], "eg": 2, "mac": 2, "kernel": 2, "too": [2, 56, 119, 214, 220], "old": [2, 72, 148, 216, 219], "comput": [2, 10, 11, 26, 27, 29, 30, 51, 52, 56, 77, 79, 81, 119, 123, 189, 191, 220], "cluster": [2, 15, 46, 51, 52, 61], "refer": [2, 26, 32, 38, 49, 50, 51, 56, 57, 58, 70, 76, 77, 79, 81, 101, 112, 118, 177, 198, 204, 206, 214, 215, 222], "step": [2, 30, 38, 52, 55, 59, 112, 134, 175, 177, 189, 213, 219, 220, 222], "guid": 2, "channelgalacticnoiseadd": [2, 103], "pygdsm": [2, 119], "telegraph": [2, 119], "speed": [2, 26, 56, 171, 220, 223], "analyt": [2, 22, 26, 27, 28, 29, 49, 50, 54, 58, 75, 171, 189, 193, 195], "rai": [2, 3, 11, 20, 24, 26, 27, 28, 29, 30, 34, 49, 50, 54, 56, 58, 59, 88, 91, 96, 99, 100, 101, 125, 126, 132, 135, 141, 171, 174, 175, 189, 195, 206, 219], "gsl": 2, "gsl_dir": 2, "On": [2, 55], "sudo": 2, "apt": 2, "libgsl": 2, "brew": 2, "homebrew": 2, "With": [2, 26, 56, 219], "compil": [2, 15, 35, 57], "cpp": [2, 26, 54], "tracer": [2, 11, 26, 27, 28, 29, 30, 42, 49, 50, 54], "signalprop": [2, 56, 57, 60], "sh": 2, "radiopropa": [2, 28, 30, 41, 42], "numer": [2, 20, 26, 27, 28, 29, 30, 56, 189, 193, 200, 210], "read": [2, 11, 26, 30, 56, 58, 59, 67, 70, 71, 72, 75, 82, 88, 96, 100, 101, 112, 146, 148, 153, 154, 155, 156, 158, 163, 168, 169, 201, 216], "arianna": [2, 55, 56, 63, 75, 77, 79, 81, 103, 163, 164, 183, 184, 204, 213, 214, 219], "snowshovel": [2, 103, 145, 219], "ara": [2, 23, 63, 75, 103, 213, 214], "welcom": 3, "two": [3, 11, 20, 26, 34, 41, 42, 49, 50, 51, 52, 56, 58, 59, 71, 72, 75, 112, 128, 159, 171, 174, 175, 190, 200, 204, 214, 215, 216, 219, 220], "packag": [3, 57, 60, 62, 119, 212, 224], "mont": [3, 56, 62], "carlo": [3, 56, 62], "high": [3, 22, 24, 51, 56, 58, 59, 102, 108, 111, 183, 184, 204], "energi": [3, 7, 10, 11, 20, 21, 22, 24, 34, 36, 39, 40, 49, 50, 51, 52, 53, 55, 56, 58, 59, 86, 96, 129, 143, 157, 171, 189, 193, 195, 219, 220], "cosmic": [3, 88, 91, 96, 100, 101, 125, 135, 141, 189, 195, 206], "familiar": 3, "yourself": 3, "how": [3, 26, 27, 29, 30, 46, 49, 51, 52, 53, 54, 55, 56, 58, 108, 111, 121, 143, 204], "self": [3, 26, 51, 54, 58, 71, 72, 73, 148, 154, 174, 175, 222], "subfold": [3, 55, 62, 168, 218, 224], "hand": [3, 57, 62, 224], "webinar": [3, 58, 62, 224], "pip": 3, "version": [3, 15, 22, 26, 49, 50, 56, 57, 114, 146, 160, 192, 201, 210, 214], "__path__": 3, "nuradiomc_path": 3, "locat": [3, 7, 56, 58, 68, 81, 121, 136, 174, 200, 220, 222], "convent": [4, 49, 50, 51, 56, 160, 198, 215, 225], "nuradiomctoarasim": 5, "secondaryproperti": [5, 7, 51], "particle_cod": [5, 7], "is_em_primari": [5, 7], "is_had_primari": [5, 7], "is_shower_primari": [5, 7], "proposalfunct": [5, 7, 51], "get_secondaries_arrai": [5, 7, 11, 51], "get_decai": [5, 7, 51], "create_tau_tab": 5, "generate_cylind": 5, "generate_unforc": [5, 51], "generate_eventlist_cylind": [5, 10, 11, 51, 55], "load_input_hdf5": [5, 11], "get_tau_95_length": [5, 11], "write_events_to_hdf5": [5, 11], "primary_energy_from_deposit": [5, 11], "ice_cube_nu_fit": [5, 11], "ice_cube_nu_fit_2022": [5, 11], "get_energy_from_flux": [5, 11], "get_product_position_tim": [5, 11], "get_energi": [5, 11], "set_volume_attribut": [5, 11], "generate_vertex_posit": [5, 11], "intersection_box_rai": [5, 11], "get_intersection_volume_neutrino": [5, 11], "is_in_fiducial_volum": [5, 11], "mask_arrival_azimuth": [5, 11], "generate_surface_muon": [5, 11, 51], "generator_ascii": 5, "generate_eventlist": [5, 12], "generator_skeleton": 5, "generate_my_ev": [5, 13], "hdf5_to_ascii": 5, "proposal_table_manag": 5, "produce_proposal_t": [5, 15], "get_compil": [5, 15], "produce_proposal_tables_tarbal": [5, 15], "download_proposal_t": [5, 15], "readaraeventlist": 5, "read_ara_eventlist": [5, 16], "convert_to_hdf5": [5, 16], "readeventlist_ascii": 5, "read_eventlist": [5, 17], "shower_typ": [7, 20, 22, 24, 49, 50, 51, 56, 58, 171, 220], "parent_energi": 7, "object": [7, 11, 20, 26, 27, 29, 30, 32, 38, 40, 41, 42, 46, 51, 52, 54, 56, 58, 71, 72, 73, 75, 76, 77, 78, 82, 87, 88, 89, 91, 92, 93, 97, 99, 100, 101, 102, 105, 106, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 169, 171, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 204, 206, 214, 216, 219, 220], "store": [7, 11, 23, 34, 49, 50, 51, 52, 55, 57, 73, 81, 82, 88, 89, 90, 91, 92, 96, 99, 100, 101, 102, 110, 112, 126, 134, 137, 148, 169, 174, 175, 177, 186, 188, 213, 214, 216, 219, 220], "properti": [7, 11, 32, 34, 49, 50, 51, 54, 58, 77, 79, 81, 112, 126, 134, 171, 214, 216, 217, 219, 222, 223], "secondari": [7, 11, 30, 49, 51, 58, 102], "particl": [7, 10, 11, 22, 36, 49, 50, 56, 86, 92, 96, 205], "vertex": [7, 10, 11, 20, 21, 22, 24, 38, 45, 49, 50, 51, 56, 58, 86, 96, 126, 171, 174, 175, 221], "whether": [7, 30, 49, 50, 51, 56, 57, 58, 76, 106, 110, 219], "shower": [7, 11, 20, 21, 22, 24, 30, 34, 49, 50, 51, 58, 87, 91, 92, 94, 96, 98, 99, 100, 126, 129, 133, 134, 152, 171, 214], "induc": [7, 11, 22, 51, 56, 67, 96, 105, 108, 111], "hadron": [7, 20, 22, 24, 40, 51, 56], "electromagnet": [7, 20, 22, 24, 40, 49, 51, 56, 96, 200], "accord": [7, 11, 20, 36, 51, 57, 58, 75, 134, 152, 171, 177, 188, 200], "particle_nam": [7, 51, 192], "pp_type": 7, "integ": [7, 10, 11, 26, 27, 29, 30, 34, 36, 49, 51, 81, 92, 112, 128, 143, 153, 156, 174, 175, 177, 208, 209], "interaction_typ": [7, 11, 47, 49, 50, 51, 86, 96], "particle_typ": 7, "none": [7, 10, 11, 15, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 38, 40, 41, 42, 45, 48, 51, 52, 54, 56, 58, 67, 71, 72, 73, 75, 77, 79, 81, 82, 88, 89, 90, 91, 92, 96, 98, 99, 100, 101, 102, 106, 108, 110, 111, 112, 114, 115, 118, 119, 120, 121, 123, 125, 127, 128, 134, 135, 136, 137, 138, 140, 143, 146, 148, 152, 153, 154, 156, 159, 163, 168, 169, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 202, 204, 207, 208, 209, 214, 222], "argument": [7, 26, 27, 29, 30, 32, 40, 51, 56, 58, 59, 71, 72, 73, 75, 76, 82, 92, 134, 136, 148, 185, 189, 209], "type": [7, 11, 20, 22, 24, 26, 27, 29, 30, 36, 38, 39, 40, 49, 51, 56, 58, 59, 71, 72, 73, 77, 78, 79, 81, 86, 88, 89, 90, 91, 96, 99, 100, 101, 102, 112, 118, 120, 126, 136, 141, 143, 148, 163, 166, 171, 174, 175, 179, 195, 196, 203, 204, 214, 215, 218, 219, 220], "true": [7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 49, 50, 51, 52, 53, 56, 57, 58, 71, 72, 73, 77, 79, 81, 82, 88, 92, 100, 101, 102, 108, 110, 111, 112, 119, 120, 126, 127, 128, 134, 143, 146, 148, 154, 157, 158, 159, 163, 168, 169, 171, 174, 175, 177, 178, 183, 184, 185, 189, 190, 204, 209, 214, 216, 223], "primari": [7, 10, 11, 51, 71, 72, 73, 96, 102, 177, 216], "fals": [7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 49, 50, 51, 53, 56, 57, 58, 71, 72, 73, 77, 79, 81, 82, 88, 89, 90, 91, 92, 99, 100, 101, 102, 105, 108, 110, 111, 112, 115, 117, 119, 120, 122, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 140, 143, 146, 148, 152, 154, 155, 157, 158, 159, 163, 168, 169, 171, 174, 175, 177, 179, 183, 184, 185, 189, 190, 195, 204, 209], "otherwis": [7, 21, 30, 49, 50, 58, 72, 77, 79, 81, 92, 102, 105, 108, 111, 120, 126, 148, 169, 188, 190], "pp": 7, "bool": [7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 32, 34, 51, 56, 71, 72, 73, 77, 79, 81, 82, 88, 92, 100, 101, 108, 110, 111, 112, 119, 120, 123, 125, 128, 134, 135, 136, 140, 143, 148, 154, 157, 159, 163, 168, 169, 171, 177, 179, 182, 183, 184, 185, 187, 189, 190, 195, 204], "arg": [7, 20, 26, 27, 29, 30, 34, 42, 58, 71, 72, 75, 76, 77, 79, 81, 144], "kwarg": [7, 11, 20, 22, 23, 26, 27, 29, 30, 32, 42, 46, 47, 71, 72, 75, 76, 77, 79, 81, 92, 144], "serv": [7, 51, 219], "doubl": [7, 41, 51, 52, 134, 153, 200], "outsid": [7, 11, 49, 51, 59, 123, 127, 163], "mismatch": 7, "config_fil": [7, 11, 15, 32, 51, 55, 58], "string": [7, 10, 11, 13, 15, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 38, 40, 41, 42, 48, 51, 56, 57, 65, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 88, 89, 90, 91, 92, 99, 100, 101, 102, 106, 108, 111, 112, 118, 120, 123, 127, 138, 141, 143, 146, 148, 154, 158, 159, 163, 169, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 201, 204, 220], "own": [7, 11, 49, 51, 56, 58, 59, 96, 219, 223], "config": [7, 11, 26, 27, 29, 30, 32, 47, 49, 50, 51, 54, 55, 57, 96, 112, 134], "choos": [7, 11, 26, 27, 29, 30, 34, 51, 56, 58, 76, 112, 156, 195, 215], "among": [7, 11, 51, 71, 72, 73], "southpol": [7, 11, 15, 51, 52, 199], "south": [7, 11, 35, 51, 54, 56, 58, 77, 79, 81, 213], "pole": [7, 11, 35, 51, 54, 56, 58, 77, 79, 81, 191, 213], "spheric": [7, 11, 49, 51, 56, 57, 178, 198, 200], "consist": [7, 11, 26, 51, 52, 56, 59, 73, 91, 99, 214, 220, 222, 223], "km": [7, 11, 34, 51, 55, 56, 59, 210, 220, 223], "deep": [7, 11, 26, 34, 40, 41, 42, 51, 52, 56, 213], "layer": [7, 11, 26, 27, 29, 30, 38, 41, 42, 51, 54, 56, 57, 58, 200], "ic": [7, 11, 22, 26, 27, 29, 30, 32, 34, 35, 36, 41, 42, 51, 56, 57, 58, 59, 61, 70, 96, 126, 133, 171, 192, 209, 213, 219, 220], "bedrock": [7, 11, 41, 42, 51], "air": [7, 11, 26, 51, 54, 75, 77, 78, 79, 81, 96, 129, 133, 198, 209, 213, 214], "mooresbai": [7, 11, 15, 51, 58, 77, 79, 81, 129], "moor": [7, 11, 26, 35, 51, 54, 58], "bai": [7, 11, 26, 35, 51, 54, 58], "576": [7, 11, 51, 54], "2234": [7, 11, 51], "water": [7, 11, 26, 34, 36, 51, 58], "infic": [7, 11, 15, 51], "medium": [7, 11, 26, 27, 29, 30, 32, 33, 34, 36, 42, 51, 54, 56, 57, 126, 198, 213, 220], "infinit": [7, 11, 30, 51, 77, 78, 79, 81, 213], "greenland": [7, 11, 15, 35, 41, 51, 54, 56, 58, 73], "summit": [7, 11, 41, 51, 73, 152, 214], "log_level": [7, 11, 26, 27, 29, 30, 32, 73, 82, 115, 122, 123, 128, 136, 137, 140, 146, 148, 156, 158, 159, 168, 169, 177, 183, 188, 204], "log": [7, 11, 26, 27, 29, 30, 32, 39, 51, 56, 73, 82, 114, 146, 148, 154, 158, 168, 169, 192, 204, 213], "tables_path": [7, 11, 15], "save": [7, 10, 11, 34, 49, 50, 51, 52, 55, 58, 59, 72, 75, 77, 134, 159, 171, 174, 175, 189, 214, 215, 219, 220, 222], "regener": [7, 219], "sever": [7, 10, 11, 49, 50, 51, 55, 56, 58, 82, 91, 125, 146, 158, 166, 177, 200, 214, 219, 222], "minut": 7, "everi": [7, 49, 50, 51, 52, 56, 58, 59, 71, 72, 112, 119, 169, 214, 219, 220, 222, 223], "execut": [7, 51, 55, 57, 59, 114, 141, 171, 174, 189, 190, 214, 222], "proposal_t": [7, 15], "seed": [7, 11, 20, 22, 24, 58, 120, 153, 156, 168, 169], "upper_energy_limit": 7, "ev": [7, 34, 51, 55, 58, 59, 195, 210, 220], "There": [7, 56, 58, 62, 214, 224], "error": [7, 26, 27, 29, 30, 73, 92, 110, 148, 169, 177, 195, 214], "inject": 7, "valu": [7, 20, 21, 24, 26, 27, 29, 30, 34, 38, 40, 51, 52, 58, 72, 73, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 106, 108, 110, 111, 112, 114, 119, 134, 136, 148, 154, 163, 169, 171, 177, 183, 184, 188, 189, 190, 196, 202, 204, 210, 214, 215, 216, 222, 223], "create_new": [7, 77, 223], "forc": [7, 51, 77, 79, 81, 123, 141, 148, 163, 166, 168, 169, 190], "creation": [7, 30, 51, 77, 112, 223], "By": [7, 51, 73, 77, 126, 169, 198, 203, 214, 220, 222], "__init__": [7, 51, 54, 77, 79, 146, 214, 222], "singleton": [7, 77, 192, 203], "metaclass": [7, 77, 192], "energy_leptons_nu": 7, "lepton_cod": 7, "lepton_positions_nu": 7, "lepton_direct": 7, "low_nu": [7, 51], "500000000000000": 7, "propagation_length_nu": 7, "1000000": [7, 46], "min_energy_loss_nu": [7, 51], "propagate_decay_muon": [7, 51], "lepton": [7, 11, 22, 40, 49, 51], "list": [7, 10, 11, 24, 26, 27, 29, 30, 32, 34, 49, 50, 51, 52, 55, 58, 71, 72, 73, 75, 77, 79, 81, 82, 89, 90, 91, 92, 96, 99, 100, 102, 110, 112, 115, 118, 119, 120, 121, 125, 127, 128, 134, 135, 143, 146, 148, 153, 154, 155, 156, 157, 163, 168, 169, 175, 177, 179, 182, 183, 186, 194, 204, 213, 214, 215, 216], "arrai": [7, 10, 11, 20, 22, 23, 24, 26, 27, 29, 30, 34, 36, 38, 39, 40, 41, 42, 45, 49, 50, 51, 52, 56, 57, 58, 70, 73, 75, 77, 79, 81, 82, 87, 89, 90, 91, 94, 98, 99, 102, 106, 108, 110, 111, 112, 115, 118, 119, 120, 126, 128, 134, 138, 158, 163, 171, 174, 175, 177, 182, 183, 184, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198, 200, 204, 208, 209, 214], "tupl": [7, 11, 26, 34, 38, 51, 56, 77, 79, 81, 91, 99, 102, 110, 144, 146, 148, 196, 208, 209], "normalis": [7, 196], "low": [7, 51, 52, 58, 102, 148, 163, 183, 184, 204, 208, 213, 220], "control": [7, 22, 26, 51, 56, 58, 71, 72, 96, 146, 168, 177], "minimum": [7, 10, 11, 40, 50, 51, 56, 57, 58, 96, 106, 108, 111, 120, 156, 175, 189, 196], "discard": 7, "maximum": [7, 10, 11, 20, 23, 26, 27, 29, 30, 34, 40, 49, 50, 51, 52, 56, 57, 58, 96, 102, 106, 108, 110, 111, 112, 118, 120, 121, 123, 126, 132, 134, 143, 146, 148, 153, 156, 159, 174, 175, 177, 186, 194, 196, 208, 215, 220], "select": [7, 20, 49, 52, 71, 72, 73, 76, 127, 143, 148, 153, 156, 157, 169, 214, 216, 218], "decai": [7, 40, 51, 56], "secondaries_arrai": [7, 51], "2d": [7, 23, 26, 41, 42, 51, 52, 56, 57, 134, 152, 174, 177], "dimens": [7, 26, 27, 29, 30, 34, 51, 56, 220], "index": [7, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 38, 41, 42, 49, 50, 54, 56, 57, 75, 97, 115, 125, 126, 128, 134, 144, 148, 177, 198, 200, 204, 213, 214, 218, 219, 225], "produc": [7, 11, 15, 45, 49, 51, 59, 82, 119, 124, 166, 171, 174, 219, 220], "100000000000000": 7, "decays_arrai": 7, "element": [7, 11, 51, 56, 219], "filenam": [10, 11, 12, 13, 16, 17, 32, 34, 37, 43, 48, 51, 52, 55, 58, 73, 77, 146, 158, 159, 169, 201, 204, 218], "n_event": [10, 11, 12, 13, 40, 49, 50, 51, 55, 86, 96], "emin": [10, 11, 12, 49, 50, 51, 52, 55, 86, 96], "emax": [10, 11, 12, 49, 50, 51, 55, 86, 96], "full_rmin": [10, 51], "full_rmax": [10, 51], "full_zmin": [10, 51], "full_zmax": [10, 51], "thetamin": [10, 11, 34, 49, 50, 51, 86, 96], "thetamax": [10, 11, 49, 50, 51, 86, 96], "141592653589793": [10, 11, 34], "phimin": [10, 11, 49, 50, 51, 86, 96], "phimax": [10, 11, 49, 50, 51, 86, 96], "283185307179586": [10, 11, 39], "start_event_id": [10, 11, 12, 49, 50, 51, 86, 96], "flavor": [10, 11, 12, 15, 20, 36, 38, 47, 49, 50, 51, 59, 86, 96], "n_events_per_fil": [10, 11, 48, 51, 55], "spectrum": [10, 11, 21, 22, 23, 24, 51, 56, 89, 90, 91, 96, 99, 110, 112, 120, 143, 189, 195, 197, 209, 222, 223], "log_uniform": [10, 11, 51], "start_file_id": [10, 11, 51], "charg": [10, 11, 20, 22, 36, 51, 56, 59, 96, 210], "currend": [10, 11, 51], "neutral": [10, 11, 36, 51, 59, 96], "inelastivii": [10, 11], "distribut": [10, 11, 24, 40, 45, 46, 51, 56, 110, 120, 134, 143, 153, 156, 169], "output": [10, 11, 13, 15, 22, 23, 24, 26, 27, 29, 30, 32, 34, 46, 48, 51, 53, 56, 58, 59, 62, 75, 112, 123, 136, 159, 169, 177, 196, 208, 219, 222, 223, 225], "number": [10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 36, 39, 40, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 68, 72, 73, 75, 77, 79, 81, 89, 90, 91, 96, 99, 102, 106, 110, 112, 118, 119, 120, 121, 143, 146, 148, 153, 154, 155, 156, 157, 159, 163, 168, 169, 174, 175, 177, 182, 183, 184, 185, 186, 187, 194, 196, 197, 204, 209, 214, 215, 219, 223], "randomli": [10, 11, 20, 51, 153, 156, 169], "chosen": [10, 11, 26, 51, 52, 56, 89, 90, 91, 99, 112, 166, 190, 208, 219], "assum": [10, 11, 26, 34, 38, 51, 52, 56, 58, 75, 126, 136, 146, 158, 162, 190, 191, 195, 198, 204, 213, 214, 220], "uniform": [10, 11, 41, 51], "logarithm": [10, 11, 34, 51, 75], "lower": [10, 11, 34, 41, 51, 56, 89, 90, 91, 99, 112, 118, 119, 126, 134, 143, 148, 157, 175, 189, 194, 195, 202, 219], "coordin": [10, 11, 20, 26, 30, 38, 41, 42, 49, 50, 51, 56, 57, 58, 75, 77, 78, 79, 81, 96, 134, 152, 156, 174, 175, 177, 198, 200, 220], "volum": [10, 11, 32, 34, 39, 49, 50, 52, 53, 55, 56, 58, 61, 86, 96, 152, 175, 220], "fiduci": [10, 11, 49, 50, 51, 96], "vertic": [10, 11, 26, 45, 49, 50, 51, 57, 58, 59, 174, 177, 213, 215], "upper": [10, 11, 34, 41, 51, 52, 89, 90, 91, 99, 118, 119, 126, 134, 143, 148, 157, 175, 189, 194, 195, 219], "5x": 10, "angl": [10, 11, 20, 21, 22, 24, 26, 27, 29, 30, 34, 38, 39, 49, 51, 56, 57, 58, 75, 77, 78, 79, 81, 87, 94, 96, 98, 102, 115, 125, 128, 134, 152, 171, 177, 189, 195, 198, 200, 204, 206, 215, 219, 220], "arriv": [10, 11, 26, 30, 49, 50, 51, 56, 58, 87, 94, 96, 98, 115, 126, 128, 134, 157, 198, 220], "start_ev": [10, 11, 51], "pdf": [10, 11, 40, 51, 53, 115, 177], "scheme": [10, 11, 36, 51], "neg": [10, 11, 26, 36, 38, 51, 56, 143, 223], "per": [10, 11, 20, 26, 34, 38, 39, 48, 49, 50, 51, 52, 55, 56, 58, 73, 77, 79, 81, 102, 110, 118, 120, 136, 148, 177, 182, 183, 184, 185, 186, 187, 191, 204, 206], "smaller": [10, 11, 26, 51, 55, 58, 108, 111, 220], "than": [10, 11, 26, 30, 34, 49, 50, 51, 56, 58, 73, 75, 89, 90, 91, 99, 108, 111, 112, 125, 134, 159, 177, 204, 209], "probabl": [10, 11, 38, 49, 51, 52, 58, 208], "uniformli": [10, 11, 34, 51], "data": [10, 11, 15, 26, 27, 29, 30, 32, 34, 52, 54, 55, 56, 59, 65, 71, 72, 73, 75, 81, 82, 92, 96, 105, 108, 111, 119, 120, 121, 122, 134, 136, 146, 148, 159, 162, 163, 166, 168, 169, 188, 191, 195, 210, 213, 214, 215, 218, 220, 222, 224, 225], "deposit": [10, 11, 34, 49, 50, 51, 86, 96], "memori": [11, 56, 75, 77, 220], "fin": [11, 52], "dictionari": [11, 24, 26, 27, 29, 30, 32, 34, 42, 49, 50, 51, 71, 72, 73, 76, 77, 79, 81, 88, 96, 100, 101, 102, 123, 136, 143, 148, 159, 163, 168, 169, 171, 177, 188, 219], "fit": [11, 26, 51, 54, 56, 58, 96, 110, 115, 128, 134, 143, 148, 169, 171, 178, 179, 186, 189], "95": [11, 51, 58], "percentil": [11, 51], "track": [11, 26, 49, 50, 55, 56, 114, 214, 223], "calcul": [11, 20, 21, 22, 24, 26, 27, 29, 30, 32, 34, 36, 38, 39, 40, 49, 51, 52, 54, 55, 56, 58, 61, 73, 75, 96, 102, 106, 119, 123, 125, 126, 132, 135, 140, 143, 152, 156, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 189, 195, 196, 198, 200, 204, 206, 208, 209, 220, 222, 223], "largest": [11, 56, 134, 174, 213, 220], "data_set": 11, "attribut": [11, 32, 38, 55, 57, 148, 202], "write": [11, 26, 27, 29, 30, 52, 54, 55, 58, 88, 100, 101, 159, 186, 210], "dataset": [11, 49, 50, 148], "easi": [11, 56, 59, 214, 216, 219], "multiprocess": 11, "desir": [11, 23, 48, 51, 57, 115, 120, 121, 122, 139, 157, 177], "part000x": [11, 48], "dict": [11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 71, 72, 73, 75, 77, 79, 81, 88, 96, 100, 101, 102, 110, 118, 120, 123, 148, 168, 169, 177, 182, 183, 184, 185, 186, 187, 188, 194], "meta": [11, 59, 91], "additional_interact": 11, "potenti": [11, 20, 49, 56], "edep": 11, "ccnc": [11, 20, 40, 86, 96], "inelast": [11, 33, 49, 50, 51, 86, 96], "nc": [11, 36, 40, 49, 51, 96], "cc": [11, 20, 36, 40, 49, 51, 96], "slope": [11, 58, 96, 143, 189, 193], "19": [11, 58, 96, 102, 186], "offset": [11, 26, 79, 96, 110, 112, 121, 148, 174, 177, 204], "01": [11, 26, 30, 52, 58, 68, 119, 208, 214], "37": [11, 54], "44": [11, 39], "flux": [11, 33, 51, 195], "rnd": [11, 40], "minumum": 11, "solid": [11, 34, 39, 51, 195], "area": [11, 34, 38, 49, 50, 51, 56, 86, 96, 152, 153, 156, 174, 195], "random": [11, 20, 22, 24, 40, 58, 59, 112, 120, 153, 156, 163, 166, 168, 169], "product": [11, 40, 51, 56], "ie": 11, "secondary_properti": 11, "d": [11, 22, 24, 25, 26, 34, 36, 38, 52, 56, 57, 58, 75, 134, 195, 213, 223], "elaps": 11, "sinc": [11, 56, 57, 58, 96, 112, 114, 119, 120, 209, 213, 214, 219, 223], "present": [11, 26, 27, 29, 30, 51, 55, 56, 58, 75, 77, 79, 81, 110, 159, 169, 202], "spectrum_typ": 11, "enrgi": 11, "certain": [11, 39, 49, 50, 52, 54, 57, 58, 88, 100, 101, 153, 157, 216, 219], "total": [11, 36, 39, 49, 50, 51, 52, 55, 82, 96, 148, 204, 209], "minim": [11, 26, 51, 52, 108, 110, 111, 143], "icecub": [11, 51], "2017": [11, 22, 51, 52, 58], "astrophys": [11, 51], "measur": [11, 51, 52, 56, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 108, 111, 120, 169, 186, 190, 195, 215, 216, 219, 220], "sampl": [11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 40, 49, 50, 51, 52, 56, 58, 59, 73, 77, 79, 81, 89, 90, 91, 96, 99, 110, 112, 120, 121, 122, 134, 136, 139, 143, 148, 153, 156, 166, 169, 177, 183, 184, 193, 196, 197, 200, 204, 209, 215, 219, 220, 223], "doi": [11, 22, 24, 34, 35, 38, 40, 49, 51, 134], "org": [11, 22, 24, 35, 38, 40, 49, 51, 115, 118, 119, 143, 177, 200, 213], "10": [11, 20, 21, 22, 24, 34, 35, 38, 40, 46, 49, 51, 55, 58, 59, 89, 90, 91, 96, 99, 118, 134, 140, 146, 153, 156, 178, 184, 185, 189, 190], "22323": [11, 49, 51], "301": [11, 51], "1005": [11, 51], "gzk": [11, 51], "van": [11, 51], "vliet": [11, 51], "et": [11, 36, 51, 58, 119], "al": [11, 36, 51, 58, 119], "2019": [11, 51, 56], "arxiv": [11, 35, 40, 51, 115, 119, 134, 143, 177], "ab": [11, 35, 49, 51, 52, 119, 134, 143], "1901": [11, 51], "01899v1": [11, 51], "proton": [11, 51], "fraction": [11, 20, 26, 27, 29, 30, 38, 40, 41, 42, 51, 52, 58, 59, 108, 111, 166], "get_proton_10": 11, "sensit": [11, 52, 55, 61, 215], "e2_fluxes3": [11, 53], "ta": 11, "po": [11, 73, 78, 134], "sissa": 11, "395": [11, 49], "338": 11, "combin": [11, 34, 49, 50, 51, 52, 56, 71, 72, 73, 82, 148, 163, 168, 222], "cosmogen": [11, 51], "2022": 11, "helper": [11, 26, 27, 29, 30, 75, 77, 108, 111, 118, 195, 198, 223], "interpret": [11, 22, 23, 24, 56, 76, 88, 100, 101, 110, 120, 134], "dictinari": [11, 148], "rmin": [11, 49, 50, 51, 86, 96], "rmax": [11, 45, 49, 50, 51, 86, 96], "zmin": [11, 45, 49, 50, 51, 86, 96], "zmax": [11, 49, 50, 51, 86, 96], "xmin": [11, 40, 49, 86, 96, 156], "xmax": [11, 20, 40, 49, 56, 86, 96, 134, 156], "ymin": [11, 49, 86, 96, 156], "ymax": [11, 40, 49, 86, 96, 156], "explan": [11, 56, 58, 73], "blow": 11, "mandatori": [11, 58], "full": [11, 20, 26, 34, 46, 51, 52, 56, 59, 148, 204, 214, 219, 220], "end": [11, 26, 27, 29, 30, 32, 46, 55, 58, 72, 96, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 196, 209, 222], "pass": [11, 26, 27, 29, 32, 38, 51, 56, 58, 71, 72, 73, 75, 76, 77, 79, 81, 106, 110, 114, 118, 123, 143, 148, 153, 154, 156, 159, 168, 174, 189, 196, 202, 208, 214, 219, 223], "configur": [11, 15, 26, 27, 29, 30, 51, 54, 56, 57, 59, 61, 71, 72, 73, 77, 79, 81, 112, 148, 202, 214, 222], "threshold": [11, 51, 52, 58, 96, 102, 106, 177, 182, 183, 184, 185, 186, 187, 189, 204, 219], "within": [11, 34, 49, 50, 51, 59, 134, 153, 156, 182], "mu": [11, 21, 51, 56], "trigger": [11, 32, 34, 46, 49, 50, 51, 52, 55, 56, 58, 59, 70, 73, 77, 79, 81, 86, 88, 92, 96, 100, 101, 103, 106, 112, 123, 148, 163, 166, 168, 169, 177, 188, 204, 208, 215], "obvious": 11, "sens": [11, 56, 59, 222], "henc": [11, 26, 27, 29, 30, 52, 55, 56, 186, 216], "determind": 11, "depend": [11, 26, 27, 29, 30, 35, 51, 54, 56, 57, 58, 70, 71, 72, 76, 77, 79, 81, 134, 148, 171, 182, 186, 214, 216, 218, 220], "free": [11, 56], "tl": 11, "dr": 11, "larg": [11, 51, 52, 58, 73, 89, 90, 91, 99, 134, 214, 220], "enough": [11, 46, 51, 52, 56, 58, 89, 90, 91, 99, 188, 219, 220], "necessari": [11, 26, 41, 42, 51, 55, 56, 57, 58, 71, 72, 73, 148, 158, 214], "becaus": [11, 26, 49, 50, 51, 52, 54, 56, 58, 59, 73, 213, 215], "cylind": [11, 51], "min": [11, 34, 120, 134], "max": [11, 30, 34, 120, 134, 153], "radiu": [11, 38, 51, 58, 153], "cube": 11, "fiducial_": 11, "full_": 11, "optin": [11, 134], "horizont": [11, 26, 30, 52, 57, 96, 175, 200, 213, 220], "displac": [11, 56, 112, 213], "x0": [11, 20, 26, 75, 96], "y0": [11, 75], "shift": [11, 41, 42, 89, 90, 91, 99, 126, 134, 136, 162, 177, 189, 200, 220], "via": [11, 22, 23, 24, 26, 27, 29, 30, 49, 50, 51, 54, 58, 75, 189, 190, 204, 214, 219], "dicitionari": 11, "bound": [11, 52, 89, 90, 91, 99, 119, 126, 143, 148, 175, 195], "intersect": [11, 96, 134, 200], "between": [11, 20, 21, 22, 24, 26, 27, 29, 30, 41, 42, 49, 51, 52, 54, 56, 57, 58, 75, 96, 102, 112, 115, 119, 120, 126, 134, 143, 148, 153, 156, 171, 174, 175, 177, 183, 184, 195, 198, 200, 204, 209, 214, 219, 220, 222, 223], "align": [11, 215], "box": [11, 55, 68], "adapt": [11, 38, 54, 210], "www": 11, "scratchapixel": 11, "lesson": 11, "3d": [11, 26, 27, 29, 30, 49, 50, 57, 198, 215], "simpl": [11, 23, 26, 38, 41, 42, 49, 51, 52, 56, 57, 58, 59, 74, 80, 88, 100, 101, 121, 182, 187, 189, 201, 214, 223], "shape": [11, 23, 26, 27, 29, 30, 42, 49, 50, 52, 110, 156, 189, 190, 194, 204], "definit": [11, 26, 56, 96, 210, 215], "definiton": 11, "dim": [11, 30, 38, 73, 77, 79, 81, 91, 115, 128], "vector": [11, 20, 26, 27, 29, 30, 38, 49, 50, 56, 57, 58, 73, 75, 77, 78, 79, 81, 82, 87, 94, 96, 98, 134, 189, 198, 200, 213, 215], "fiducial_rmax": [11, 49, 50, 51, 55, 86, 96], "plus_minu": [11, 51], "mix": [11, 51], "proposal_kwarg": 11, "max_n_events_batch": 11, "100000": 11, "atmospher": [11, 56, 96, 134, 200], "studi": [11, 51, 52, 56, 58, 70, 81, 168, 169, 214, 222], "plu": [11, 51, 56, 91], "els": [11, 51], "cross": [11, 26, 36, 39, 51, 56, 58, 125, 134, 183, 184, 189, 191], "1e6": [11, 55], "numb": 11, "batch": [11, 55, 220], "cut": [11, 30, 34, 38, 58, 115, 121, 148, 157, 169, 188, 189, 190, 208, 209], "appli": [11, 26, 27, 29, 30, 34, 52, 56, 57, 58, 79, 82, 89, 90, 91, 92, 99, 102, 108, 110, 111, 112, 118, 126, 137, 138, 142, 143, 144, 148, 174, 175, 177, 182, 186, 189, 196, 198, 204, 208, 209, 220, 222], "state": [11, 214, 219], "proposal_config": [11, 51], "proposal_tables_path": 11, "write_ev": 11, "0deg": [11, 75, 77, 78, 79, 81, 215], "48550": 11, "2111": 11, "10299": 11, "atrribut": 11, "chose": 11, "exclus": [11, 73], "skeleton": 13, "tarbal": 15, "desi": 15, "precalcul": 15, "storag": [15, 220], "araeventlist_filenam": 16, "hdf5_filenam": 16, "arz": [18, 22, 49, 50, 96], "get_vector_potenti": [18, 19, 20], "get_vector_potential_numba": [18, 19, 20], "thetaprime_to_theta": [18, 19, 20], "theta_to_thetaprim": [18, 19, 20], "arz_tabul": [18, 19, 20], "hcrb2017": [18, 22], "get_time_trac": [18, 19, 20, 21, 22, 23, 24, 56], "get_frequency_spectrum": [18, 21, 22, 23, 56, 86, 89, 90, 91, 99, 219, 220], "gauss": [18, 21, 134], "get_n_askdeptha": [18, 21], "set_log_level": [18, 22, 24], "emitt": [18, 26, 56, 57], "parametr": [18, 22, 38, 75, 171, 195], "get_parametr": [18, 24], "em_fract": [19, 20], "set_se": [19, 20], "set_interpolation_factor": [19, 20], "set_interpolation_factor2": [19, 20], "get_shower_profil": [19, 20], "get_last_shower_profile_id": [19, 20], "get_vector_potential_fast": [19, 20], "shower_energi": [20, 49, 50, 56, 58, 86, 96], "n": [20, 21, 22, 23, 24, 25, 26, 30, 41, 42, 49, 52, 54, 55, 56, 57, 58, 75, 112, 134, 144, 171, 189, 190, 193, 195, 197, 198, 200, 204, 206, 213, 220], "dt": [20, 21, 22, 23, 24, 49, 50, 52, 56, 75, 86, 96, 183, 184, 185, 220], "profile_depth": 20, "profile_c": 20, "af": 20, "freq_po": 20, "freq_neg": 20, "exp_po": 20, "exp_neg": 20, "t0_po": 20, "t0_neg": 20, "had": [20, 21, 22, 24, 49, 51, 52, 56, 58, 96, 171, 220], "n_index": [20, 21, 22, 24, 56, 75, 115, 128, 178, 220], "78": [20, 41, 54, 56, 58], "interp_factor": [20, 22, 56], "interp_factor2": [20, 22, 56], "100": [20, 22, 24, 26, 30, 51, 52, 54, 55, 56, 57, 58, 67, 96, 134, 140, 169, 177, 189, 200, 204, 206, 213, 214], "shift_for_xmax": [20, 56], "em_factor": 20, "fast": [20, 34, 56, 189, 223], "interpol": [20, 22, 26, 27, 29, 30, 57, 58, 67, 75, 112, 119, 134, 152, 195, 200, 213], "domain": [20, 21, 22, 23, 24, 75, 89, 90, 91, 99, 110, 112, 120, 144, 177, 193, 197, 204, 219, 223], "puls": [20, 21, 22, 23, 24, 56, 59, 87, 94, 96, 98, 108, 111, 121, 125, 136, 143, 171, 174, 189, 193, 206, 219, 220], "excess": [20, 22, 56, 96, 108, 111], "deriv": [20, 26, 96, 189], "efield": [20, 26, 27, 29, 30, 52, 58, 96, 133, 136, 157, 190, 198], "integr": [20, 26, 27, 29, 38, 39, 49, 56, 57, 102, 134, 177, 185, 193, 195, 204], "wa": [20, 49, 50, 52, 58, 65, 72, 77, 79, 81, 88, 89, 90, 91, 92, 96, 99, 100, 101, 114, 126, 134, 146, 158, 174, 188, 202, 214, 215, 216, 219, 222], "sum": [20, 26, 34, 49, 50, 51, 52, 55, 73, 75, 126, 134, 177, 200, 204, 219, 220], "trapezoid": [20, 56], "rule": [20, 51, 56], "size": [20, 30, 34, 38, 56, 75, 102, 110, 124, 134, 146, 159, 169, 174, 175, 200, 214, 220], "bin": [20, 21, 22, 23, 24, 34, 39, 49, 50, 51, 55, 56, 58, 75, 89, 90, 91, 99, 120, 177, 182, 183, 184, 185, 187, 200, 204, 223], "depth": [20, 26, 30, 35, 38, 41, 42, 52, 54, 56, 57, 59, 73, 77, 79, 81, 96, 134, 174, 175, 199, 215, 220], "em": [20, 21, 22, 24, 49, 51, 56, 58, 96], "refract": [20, 21, 22, 24, 26, 27, 28, 29, 30, 41, 42, 54, 56, 57, 75, 88, 96, 100, 101, 115, 126, 128, 134, 174, 175, 177, 200, 204, 209, 213], "1km": 20, "observ": [20, 21, 22, 24, 26, 27, 29, 30, 42, 54, 56, 57, 58, 87, 94, 96, 98, 134, 152, 153, 154, 155, 156, 200], "amplitud": [20, 21, 22, 23, 24, 34, 49, 50, 52, 56, 57, 58, 82, 96, 108, 110, 111, 118, 120, 132, 134, 143, 171, 177, 182, 186, 187, 193, 196, 198, 200], "scale": [20, 34, 41, 42, 52, 56, 57, 58, 108, 111, 195], "factor": [20, 56, 57, 58, 102, 106, 112, 177, 195, 204, 209, 210], "precis": [20, 51, 96, 200], "benefici": 20, "small": [20, 26, 30, 51, 52, 55, 56, 58, 59, 108, 111, 143, 186, 189, 190, 214], "slow": [20, 51, 56, 119, 134, 189, 204, 214, 220], "down": [20, 41, 42, 51, 59, 75, 77, 78, 79, 81, 215, 219, 220], "proport": 20, "just": [20, 26, 51, 52, 56, 57, 58, 59, 75, 110, 118, 121, 125, 134, 187, 202, 218, 219, 220], "around": [20, 26, 28, 30, 51, 52, 58, 89, 90, 91, 99, 108, 111, 123, 124, 127, 134, 174, 208, 215, 219, 220, 223], "peak": [20, 56, 96, 134], "rel": [20, 49, 51, 56, 58, 73, 76, 77, 79, 81, 91, 96, 111, 123, 126, 134, 136, 143, 175, 188, 215, 219], "compon": [20, 22, 24, 49, 56, 57, 58, 71, 72, 73, 75, 82, 96, 110, 120, 143, 177, 190, 213, 214, 216, 222], "thetaprim": 20, "r_prime": 20, "amount": [20, 58, 75, 177, 188, 210], "matter": [20, 134], "travers": 20, "carri": [20, 40, 71, 72, 196, 214], "iN": [20, 56], "slant": [20, 96, 134], "same_show": [20, 22, 24, 56], "output_mod": [20, 56, 153, 156], "maximum_angl": 20, "3490658503988659": 20, "electr": [20, 26, 27, 29, 30, 41, 42, 49, 50, 58, 61, 75, 91, 96, 126, 134, 136, 137, 138, 139, 140, 143, 156, 159, 171, 175, 189, 190, 191, 198, 222], "field": [20, 22, 26, 27, 29, 30, 39, 41, 42, 49, 50, 51, 54, 57, 58, 59, 61, 75, 77, 79, 81, 87, 91, 94, 96, 98, 112, 126, 134, 136, 137, 138, 139, 140, 143, 144, 156, 159, 171, 175, 189, 190, 191, 198, 209, 222], "realiz": [20, 24, 49, 50, 56, 75], "choosen": [20, 24, 153, 156], "solut": [20, 22, 23, 24, 26, 27, 29, 30, 34, 49, 50, 56, 57, 58, 59, 91, 96, 99, 126, 132, 171, 215], "charge_excess": [20, 56], "angular": [20, 26], "cherenkov": [20, 22, 24, 30, 56, 58, 206], "empti": [20, 24, 26, 58, 102, 136, 177], "efield_trac": 20, "sky": [20, 34, 49, 51, 119, 177], "er": 20, "etheta": [20, 22, 24, 58, 75, 96, 115, 190, 191, 198, 213], "ephi": [20, 58, 75, 96, 115, 190, 191, 198, 213], "kei": [20, 24, 26, 27, 29, 30, 34, 49, 50, 51, 71, 72, 73, 75, 81, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 110, 118, 120, 136, 148, 159, 163, 177, 182, 183, 184, 185, 186, 187, 188, 200, 214], "deprec": [20, 32, 81, 96, 114, 214], "trapeoiz": 20, "transcript": 20, "fortran": 20, "NOT": [20, 34, 41, 42, 51, 56, 59, 108, 111], "1234": 20, "librari": [20, 22, 26, 49, 50, 56, 57, 58], "theta_refer": 20, "relativ": [20, 108, 152], "is_em_show": 21, "lpm": [21, 56], "viewangl": [21, 22, 24], "sight": [21, 22, 24, 56], "width": [21, 22, 23, 24, 26, 89, 90, 91, 96, 99, 127, 134, 174, 183, 184], "invers": [21, 22, 23, 24, 26, 49, 50, 56, 89, 90, 91, 96, 99, 183, 184], "rate": [21, 22, 23, 24, 26, 27, 29, 30, 49, 50, 52, 56, 58, 89, 90, 91, 96, 99, 110, 112, 120, 122, 139, 148, 177, 183, 184, 193, 195, 196, 197, 204, 209, 219, 220, 223], "enabl": [21, 22, 23, 24, 136, 171, 189], "disabl": [21, 136], "lpd": 21, "effect": [21, 26, 27, 29, 30, 32, 34, 39, 49, 51, 52, 53, 55, 56, 57, 58, 61, 73, 75, 108, 111, 120, 171, 188, 195, 213], "nont": 21, "complex": [21, 22, 23, 24, 41, 42, 49, 56, 57, 73, 75, 82, 96, 108, 111, 118, 171, 197, 204, 209, 213], "frequenc": [21, 22, 23, 24, 26, 27, 29, 30, 35, 54, 57, 58, 59, 65, 67, 73, 74, 75, 77, 79, 80, 81, 82, 89, 90, 91, 99, 102, 108, 110, 111, 112, 118, 119, 120, 125, 126, 134, 157, 171, 177, 189, 193, 194, 196, 197, 204, 206, 209, 213, 215, 219, 223], "sigma": [21, 23, 58, 106, 157, 189], "fudge_lpm": 21, "gaussian": [21, 23, 56, 110, 134, 169], "greisen": 21, "gaisser": 21, "hilla": 21, "flag": [21, 96, 135, 141, 204], "1103": [21, 22, 24, 34], "physrevd": [21, 22, 24, 34], "82": [21, 51, 54], "074017": 21, "parameter": [21, 22, 24, 36, 38], "compat": [21, 58, 76, 77, 79, 81, 201, 214], "regim": 21, "neglig": [21, 51, 56], "switch": [21, 105, 108, 111, 125, 148], "rescal": [21, 34, 75, 213], "match": [21, 26, 27, 29, 30, 32, 49, 71, 72, 134, 148, 166, 169, 204, 219], "e_lpm": 21, "full_output": [22, 23, 24, 185], "obtain": [22, 23, 24, 26, 27, 29, 30, 51, 52, 56, 58, 70, 108, 111, 186, 194], "fft": [22, 23, 24, 192], "standard": [22, 23, 24, 36, 40, 51, 53, 56, 67, 77, 79, 81, 102, 125, 192, 196, 208, 214, 222], "approach": [22, 23, 24, 26, 49, 50, 223], "assur": [22, 23, 24], "fourier": [22, 23, 24, 56, 89, 90, 91, 99, 189, 191, 209, 219], "transform": [22, 23, 24, 26, 51, 56, 87, 94, 98, 112, 197, 209, 219], "known": [22, 23, 24, 216], "arz2019": [22, 56, 58, 220], "zhs1992": [22, 24, 56], "zh": [22, 24, 56], "za": [22, 24], "f": [22, 24, 34, 39, 40, 49, 50, 55, 56, 75, 120, 134, 169, 194], "halzen": [22, 24], "stanev": [22, 24], "phy": [22, 24, 34, 36, 58, 138], "rev": [22, 24, 34, 36, 58], "45": [22, 24, 58, 125, 206, 219], "362": [22, 24], "1992": [22, 24], "phase": [22, 24, 41, 42, 56, 67, 70, 73, 75, 77, 79, 81, 82, 102, 105, 108, 111, 112, 120, 143, 177, 189, 193, 204, 208, 209, 213, 214], "alvarez2000": [22, 24, 56, 58, 171], "mainli": [22, 24, 56, 219], "j": [22, 24, 40, 55, 56, 195], "alvarez": [22, 24], "muniz": [22, 24], "vazquez": [22, 24], "d62": [22, 24], "2000": [22, 24, 134, 153], "84": [22, 24, 51], "103003": [22, 24], "alvarez2009": [22, 24, 56, 58, 96], "w": [22, 24, 26, 39, 52, 55, 56, 134], "carvalho": [22, 24, 134], "tuero": [22, 24], "coher": [22, 24, 56, 134], "eev": [22, 24, 51, 56], "astroparticl": [22, 24], "35": [22, 59], "2012": [22, 24], "287": [22, 24], "299": [22, 24], "c": [22, 24, 26, 35, 39, 54, 57, 134, 218], "jame": [22, 24], "prothero": [22, 24], "thin": [22, 24, 51], "energet": 22, "dens": [22, 24], "media": [22, 24, 51, 57, 213], "applic": [22, 24, 56, 214, 218, 222], "32": [22, 24, 96, 177, 183], "2009": [22, 24], "111": [22, 24, 51, 96], "hanson": 22, "connolli": [22, 36, 58], "91": [22, 51, 119], "75": [22, 35, 54, 177, 213], "89": [22, 51], "semi": 22, "mc": [22, 40, 53, 56, 92, 112, 134, 168, 169, 177, 219], "mu\u00f1iz": 22, "romero": 22, "wolf": 22, "2011": [22, 36, 58], "accur": [22, 51, 56, 110, 216], "radiat": [22, 51, 56, 57, 75, 96, 198], "gravit": 22, "cosmologi": 22, "arz2020": [22, 56, 58], "updat": [22, 51, 56, 58, 63, 69, 71, 72, 73, 77, 78, 79, 81, 134, 213, 214], "taken": [22, 35, 51, 56, 57, 58, 71, 72, 81, 96, 154, 177, 195, 202, 209], "p": [22, 36, 49, 51, 58, 198], "hansen": 22, "101": [22, 34, 52, 58, 96], "2020": [22, 51, 58, 213], "083005": 22, "behviour": 22, "pick": [22, 169, 175], "voltag": [23, 49, 56, 58, 75, 96, 102, 110, 112, 120, 126, 136, 137, 143, 148, 171, 175, 177, 183, 184, 185, 186, 190, 191, 193, 196, 209, 215, 219, 220, 222], "strength": 23, "delta_puls": 23, "delta": [23, 49, 51], "cw": 23, "sinusoid": 23, "wave": [23, 56, 198, 200, 220], "squar": [23, 49, 56, 96, 134, 185, 189, 190, 193], "rectangular": [23, 89, 90, 91, 96, 99, 118, 127, 134, 138, 189, 194], "amplitued": 23, "tone_burst": 23, "sine": 23, "idl1": 23, "hvsp1": 23, "waveform": [23, 32, 56, 58, 59, 73, 102, 125, 126, 143, 148, 169, 174, 175, 177, 200, 204, 215, 219, 220], "ku": [23, 213], "lab": 23, "half": [23, 39, 51, 56, 112], "ara02": 23, "calpuls": 23, "depict": [23, 56], "02": 23, "k_l": [24, 86, 96], "average_show": 24, "energyshow": 24, "fromhadron": 24, "physics35": 24, "energeticshow": 24, "drawn": [24, 26, 51, 56, 120, 143, 169], "overrid": [24, 41, 42, 59, 112], "averag": [24, 34, 41, 42, 51, 56, 77, 79, 81, 82, 125, 196, 206], "analyticraytrac": [25, 57], "speed_of_light": [25, 26], "get_n_step": [25, 26], "get_seg": [25, 26], "get_z_deep": [25, 26], "ray_tracing_2d": [25, 26, 27, 29, 57], "get_gamma": [25, 26], "get_turning_point": [25, 26], "get_y_turn": [25, 26], "get_c_1": [25, 26], "get_c": [25, 26], "get_c0_from_log": [25, 26], "get_i": [25, 26], "get_y_diff": [25, 26], "get_y_with_z_mirror": [25, 26], "get_z_mirror": [25, 26], "get_z_unmirror": [25, 26], "get_path_length": [25, 26, 27, 29, 30, 57], "get_path_length_analyt": [25, 26], "get_travel_tim": [25, 26, 27, 29, 30, 57], "get_travel_time_analyt": [25, 26], "get_attenuation_along_path": [25, 26], "get_path_seg": [25, 26], "get_angl": [25, 26, 145, 151, 152], "get_launch_angl": [25, 26], "get_receive_angl": [25, 26], "get_reflection_angl": [25, 26, 27, 29, 30], "get_path": [25, 26, 27, 29, 30, 57], "get_path_reflect": [25, 26], "get_reflection_point": [25, 26], "obj_delta_y_squar": [25, 26], "obj_delta_i": [25, 26], "get_delta_i": [25, 26], "determine_solution_typ": [25, 26], "find_solut": [25, 26, 27, 29, 30, 57], "plot_result": [25, 26], "get_angle_from_c_0": [25, 26], "get_angle_from_logc_0": [25, 26], "get_c_0_from_angl": [25, 26], "get_z_from_n": [25, 26], "get_surf_skim_angl": [25, 26], "is_in_refraction_zon": [25, 26], "get_tof_for_straight_lin": [25, 26], "get_surface_puls": [25, 26], "angular_diff": [25, 26], "apply_propagation_effect": [25, 26, 27, 29, 30], "get_attenu": [25, 26, 27, 29, 30, 57], "get_config": [25, 26, 27, 29, 30], "get_launch_vector": [25, 26, 27, 29, 30, 57], "get_number_of_raytracing_solut": [25, 26, 27, 29, 30], "get_number_of_solut": [25, 26, 27, 29, 30, 57], "get_output_paramet": [25, 26, 27, 29, 30], "get_raytracing_output": [25, 26, 27, 29, 30], "get_receive_vector": [25, 26, 27, 29, 30, 57], "get_result": [25, 26, 27, 29, 30, 57], "get_solution_typ": [25, 26, 27, 29, 30, 57], "has_solut": [25, 26, 27, 29, 30], "reset_solut": [25, 26, 27, 29, 30], "set_config": [25, 26, 27, 29, 30], "set_start_and_end_point": [25, 26, 27, 29, 30, 57], "use_optional_funct": [25, 26, 27, 29, 30], "ray_trac": [25, 26, 57], "set_solut": [25, 26, 30], "get_focus": [25, 26, 30], "get_ray_path": [25, 26], "directraytrac": 25, "direct_ray_trac": [25, 27], "get_propagation_modul": [25, 28, 57], "propagation_base_class": 25, "ray_tracing_bas": [25, 26, 27, 29, 30], "radioproparaytrac": 25, "radiopropa_ray_trac": [25, 30], "set_shower_axi": [25, 26, 27, 29, 30], "set_iterative_sphere_s": [25, 26, 27, 29, 30], "set_iterative_step_s": [25, 30], "activate_auto_step_s": [25, 30], "deactivate_auto_step_s": [25, 30], "set_cut_viewing_angl": [25, 30], "set_maximum_trajectory_length": [25, 30], "raytracer_it": [25, 30], "set_minimizer_toler": [25, 30], "raytracer_minim": [25, 30], "get_path_candid": [25, 30], "get_correction_path_length": [25, 30], "get_correction_travel_tim": [25, 30], "get_frequencies_for_attenu": [25, 30], "delta_theta_direct": [25, 30], "delta_theta_bottom": [25, 30], "delta_theta_reflect": [25, 30], "299792458": 26, "optim": [26, 110, 143, 171], "algorithm": [26, 40, 56, 121, 171, 189, 204], "attenu": [26, 27, 29, 30, 33, 49, 57, 58, 59, 61, 171, 186], "along": [26, 27, 29, 30, 32, 38, 41, 42, 49, 50, 51, 56, 58, 73, 75, 77, 79, 81, 96, 134, 200, 214, 215, 219], "overwritten": [26, 148, 203], "init": [26, 75, 134], "x1": [26, 27, 29, 30, 75], "x2": [26, 27, 29, 30], "dx": [26, 40], "segment": 26, "approx": 26, "equi": 26, "dist": 26, "np": [26, 27, 29, 30, 34, 41, 42, 49, 51, 52, 53, 56, 57, 58, 73, 82, 87, 89, 90, 91, 94, 98, 99, 134, 189, 197, 200, 204, 220], "linspac": [26, 57], "ice_param": 26, "z_deep": 26, "homogen": [26, 51, 56], "know": [26, 51, 56, 58, 216, 223], "035": 26, "awai": [26, 51, 56, 78, 209], "monoton": [26, 154], "increas": [26, 51, 52, 110, 119, 134, 143, 154], "attenuation_model": [26, 27, 29, 30, 54, 57, 58, 171], "sp1": [26, 27, 29, 30, 35, 52, 54, 57, 58, 171], "30": [26, 27, 29, 30, 32, 56, 57, 96, 122, 123, 136, 158, 159, 169, 177, 188, 204], "n_frequencies_integr": [26, 27, 29, 30, 57], "25": [26, 30, 32, 38, 54, 56, 57, 58, 96, 114, 202, 222], "use_optimized_start_valu": 26, "overwrite_speedup": 26, "use_cpp": 26, "loglevel": 26, "verbos": [26, 71, 72, 73, 82, 148, 154, 168], "warn": [26, 27, 29, 30, 59, 73, 82, 89, 90, 91, 96, 99, 134, 169, 204, 222], "c_0": [26, 57], "paramt": [26, 75], "skim": 26, "ineffici": 26, "approxim": [26, 38, 51, 52, 56, 58, 110, 112, 148, 157], "discret": [26, 112], "loss": [26, 49, 51, 67], "accuraci": [26, 56, 119, 166, 220], "pr": [26, 148], "507": 26, "speedup_attenuation_model": 26, "gl3": [26, 35], "deactiv": 26, "routin": 26, "gamma": [26, 51, 57, 96], "turn": [26, 51, 56, 89, 90, 91, 99, 222], "n_ice": [26, 41, 42, 54], "off": [26, 56, 57, 58, 89, 90, 91, 99, 134, 175, 219], "saddl": 26, "transit": [26, 41], "go": [26, 51, 57, 58, 70, 105, 108, 111, 214, 215], "technic": 26, "relat": [26, 49, 57, 75, 88, 100, 101, 190, 219], "typl": [26, 79], "constant": [26, 36, 38, 51, 56, 57, 58, 77, 79, 81, 82], "c_1": [26, 57], "logc0": 26, "likelihood": 26, "better": [26, 56, 67, 70, 111, 119, 143, 204, 216, 220], "exponenti": [26, 28, 41, 42, 54, 57, 189], "z_raw": 26, "in_air": 26, "dy": 26, "dz": [26, 30], "mirror": [26, 57], "unmirror": 26, "reflection_cas": 26, "zero": [26, 27, 29, 30, 51, 52, 58, 77, 79, 81, 108, 111, 124, 127, 163, 189, 209], "ben": [26, 106], "hokanson": [26, 106], "fase": 26, "pyrex": [26, 65, 106], "travel": [26, 27, 29, 30, 34, 49, 50, 56, 57, 126, 174, 175, 198], "flight": [26, 51, 56], "max_detector_freq": [26, 27, 29, 30], "bottom": [26, 27, 29, 30, 34, 41, 42, 54, 57, 58, 219], "stop": [26, 27, 29, 30, 51, 96, 124, 134, 162], "larger": [26, 49, 50, 51, 56, 58, 89, 90, 91, 99, 119, 120, 125, 126, 220], "x_start": 26, "occur": [26, 46, 49, 183, 184], "n_point": [26, 27, 29, 30], "1000": [26, 27, 29, 51, 52, 59, 82, 118, 134, 138, 213, 214], "purpos": [26, 46, 51, 56, 82, 112, 219], "valid": [26, 81, 91], "problem": [26, 56, 89, 90, 91, 99, 220], "yy": [26, 45, 49, 50, 51, 52], "zz": [26, 45, 49, 50, 51, 57], "presenc": 26, "construct": [26, 41, 42, 49, 50, 57, 134, 214], "call": [26, 51, 54, 56, 57, 58, 73, 174, 175, 213, 214, 216, 219, 222], "put": [26, 56, 213], "togeth": [26, 54, 56, 177, 215, 222], "shelf": [26, 40, 54], "logc_0": 26, "c0": [26, 57], "finder": 26, "c0rang": 26, "2dim": [26, 30], "solution_typ": [26, 27, 29, 30, 57], "prerequesit": 26, "right": [26, 41, 56, 57, 169, 175, 220], "violat": 26, "univers": 26, "achiev": [26, 52, 112, 222], "ax": [26, 34, 45, 52, 53, 144, 195], "visual": [26, 214, 215], "z_po": 26, "angoff": 26, "sought": 26, "smallest": [26, 188, 213], "possibl": [26, 30, 57, 71, 72, 112, 177, 214, 219, 220, 222], "veri": [26, 74, 108, 111, 134, 162, 187, 214, 220], "chang": [26, 27, 29, 30, 38, 49, 51, 56, 58, 70, 72, 81, 89, 90, 91, 99, 144, 213, 215, 216, 219, 222], "prevent": 26, "invalid": [26, 148], "rang": [26, 30, 34, 38, 49, 51, 52, 57, 58, 96, 108, 111, 119, 134, 148, 157, 195, 213], "exactli": 26, "nome": 26, "impli": [26, 51, 219], "anglaunch": 26, "procedur": [26, 56, 58, 214], "optimis": 26, "equat": [26, 49, 53, 56, 57, 190], "get_n": 26, "solv": [26, 57, 189, 190], "beam": [26, 96, 102, 115, 134, 177, 200, 204], "90": [26, 51, 52, 56, 58, 128, 213, 214, 215], "zone": [26, 56, 78, 112], "c0crit": 26, "critic": 26, "thcrit": 26, "receiv": [26, 27, 29, 30, 41, 42, 49, 50, 57, 96, 148, 220], "oposit": [26, 30], "shadow": [26, 56], "process": [26, 46, 51, 58, 59, 196, 214, 219, 220, 222], "statement": [26, 222], "necessarili": [26, 49, 50, 57, 73], "nonetheless": 26, "todo": [26, 134], "why": [26, 56, 196], "seem": [26, 56], "lie": [26, 51, 177], "ycheck": 26, "ycrit": 26, "give": [26, 56, 57, 58, 59, 71, 72, 82, 214, 220], "idea": [26, 56, 223], "close": [26, 49, 50, 52, 56, 57, 126], "could": [26, 49, 52, 56, 73, 190, 222], "grai": 26, "far": [26, 27, 29, 40, 49, 52, 56, 73, 77, 78, 79, 81, 134, 189, 220], "hypothat": 26, "straight": [26, 28, 56, 75, 77, 78, 79, 81, 118, 134, 138, 177, 194, 200, 215], "Such": [26, 220], "fermat": 26, "principl": [26, 52, 56, 57, 214, 215, 222], "explic": 26, "geometr": [26, 134], "optic": [26, 56, 57], "infirn": 26, "chdraw": 26, "label": [26, 34, 52, 53, 57, 71, 72], "brewster": 26, "firn": [26, 77, 78, 79, 81, 213], "enter": 26, "boolean": [26, 30, 49, 50, 57, 72, 89, 90, 91, 99, 106, 126, 143, 146, 158, 169, 174, 186, 189, 209], "leav": [26, 56], "neither": 26, "draw": [26, 28, 40, 51, 56, 169, 220], "pyplot": [26, 53, 57, 58, 219], "dot": [26, 189], "red": 26, "figur": [26, 134, 148, 171], "x_refl": 26, "z_refl": [26, 30], "pulser_po": 26, "receiver_po": 26, "ipulssol": 26, "irxsol": 26, "subject": [26, 56], "specular": 26, "transmiss": [26, 42, 54, 57], "interfac": [26, 71, 72, 73, 82, 88, 96, 100, 101, 148, 217, 222], "emiss": [26, 49, 56, 58, 96, 119, 134, 219], "hit": [26, 57], "directli": [26, 32, 54, 56, 110, 174, 220], "equival": [26, 34, 51, 215, 219], "fashion": [26, 120], "raytr": 26, "x_refl_start": 26, "treat": [26, 81], "predefin": [26, 42], "emisss": 26, "would": [26, 51, 52, 56, 58, 112, 119, 209, 214, 219, 220], "ofoptim": 26, "exact": [26, 49], "defint": 26, "i_solut": [26, 27, 29, 30, 57], "weaken": [26, 27, 29, 30], "account": [26, 27, 29, 30, 49, 51, 56, 57, 58, 59, 96, 188, 195, 209], "electricfield": [26, 27, 29, 30, 86, 91, 159, 209, 219], "raytrac": [26, 27, 29, 30, 41, 42, 57, 100, 126, 220], "due": [26, 27, 29, 30, 38, 51, 56, 57, 58, 108, 111, 171, 204, 216, 220], "higher": [26, 27, 29, 30, 52, 56, 112, 177, 209, 219], "interv": [26, 27, 29, 30, 49, 50, 56, 124, 127, 163, 177, 195, 204], "visibl": [26, 27, 29, 30, 108, 111], "finer": [26, 27, 29, 30, 34, 175, 220], "falloff": [26, 27, 29, 30], "3dim": [26, 27, 29, 30, 41, 42, 190], "pair": [26, 27, 29, 30, 32, 49, 51, 128, 159, 174, 175, 188, 214, 220], "structur": [26, 27, 29, 30, 58, 59, 62, 67, 70, 96, 191, 224, 225], "ndim": [26, 27, 29, 30], "receive_vector": [26, 27, 29, 30, 49, 50, 57], "shall": [26, 27, 29, 77, 79, 81, 119, 121, 125, 144, 153, 155, 156, 159, 169, 174, 175, 223], "reset": [26, 27, 29, 30, 79], "previou": [26, 27, 29, 51, 56, 58, 89, 90, 91, 99], "function_nam": [26, 27, 29, 30], "noth": [26, 27, 29, 30, 81, 148, 188], "neseccari": [26, 27, 29, 30], "comma": [26, 27, 29, 30], "keyword": [26, 27, 29, 30, 56, 76, 77, 222], "sphere_s": [26, 27, 29, 30], "arai": [26, 27, 29, 30], "n_reflect": [26, 27, 29, 30, 34, 57, 58], "ray_tracing_2d_kward": [26, 27, 29], "wrapper": [26, 28, 42, 56, 219, 223], "arbitrari": [26, 28, 51, 57, 188], "initil": [26, 27, 29, 30], "describ": [26, 27, 29, 30, 38, 52, 53, 58, 72, 73, 143, 189, 193, 200, 214, 215, 216, 220], "log_nam": 26, "thing": [26, 51, 55, 56, 58, 223], "info": [26, 27, 29, 30, 59, 71, 72, 73, 82, 148, 168, 222], "linear": [26, 27, 29, 30, 57, 58, 75, 82, 108, 111, 134, 136, 143, 186, 200], "intial": 26, "_config": 26, "attenuate_ic": [26, 30, 57, 58], "focusing_limit": [26, 30, 57, 58], "focus": [26, 30, 56, 57, 58, 171], "back": [26, 30, 52, 55, 56], "accident": [26, 202], "raytracing_result": [26, 30], "reflection_angl": [26, 27, 29, 30], "infinitesim": [26, 30], "1cm": [26, 30, 213], "gain": [26, 30, 52, 58, 67, 70, 75, 82, 105, 108, 111, 118, 136, 163, 194], "load": [27, 29, 52, 56, 58, 67, 70, 71, 72, 75, 148, 201, 214], "yaml": [27, 29, 34, 49, 50, 54, 55, 57, 58, 59], "support": [28, 38, 58, 136, 141, 214], "direct_rai": 28, "dummi": 28, "ignor": [28, 51, 52, 56, 57, 59, 81, 118, 127, 194], "prodid": 29, "icemodel": [30, 33, 41, 42, 171], "speedup": [30, 58], "delta_c_cut": [30, 56, 58], "40": [30, 38, 52, 58, 140], "degre": [30, 51, 56, 58, 77, 79, 81, 96, 125, 206, 210], "iter": [30, 57, 92, 110, 134, 143, 148, 169, 189, 219], "max_traj_length": 30, "10000": [30, 196], "iter_steps_channel": 30, "auto_step_s": 30, "iter_steps_zenith": 30, "05": [30, 55, 75, 110, 120, 134, 196], "005": [30, 134], "loop": [30, 51, 52, 55, 58, 92, 125, 148, 158, 171, 189, 204, 206, 222], "prepar": 30, "shower_axi": [30, 134], "sphere": 30, "big": [30, 56, 219], "channel": [30, 32, 34, 49, 50, 51, 52, 56, 57, 58, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 86, 91, 96, 99, 100, 101, 102, 106, 108, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 125, 126, 128, 135, 136, 143, 148, 159, 168, 169, 171, 174, 175, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 204, 206, 208, 209, 214, 215, 216, 220, 222], "step_zenith": 30, "steps_siz": 30, "lenght": 30, "_sphere_s": 30, "auto_step": 30, "step_siz": [30, 102, 204], "won": [30, 59], "seen": [30, 56], "trajectori": [30, 51, 54, 56, 57, 200], "maxmim": 30, "abort": 30, "bigger": [30, 120], "search": [30, 71, 72, 76, 134, 168, 169, 174, 175, 220, 225], "xtol": 30, "7453292519943296e": 30, "ztol": 30, "001": [30, 40, 110, 120], "moment": [30, 40, 77, 79, 81], "further": [30, 52, 75, 219], "improv": [30, 143, 220], "candid": 30, "1dim": 30, "freq": [30, 75, 82, 112, 120, 177, 213], "n_bottom_reflect": 30, "pretty_time_delta": [31, 32], "merge_config": [31, 32], "get_vrm": [31, 32], "get_sampling_r": [31, 32, 86, 89, 90, 91, 99], "get_bandwidth": [31, 32], "calculate_veff": [31, 32], "integrated_channel_respons": [31, 32], "inputfilenam": [32, 58, 153, 156], "outputfilenam": [32, 58, 75], "detectorfil": [32, 58], "det": [32, 52, 58, 76, 82, 105, 106, 108, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 154, 157, 159, 166, 168, 169, 171, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 214], "det_kwarg": 32, "outputfilenamenuradioreco": [32, 58], "evt_tim": 32, "datetim": [32, 71, 72, 73, 77, 79, 81, 88, 100, 101, 163], "2018": [32, 38, 118, 120, 213, 214], "default_detector_st": [32, 58], "default_detector_channel": 32, "file_overwrit": 32, "write_detector": 32, "event_list": 32, "log_level_propag": 32, "ice_model": [32, 41, 54, 57, 58], "altern": [32, 110, 188, 189, 190, 204, 218], "json": [32, 34, 49, 50, 52, 55, 58, 59, 73, 76, 77, 79, 81, 215], "station_id": [32, 49, 50, 52, 58, 71, 72, 73, 77, 78, 79, 81, 82, 88, 92, 98, 100, 101, 108, 111, 118, 123, 152, 153, 155, 162, 168, 169, 174, 175, 204, 206, 214, 219], "perform": [32, 39, 51, 52, 56, 57, 58, 59, 72, 75, 89, 90, 91, 99, 110, 112, 120, 148, 175, 177, 183, 184, 191, 197, 200, 204, 209, 213, 220, 222, 223], "deself": 32, "_fine": 32, "sim": [32, 58, 59, 92, 96, 126, 152, 219], "overwrit": [32, 41, 42, 73, 148, 222, 223], "nur": [32, 49, 50, 58, 59, 159, 169, 214, 218], "custom": [32, 58, 59, 65, 96, 103, 114, 202, 219, 222], "veff": [33, 39, 53, 59], "remove_duplicate_trigg": [33, 34], "fc_limit": [33, 34], "get_veff_water_equival": [33, 34], "get_veff_output": [33, 34], "get_veff_aeff_singl": [33, 34], "get_veff_aeff_single_wrapp": [33, 34], "get_veff_aeff": [33, 34], "get_veff_aeff_arrai": [33, 34], "get_index": [33, 34], "fit_gl1": [33, 35], "get_temperatur": [33, 35], "get_attenuation_length": [33, 35, 54], "cross_sect": [33, 38], "param": [33, 36, 77], "csm": [33, 36, 38, 58], "get_nu_cross_sect": [33, 36], "get_interaction_length": [33, 36], "dump_hdf5": 33, "dump": [33, 37, 52, 73, 214], "earth_attenu": 33, "get_weight": [33, 38], "get_simple_weight": [33, 38], "get_core_mantle_crust_weight": [33, 38], "prem": [33, 38, 58], "earth_radiu": [33, 38], "radii": [33, 38], "densiti": [33, 34, 36, 38, 56, 58], "slant_depth": [33, 38], "coremantlecrustmodel": [33, 38], "get_limit_from_aeff": [33, 39], "get_limit_flux": [33, 39], "get_limit_e1_flux": [33, 39], "get_limit_e2_flux": [33, 39], "get_number_of_events_for_flux": [33, 39], "get_exposur": [33, 39], "get_integrated_exposur": [33, 39], "get_fluence_limit": [33, 39], "get_neutrino_inelast": [33, 40], "get_ccnc": [33, 40], "random_tau_branch": [33, 40], "inelasticity_tau_decai": [33, 40], "rejection_sampl": [33, 40], "southpole_simpl": [33, 41, 54, 58], "add_reflective_bottom": [33, 41, 42, 54], "get_average_index_of_refract": [33, 41, 42, 54], "get_gradient_of_index_of_refract": [33, 41, 42, 54], "get_ice_model_radiopropa": [33, 41, 42, 54], "get_index_of_refract": [33, 41, 42, 54, 220], "set_ice_model_radiopropa": [33, 41, 42], "southpole_2015": [33, 41, 54, 57, 58], "arasim_southpol": [33, 41, 54, 58], "mooresbay_simpl": [33, 41, 54, 58], "mooresbay_simple_2": [33, 41, 54], "greenland_simpl": [33, 41, 54, 57, 58, 220], "greenland_firn": [33, 41, 54], "greenland_perturb": [33, 41], "uniform_ic": [33, 41], "get_ice_model": [33, 41, 54, 57, 220], "medium_bas": [33, 54], "icemodelsimpl": [33, 41, 42], "radiopropaicewrapp": [33, 41, 42], "get_modul": [33, 42, 54], "add_modul": [33, 42, 54], "remove_modul": [33, 42, 54], "replace_modul": [33, 42, 54], "get_scalar_field": [33, 42, 54], "scalarfieldbuild": [33, 42], "getvalu": [33, 42], "getgradi": [33, 42], "merge_hdf5": [33, 55], "merge2": [33, 43], "muon_flux": 33, "plot_vertex_distribut": [33, 45], "runner": [33, 65, 67, 70, 75, 102], "nuradiomcrunn": [33, 46], "get_outputfilenam": [33, 46], "runner_exampl": 33, "task": [33, 46, 47, 222], "split_hdf5": 33, "split_hdf5_input_fil": [33, 48], "gid": 34, "remov": [34, 42, 56, 82, 110, 112, 114, 120, 148, 169], "duplic": 34, "overestim": 34, "group": [34, 49, 50, 51, 75, 82, 220], "68": 34, "confid": 34, "belt": 34, "feldman": 34, "cousin": 34, "57": [34, 56, 213], "3873": 34, "weight": [34, 38, 45, 49, 50, 51, 58, 73, 82, 86, 96, 134, 152], "low_limit": 34, "upper_limit": 34, "density_medium": 34, "723464435717068e": [34, 36], "39": [34, 36, 38], "density_wat": 34, "241509744511524e": 34, "dentity_medium": 34, "equivalen": 34, "all_ev": 34, "trigger_nam": [34, 45, 49, 50, 52, 58, 88, 92, 100, 101, 106, 177, 182, 183, 184, 185, 186, 187, 188], "trigger_names_dict": 34, "trigger_combin": 34, "veff_aeff": 34, "bounds_theta": 34, "multipli": [34, 56, 82, 209, 223], "4pi": 34, "map": [34, 96, 119, 148, 168, 169, 171, 205], "again": [34, 56, 59, 204], "individu": [34, 49, 50, 56, 67, 68, 82, 119, 134, 137, 152, 196, 214, 222], "OR": [34, 148], "effici": [34, 39, 51, 204], "analysi": [34, 51, 52, 54, 72, 125, 148, 157, 166, 222], "paramater": 34, "snr": [34, 86, 96, 123, 220], "vmax": 34, "vrm": [34, 49, 50, 52, 58, 112, 177, 204], "channel_id": [34, 52, 58, 71, 72, 73, 77, 78, 79, 81, 82, 88, 90, 91, 99, 100, 101, 102, 108, 110, 111, 118, 120, 121, 126, 143, 152, 174, 175, 178, 188, 214], "curv": 34, "shortest": 34, "caus": [34, 56, 102, 177, 204], "specifii": [34, 71, 72], "aeff_surface_muon": 34, "restrict": 34, "wrt": [34, 73, 77, 79, 81], "were": [34, 49, 50, 51, 88, 92, 100, 101, 214, 216], "co": [34, 57, 191], "item": [34, 50, 51], "care": [34, 51, 82, 196], "n_core": [34, 153, 156], "oversampling_theta": 34, "conain": 34, "oversampl": 34, "equal": [34, 51, 56, 57, 58, 102, 177, 209], "multi": [34, 61, 204], "slice": [34, 134, 204], "triggernam": 34, "uncertainti": [34, 51, 136, 143, 219, 220], "get_veff": [34, 53], "n_energi": 34, "n_zenith_bin": 34, "n_triggernam": 34, "uniqu": [34, 49, 50, 51, 52, 71, 72, 73, 77, 79, 81, 91, 92, 99, 102, 106, 182, 183, 184, 185, 186, 187, 213, 215], "edg": [34, 134, 208], "all_trigg": 34, "uenergi": 34, "uzenith_bin": 34, "utrigger_nam": 34, "zenith_weight": 34, "get_veff_arrai": 34, "fig": [34, 35, 45, 52, 53], "plt": [34, 52, 53, 57, 58, 195, 219], "subplot": [34, 52], "tname": 34, "vefferror": 34, "errorbar": 34, "pi": [34, 51, 53], "yerr": 34, "fmt": 34, "o": [34, 55, 58], "legend": [34, 52, 57], "semilogi": [34, 52], "semilogx": 34, "tight_layout": [34, 52], "declin": 34, "band": [34, 110, 118, 134, 148, 157, 204], "lpda_2of4_100hz": 34, "iz": 34, "9": [34, 96, 178, 196], "0f": 34, "export_format": 34, "getveff": 34, "mhz": [35, 52, 54, 57, 58, 82, 110, 118, 129, 138, 189, 204, 208, 213], "3189": 35, "2015jog15j057": 35, "temperatur": [35, 49, 50, 58, 70, 72, 77, 79, 81, 102, 111, 119, 186], "celsiu": 35, "variou": [35, 58, 82, 96, 123], "gl1": [35, 54, 57, 58], "1409": 35, "5413": 35, "gl2": 35, "2021": [35, 213], "bogorodski": 35, "2201": 35, "07846": 35, "macgregor": 35, "mb1": [35, 54, 58], "2015jog14j214": 35, "phd": [35, 193], "thesi": [35, 193], "persichilli": 35, "inttyp": [36, 39], "ctw": [36, 38, 39, 58], "amanda": 36, "cooper": [36, 58], "sarkar": [36, 58], "philipp": 36, "mertsch": [36, 58], "subir": 36, "jhep": [36, 58], "08": [36, 54, 58], "042": [36, 58], "cross_section_typ": [36, 38, 58], "momenta": 36, "ghandi": [36, 38, 58], "thorn": [36, 58], "83": [36, 51, 58], "113009": [36, 58], "d58": [36, 58], "093009": [36, 58], "1998": [36, 58], "enu": 36, "917": [36, 54], "cm": [36, 38, 51, 96, 134], "l_int": 36, "theta_nu": 38, "pnu": 38, "vertex_posit": 38, "phi_nu": 38, "absorpt": 38, "momentum": 38, "core_mantle_crust_simpl": 38, "core_mantle_crust": [38, 58], "fuction": 38, "shelfmc": [38, 40], "three": [38, 54, 56, 58, 59, 71, 72, 215, 220, 222], "arasim": [38, 54, 75, 196], "preliminari": 38, "dziewonski": 38, "anderson": 38, "planetari": 38, "interior": 38, "297": 38, "356": 38, "1981": 38, "1016": [38, 40], "0031": 38, "9201": 38, "81": [38, 51, 119], "90046": 38, "boundari": [38, 41, 42, 54, 77, 79, 81, 96, 118, 194, 209], "divid": [38, 52, 56, 82, 108, 111, 223], "scalar": [38, 42, 54, 189], "denot": [38, 51], "6371000": 38, "1221500": 38, "3480000": 38, "5701000": 38, "5771000": 38, "5971000": 38, "6151000": 38, "6346600": 38, "6356000": 38, "6368000": 38, "lambda": [38, 148], "810037825908342e": 38, "6227925335729963e": 38, "366339939401755e": 38, "array_lik": 38, "endpoint": 38, "500": [38, 52, 189], "column": 38, "chord": [38, 51], "materi": 38, "thick": 38, "mass": [38, 56], "third": [38, 55, 215], "mantl": [38, 58], "crust": [38, 58], "6378140": 38, "3464101": 38, "6151377545": 38, "6338140": 38, "738113642316134e": 38, "122113313133918e": 38, "aeff": 39, "livetim": [39, 53], "signaleff": 39, "energybinsperdecad": 39, "upperlimonev": 39, "decad": 39, "neyman": 39, "ul": 39, "background": [39, 51, 119], "veff_sr": 39, "nucrsscn": 39, "expect": [39, 51, 59, 61, 96, 126, 143, 174, 209, 220], "assumpt": [39, 51], "log10": [39, 58, 119, 195], "equidist": 39, "loge": 39, "field_of_view": 39, "exposur": 39, "exp_func": 39, "e_low": 39, "e_high": 39, "de": [39, 71, 72, 118], "int_exp": 39, "fluenc": [39, 96, 143, 189], "scatter": 40, "port": 40, "inelastici": 40, "natur": [40, 51], "cpc": 40, "2013": 40, "04": 40, "tau_energi": 40, "1607": 40, "00193": 40, "tau_mu": [40, 51], "tau_": 40, "tau_had": [40, 51, 96], "reject": [40, 56, 148], "initiaion": [41, 42], "condit": [41, 42, 49, 50, 52, 54, 56, 77, 79, 81, 102, 106, 134, 159, 177, 182, 183, 184, 185, 187, 219], "latter": [41, 42, 71, 72, 120, 216], "add_reflective_lay": [41, 42], "z_shift": [41, 42, 54], "almost": [41, 42, 56], "never": [41, 42, 214], "reli": [41, 42], "exp": [41, 42, 54, 57], "z_air_boundari": [41, 42], "nuradio": [41, 42, 57, 62, 195, 224], "glacier": [41, 42], "z_bottom": [41, 42, 54], "dimensionless": [41, 42, 196], "bulk": [41, 42], "delta_n": [41, 42, 54, 57], "snow": [41, 42, 73, 77, 79, 81, 88, 100, 101, 215], "z_0": [41, 42, 54, 57], "od": [41, 42], "refl_z": [41, 42, 54], "refl_coef": [41, 42, 54], "refl_phase_shift": [41, 42, 54], "angukar": [41, 42], "shoft": [41, 42], "position1": [41, 42, 54], "position2": [41, 42, 54], "mother": [41, 42], "1d": [41, 42, 204], "n_averag": [41, 42], "gradient": [41, 42, 56], "n_nabla": [41, 42], "hold": [41, 42, 54, 219], "scalarfield": [41, 42], "moduld": [41, 42], "_compute_default_ice_model_radiopropa": [41, 42], "seper": [41, 42, 216], "posibl": [41, 42], "adjust": [41, 42, 55, 102, 108, 111, 188, 219], "lose": [41, 42], "ice_model_radiopropa": [41, 42], "ice_model_radioprop": [41, 42], "z_firn": 41, "suffix": 41, "_firn": 41, "inheret": 42, "reimplement": 42, "everytim": 42, "inherit": [42, 54, 58, 219, 222], "ice_model_nuradio": [42, 54], "scalar_field": [42, 54], "smooth": [42, 56], "handel": 42, "discontinu": [42, 54, 57], "identifi": [42, 71, 72, 73, 77, 78, 79, 81, 91, 92, 99, 100, 143, 213], "daugther": 42, "new_modul": [42, 54], "stead": 42, "much": [42, 56, 220], "slower": [42, 56], "vector3d": 42, "output_filenam": [43, 47, 48, 55, 214, 219], "xx": [45, 49, 50, 51, 52, 57], "beauti": 45, "n_worker": 46, "output_path": [46, 174], "max_runtim": 46, "691200": 46, "n_triggers_max": 46, "max_crash": 46, "node": [46, 55], "submiss": 46, "soon": 46, "job": [46, 51], "finish": [46, 143], "kept": [46, 121, 127, 204], "busi": 46, "acquir": 46, "crash": [46, 55], "q": [47, 55], "isim": 47, "nu_energi": [47, 86, 96], "nu_energy_max": 47, "detectordescript": [47, 58], "input_filenam": 48, "number_of_events_per_fil": 48, "subfil": 48, "explain": [49, 50, 51, 55, 58, 219], "outlin": [49, 50, 51, 58], "v3": 49, "v2": [49, 114], "hdf5_file": [49, 50], "attr": [49, 50, 52], "ran": [49, 50], "parallel": [49, 50, 51, 55, 56, 77, 79, 81, 128, 198, 215], "simultan": [49, 50, 52, 146], "interfer": [49, 50], "event_group_id": [49, 50], "shower_id": [49, 50, 87, 91, 92, 98, 99, 100], "event_id": [49, 50, 51, 81, 92, 146, 148, 163], "thought": [49, 50, 56], "top": [49, 50, 54, 219], "station_": [49, 50], "slightli": [49, 50, 51, 56, 110, 210], "nuradiomc_evtgen_vers": [49, 50, 51, 86, 96], "nuradiomc_evtgen_version_hash": [49, 50, 51, 86, 96], "nuradiomc_vers": [49, 50, 86, 96], "nuradiomc_version_hash": [49, 50, 86, 96], "hash": [49, 75, 96, 211], "incom": [49, 51, 59, 75, 77, 79, 81, 96, 125, 136, 198, 209], "those": [49, 50, 56, 59, 71, 72, 81, 88, 92, 100, 101, 112, 134, 168, 214, 216, 219], "did": [49, 50, 188, 216], "fiducial_xmax": [49, 86, 96], "fiducial_xmin": [49, 86, 96], "fiducial_ymax": [49, 86, 96], "fiducial_ymin": [49, 86, 96], "fiducial_zmax": [49, 50, 51, 55, 86, 96], "fiducial_zmin": [49, 50, 51, 55, 86, 96], "fiducial_rmin": [49, 50, 51, 55, 86, 96], "qubic": 49, "cylindr": [49, 59, 96, 174, 175, 220], "tnois": [49, 50], "explicit": [49, 50], "nois": [49, 50, 58, 73, 77, 79, 81, 96, 102, 106, 108, 111, 119, 120, 123, 126, 157, 166, 168, 169, 177, 192, 196, 208], "n_sampl": [49, 50, 56, 86, 89, 90, 91, 96, 99, 120, 134, 143, 196, 204, 220], "style": [49, 50], "resolut": [49, 50, 119, 136, 203], "bandwidth": [49, 50, 118, 120, 196], "rm": [49, 58, 77, 79, 81, 106, 177, 196, 204], "thermal": [49, 163, 204], "floor": [49, 112], "v_": 49, "k_": 49, "power": [49, 51, 106, 119, 134, 177, 185, 196, 197, 200], "wiki": [49, 200], "articl": [49, 190], "filter": [49, 52, 58, 70, 80, 89, 90, 91, 99, 102, 108, 111, 112, 118, 124, 126, 127, 129, 138, 143, 148, 171, 174, 175, 182, 186, 189, 194, 196, 204, 208, 209, 219, 222], "respons": [49, 51, 52, 58, 59, 63, 65, 68, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 96, 108, 111, 112, 119, 126, 132, 136, 137, 177, 186, 190, 194, 196, 209, 216, 220, 222], "filt": [49, 77, 79, 81, 204], "trapz": 49, "ff": [49, 67, 75], "antenna_posit": [49, 54], "n_shower": [49, 50], "n_trigger": [49, 50], "row": 49, "belong": [49, 58, 71, 72], "len": [49, 56, 134], "vertex_tim": [49, 50, 51, 86, 96], "cascad": [49, 51, 56], "multiple_trigg": [49, 50], "fire": [49, 57], "trigger_tim": [49, 148, 177, 188, 204], "earliest": [49, 177], "n_interact": [49, 50, 51, 86, 96], "hierarch": [49, 97, 219], "counter": [49, 198], "shower_realization_arz": [49, 50], "1231": 49, "m_event": 49, "m_shower": 49, "captur": 49, "ambigu": [49, 154, 219], "analys": 49, "global": [49, 50, 102], "retriev": [49, 50, 51, 54], "event_group_id_per_show": [49, 50], "event_id_per_show": [49, 50], "focusing_factor": [49, 50], "n_channel": [49, 50, 204], "n_ray_tracing_solut": [49, 50], "max_amp_shower_and_rai": [49, 50], "maximum_amplitud": [49, 50, 86, 96], "maximum_amplitudes_envelop": [49, 50, 52], "hilbert": [49, 50, 96, 128, 171, 182], "envelop": [49, 50, 96, 128, 171, 182, 208], "fulfil": [49, 50, 52, 56, 102, 169, 177, 183, 204], "translat": [49, 50, 54, 56, 57, 189], "multiple_triggers_per_ev": [49, 50], "polar": [49, 50, 52, 58, 59, 75, 96, 115, 143, 189, 190, 191, 198, 213], "rotat": [49, 56, 57, 73, 75, 77, 78, 79, 81, 215, 220], "ray_tracing_c0": [49, 50], "ray_tracing_c1": [49, 50], "ray_tracing_reflect": [49, 50], "ray_tracing_reflection_cas": [49, 50], "ray_tracing_solution_typ": [49, 50], "time_shower_and_rai": [49, 50], "travel_dist": [49, 50], "travel_tim": [49, 50, 57], "satisfi": [49, 50, 182, 183, 184, 185, 187, 219], "triggered_per_ev": [49, 50], "trigger_times_per_ev": 49, "outdat": [50, 75], "click": 50, "juli": [51, 58], "realist": 51, "geometri": [51, 54, 56, 57, 77, 79, 81, 87, 94, 96, 98, 134, 166, 213], "constitut": [51, 58], "input_fil": [51, 153, 154, 155, 156, 162, 163], "1e5": 51, "1e18": [51, 55, 59], "2e18": 51, "few": [51, 56, 59, 119, 214, 215], "mixtur": 51, "flavour": [51, 96, 219], "region": [51, 56, 96, 110, 134, 220], "isotrop": [51, 195], "compar": [51, 56, 106, 108, 111, 112], "rad": [51, 82, 198], "add_tau_second_bang": 51, "tabulated_tau": 51, "four": [51, 52, 58, 118, 222], "remain": [51, 57, 58, 146], "lot": [51, 52, 56, 58, 59, 81], "ten": 51, "kilometr": 51, "proportion": 51, "ratio": [51, 52, 96, 112, 143, 198, 208], "v": [51, 55, 56, 134, 185, 186, 191, 223], "cosin": 51, "keep": [51, 55, 56, 57, 73, 114, 134, 204, 214, 215, 216, 223], "mind": [51, 56, 57, 134], "project": [51, 56, 195], "confirm": 51, "unforc": 51, "antineutrino": 51, "possess": [51, 56, 112], "stochast": [51, 56], "techniqu": 51, "easili": [51, 219, 222], "advis": [51, 220], "poissonian": 51, "let": [51, 56, 57, 58, 157], "sai": [51, 56], "goe": [51, 58, 127], "n_": [51, 54, 57], "unknown": [51, 216], "priori": 51, "good": [51, 55, 56, 223], "thumb": 51, "reduc": [51, 52, 56, 186, 208, 220], "get_gzk_1": 51, "wish": [51, 56], "law": [51, 198], "realli": [51, 56, 58], "usual": [51, 56, 58, 133, 134, 202, 213, 222, 223], "flexibl": [51, 219], "convolv": [51, 52, 108, 111, 132, 136, 196], "whatev": 51, "fanci": [51, 56], "bang": 51, "nativ": 51, "csda": 51, "photonuclear": 51, "paper": [51, 56, 57, 190, 193], "tabul": [51, 134, 200], "although": [51, 56, 208, 216], "actual": [51, 56, 77, 79, 81, 121, 148, 174, 175, 213], "jakob": 51, "santen": 51, "gen2": 51, "undergo": 51, "previous": [51, 79, 114, 202], "tudo": 51, "astroparticlephys": 51, "blob": 51, "md": 51, "feed": [51, 215], "wai": [51, 56, 81, 214, 219, 220], "collect": [51, 71, 72, 166, 216], "content": [51, 96, 125, 177, 206], "radian": [51, 204, 210], "identif": [51, 71, 72, 148], "facilit": [51, 54], "15": [51, 70, 96, 111], "80": [51, 52, 56, 129], "electronvolt": [51, 56], "tau_em": [51, 96], "muonic": 51, "recalcul": 51, "comparison": [51, 112], "encourag": 51, "expand": [51, 171], "complementari": [51, 219], "photon": 51, "11": [51, 52, 58, 96, 119, 204], "positron": [51, 96, 210], "nu_e": 51, "bar": [51, 195], "_e": 51, "13": [51, 96, 102, 186], "antimuon": 51, "nu_": 51, "antitau": 51, "bremsstrahlung": 51, "gamma_": 51, "brem": 51, "ionis": 51, "blundl": 51, "nuclear": 51, "85": 51, "bundl": 51, "86": 51, "87": 51, "88": [51, 54], "weak": 51, "compton": 51, "pion": [51, 56], "211": 51, "kaon": 51, "k": [51, 56, 111], "311": 51, "321": 51, "2212": 51, "antiproton": 51, "awar": 51, "fewer": [51, 58], "disk": [51, 219], "height": [51, 56, 200], "undergon": 51, "curvatur": 51, "detect": [51, 219], "explor": [51, 62, 224], "statist": [51, 136, 169], "pitfal": 51, "overlap": [51, 115, 177], "unlik": [51, 56], "sometim": [51, 214], "faster": [51, 56, 57, 110, 148], "instanc": [51, 56, 57, 58, 77, 92, 108, 111, 118, 203, 223], "proposal_funct": 51, "n_tau": 51, "energy_lepton": 51, "tau_cod": 51, "pev": [51, 58], "member": [51, 148], "li": [51, 56], "upon": 51, "dure": [51, 171], "interest": [51, 56, 216, 222], "similar": [51, 52, 56, 58, 59, 106, 214, 220], "discoveri": 52, "simplifi": [52, 55], "orient": [52, 58, 59, 73, 75, 77, 78, 79, 81, 134, 213, 215], "lpda": [52, 58, 59, 73, 75, 77, 79, 81, 213, 215], "dipol": [52, 58, 73, 75, 77, 79, 81, 213, 215], "orthogon": [52, 190, 215], "2m": [52, 59, 213, 220], "5m": [52, 59, 213], "cover": [52, 58, 119, 148, 152, 177], "50m": 52, "adc_n_sampl": [52, 58, 214], "512": [52, 204], "adc_sampling_frequ": [52, 58, 112, 214, 215], "ant_orientation_phi": [52, 58, 214], "ant_orientation_theta": [52, 58, 214], "ant_position_x": [52, 58, 214], "ant_position_i": [52, 58, 214], "ant_position_z": [52, 58, 214], "ant_rotation_phi": [52, 58, 214], "ant_rotation_theta": [52, 58, 214], "ant_typ": [52, 58, 72, 73, 214], "createlpda_100mhz": [52, 58], "commission_tim": [52, 58, 72], "tinyd": [52, 58], "01t00": [52, 58], "00": [52, 58, 214], "decommission_tim": [52, 58, 72], "2038": [52, 58], "270": 52, "bicone_v8": [52, 58], "04t00": [52, 58], "pos_altitud": [52, 58, 214], "2800": 52, "pos_sit": [52, 58, 214], "grid": [52, 55, 134, 156, 174, 220], "nearest": 52, "neighbor": [52, 177], "next": [52, 56, 82, 114, 202, 222], "strongli": 52, "linearli": [52, 75], "drop": [52, 73], "domin": [52, 126], "justifi": [52, 56], "eight": 52, "central": [52, 75, 213], "illustr": [52, 54, 56], "copi": [52, 58, 59, 214], "single_posit": 52, "detector_singl": 52, "detector_ful": 52, "insert": [52, 72, 103, 142, 144, 209], "250": [52, 102, 186], "750": 52, "1250": 52, "1500": 52, "horizontal_spacing_detector": 52, "fout": [52, 55], "surround": 52, "bandpass": [52, 120, 126, 129, 138, 175, 186, 189, 193, 194], "mimic": [52, 56, 204], "amplifi": [52, 58, 67, 70, 73, 74, 77, 79, 81, 108, 111, 126, 136, 214], "1xvrm": 52, "rough": [52, 175], "preselect": 52, "criterion": 52, "detector_simul": 52, "evt": [52, 58, 105, 106, 108, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 132, 133, 134, 135, 136, 137, 138, 140, 148, 157, 159, 166, 168, 171, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191], "efieldtovoltageconverterperchannel": 52, "pattern": [52, 56, 75, 96, 153, 154, 156, 168, 171, 189, 214], "downsampl": [52, 58, 112], "channelresampl": [52, 58, 103, 112, 166], "sampling_r": [52, 56, 58, 72, 73, 89, 90, 91, 99, 110, 120, 122, 139, 193, 196, 197, 204, 220], "highpass": [52, 77, 79, 81], "channelbandpassfilt": [52, 58, 103], "passband": [52, 58, 89, 90, 91, 96, 99, 102, 118, 119, 120, 126, 129, 138, 143, 174, 175, 182, 194, 209], "filter_typ": [52, 58, 89, 90, 91, 99, 118, 138, 143, 194], "butter10": 52, "triggersimul": [52, 58, 103, 104, 176, 180, 182, 183, 184, 185, 186, 187], "triggered_channel": [52, 58, 102, 106, 177, 182, 183, 184, 185, 186, 187, 204, 208], "number_concid": [52, 58, 106, 183, 184, 185, 187], "pre_trigger_1sigma": 52, "signific": [52, 75], "trick": 52, "pre": [52, 102, 123, 148, 204], "spend": 52, "quick": [52, 158], "3xvrm": 52, "alon": 52, "iF": [52, 55], "sort": [52, 55, 77, 79, 81], "glob": [52, 55, 169], "json_filenam": [52, 76, 77, 79, 81, 214], "max_amps_env": 52, "coincidence_fract": 52, "triggered_near": 52, "empi": 52, "get_number_of_channel": [52, 63, 69, 73, 77, 78, 79, 81, 86, 101], "get_relative_posit": [52, 63, 69, 73, 77, 78, 79, 81], "mask": 52, "php": 52, "get_marker2": 52, "2g": 52, "set_xlabel": 52, "set_ylabel": 52, "set_titl": 52, "savefig": 52, "png": 52, "raw": [53, 77, 79, 81, 148, 163], "effective_volume_calcul": 53, "peopl": [53, 56], "get_e2_limit_figur": 53, "diffus": 53, "show_grand_10k": 53, "show_grand_200k": 53, "show_heinz": 53, "show_ta": 53, "show_ara": 53, "show_arianna": 53, "add_limit": 53, "n_station": 53, "200": [53, 54, 56, 96, 136, 183, 184, 185, 187, 208, 213, 214], "my": [53, 55, 57, 59], "year": [53, 195], "linestyl": 53, "color": 53, "blue": 53, "linewidth": 53, "special": [54, 55, 57, 216], "daughter": [54, 92], "planar": [54, 57], "z_airboundari": 54, "meter": [54, 96, 134, 210], "reflection_coeffici": 54, "reflection_phase_shift": 54, "index_of_refraction_at_posit": 54, "average_index_of_refraction_between_position1_and_position2": 54, "gradient_index_of_refraction_at_posit": 54, "besid": [54, 56], "mathemat": [54, 57], "math": 54, "deaconu": 54, "hawlei": 54, "allei": 54, "rho": 54, "602": 54, "rho_0": 54, "super": 54, "3000": 54, "51": [54, 110, 119], "handl": [54, 57, 75, 219, 222], "proper": [54, 56, 134, 196], "__ice_model_nuradio": 54, "__scalar_field": 54, "predin": 54, "inher": 54, "confin": 54, "__modul": 54, "stand": 54, "pop": 54, "h": [54, 134, 191, 223], "icemodel_simp": 54, "rp": [54, 89, 90, 91, 99, 118, 194], "z_surfac": 54, "rice2014": 54, "sp": 54, "425": 54, "71": [54, 59, 119], "spice2015": 54, "423": 54, "77": 54, "43": 54, "46": 54, "34": 54, "mb2": 54, "481": 54, "coeffici": [54, 96, 198], "mimick": 54, "ross": 54, "antarctica": 54, "snippet": [54, 220], "independ": [54, 219, 223], "ref_index_model": [54, 57], "ref_index_medium": 54, "z_coordin": 54, "index_at_antenna": 54, "attenuation_length": 54, "hpc": 55, "uc": 55, "irvin": 55, "000": [55, 59], "coupl": [55, 56, 58], "1m": [55, 213], "10m": [55, 213], "million": [55, 58], "10k": 55, "pub": 55, "1e18_n1e6": 55, "1e4": 55, "part0001": 55, "part0100": 55, "schedul": 55, "bash": 55, "steer": 55, "base_dir": 55, "station_design": 55, "detector_sim": 55, "t02runsimul": [55, 59], "detector_filenam": [55, 204], "surface_station_1ghz": [55, 59], "det_dir": 55, "join": [55, 58], "config_5": 55, "working_dir": 55, "suface_station_1ghz": 55, "input_dir": 55, "jcglaser": 55, "yet": [55, 56, 58, 72, 73, 77, 134], "makedir": 55, "current_fold": 55, "dirnam": 55, "detector_fil": [55, 73], "t1": 55, "basenam": 55, "cmd": 55, "engin": 55, "header": [55, 146, 158, 219], "c_": 55, "grb": 55, "grb64": 55, "ckpt": 55, "restart": [55, 218], "pythonpath": 55, "l": [55, 56, 70, 96, 189, 190], "qsub": 55, "often": [55, 219], "consider": [55, 171], "parti": 55, "pillar": 56, "signalgen": [56, 58, 60, 220], "semianalyt": 56, "motiv": [56, 148], "spectra": 56, "resembl": 56, "predict": [56, 200], "refin": [56, 134], "fine": [56, 112, 134, 220], "fluctuat": [56, 204], "fulli": [56, 214], "reproduc": [56, 166], "kind": [56, 71, 72, 200], "semin": 56, "histor": 56, "incredibli": 56, "quit": [56, 218], "emul": 56, "vividli": 56, "2048": 56, "characteris": 56, "polaris": [56, 134], "perpendicular": [56, 58, 73, 75, 77, 79, 81, 134, 198, 215], "volt": [56, 58, 112, 186, 210, 215, 223], "gigahertz": 56, "adimension": 56, "posess": 56, "longitudin": [56, 96, 134], "formula": 56, "percent": 56, "ghz": [56, 57, 58, 82, 110, 112, 215, 220, 223], "offer": [56, 214, 219, 223], "advantag": [56, 58, 59, 214, 219, 220, 223], "stretch": 56, "maxima": [56, 126, 134], "fair": 56, "shower_profil": 56, "shower_library_vx": 56, "pkl": 56, "nue": 56, "txxxx": 56, "a01preprocess_shower_librari": 56, "pickl": [56, 75, 201, 219], "disadvantag": [56, 220], "integrand": 56, "subdivis": 56, "oppos": 56, "less": [56, 58], "suffic": [56, 58], "rather": [56, 73, 189, 214], "radial": [56, 215], "anywai": 56, "piec": 56, "carz": 56, "frame": [56, 87, 94, 98], "e_r": 56, "e_": 56, "plane": [56, 57, 58, 73, 75, 77, 78, 79, 81, 96, 134, 198, 200, 215], "brief": [56, 58], "obscur": 56, "fed": 56, "absolut": [56, 58, 73, 77, 79, 81, 88, 100, 101, 102, 118, 138, 177, 182, 186, 187, 194], "becom": [56, 57, 202], "kilogram": 56, "hard": [56, 148], "wavelength": 56, "kr": 56, "wavenumb": 56, "fresnel": [56, 96], "express": [56, 57, 112], "2r": 56, "sin": 56, "seriou": 56, "instabl": 56, "artifici": 56, "eq": [56, 57, 190], "word": [56, 75, 92, 200], "ask": [56, 77, 81], "inclin": 56, "bent": 56, "light": 56, "bend": 56, "That": [56, 58, 82, 196, 216], "vicin": 56, "But": [56, 214], "zhair": 56, "corea": [56, 103, 125, 145, 206, 214, 219], "cone": [56, 206, 215], "argu": 56, "shallow": 56, "affect": [56, 71, 72, 175], "55": [56, 118, 138, 188], "70": [56, 57, 125, 206], "54": 56, "hinder": 56, "48": 56, "converg": 56, "concentr": 56, "caustic": 56, "entir": [56, 73, 119], "nice": 56, "settl": 56, "debat": 56, "maxwel": 56, "prove": 56, "harder": [56, 214], "nabla": 56, "cdot": [56, 57], "boldsymbol": 56, "rho_f": 56, "term": [56, 134], "epsilon": [56, 200], "permitt": 56, "partial_t": 56, "lorenz": 56, "gaug": 56, "neglect": 56, "implicitli": 56, "claim": 56, "doesn": 56, "disappear": 56, "hoc": 56, "lost": 56, "sound": 56, "finit": [56, 209], "fdtd": 56, "crucial": 56, "interplai": 56, "subsequ": 56, "middl": 56, "nanosecond": [56, 58, 210], "subnanosecond": 56, "substract": [56, 208], "get_tim": [56, 86, 89, 90, 91, 99, 219], "crude": [56, 157], "bumpi": 56, "nevertheless": 56, "decent": 56, "rigor": 56, "aris": 56, "paremeteris": 56, "futur": [56, 57, 58, 67, 70, 141, 148], "my_se": 56, "42": [56, 214, 219], "sake": 56, "notion": 56, "tell": 56, "left": [56, 57, 175], "mistak": 56, "wast": 56, "sft": 56, "jwft": 56, "wrong": 56, "aggrav": 56, "rfft": 56, "real": [56, 75, 81, 82, 112, 188, 214, 220, 223], "whole": [56, 81], "time2freq": [56, 192, 197], "freq2tim": [56, 192, 197], "sampling_tim": 56, "rfftfreq": 56, "trace_back_in_tim": 56, "focuss": 57, "itself": [57, 144, 202, 214, 219], "attenuation_ic": 57, "n_freq": [57, 58], "amplif": [57, 58, 171], "rapid": 57, "ll": 57, "frac": 57, "variat": [57, 143], "stationari": 57, "Not": [57, 58, 88, 100, 101, 134], "said": 57, "pm": 57, "ln": 57, "2n_": 57, "attempt": [57, 201], "gsldir": 57, "gnu": 57, "scientif": 57, "gnu_scientific_librari": 57, "cppanalyticraytrac": 57, "setup": [57, 58, 126, 158], "build_ext": 57, "inplac": 57, "standalon": [57, 110], "makefil": 57, "readm": 57, "modular": 57, "eikon": 57, "rung": 57, "kutta": 57, "scan": [57, 160, 175, 220], "manner": 57, "shown": [57, 119, 134, 189], "extract": [57, 71, 72, 75, 106], "prop": 57, "initial_point": 57, "300": [57, 58, 68, 129], "final_point": 57, "afterward": [57, 214, 222], "solution_int": 57, "rays_2d": 57, "initial_point_2d": 57, "final_point_2d": 57, "Or": 57, "path_length": 57, "And": 57, "xlabel": 57, "ylabel": 57, "sampling_rate_detector": 57, "nyquist_frequ": 57, "50": [57, 58, 75, 82, 110, 121, 125, 127, 206, 213], "ylim": 57, "simple_radiopropa_trac": 57, "arctan": 57, "heart": 58, "layout": [58, 134], "aspect": [58, 222], "visit": 58, "begin": [58, 102, 103, 104, 105, 107, 108, 109, 111, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 209, 214, 219, 222], "discuss": 58, "statu": [58, 72, 114, 186, 202, 222], "mysimul": 58, "_detector_simul": 58, "who": 58, "child": [58, 126, 143, 175, 219], "outpufilenam": 58, "initialis": [58, 89, 90, 91, 99, 222], "assign": [58, 203, 223], "convers": [58, 75, 112, 177, 204, 210], "06_webinar": 58, "w02runsimul": 58, "config_default": [58, 59], "overriden": 58, "therein": 58, "weight_mod": 58, "_mantl": 58, "_crust": 58, "_simpl": 58, "parameteris": 58, "At": 58, "1235": 58, "minimum_weight_cut": 58, "skip": [58, 148, 163, 222], "698": 58, "redo_raytrac": 58, "redo": [58, 220], "min_efield_amplitud": 58, "bia": [58, 102, 186], "amp_per_ray_solut": 58, "distance_cut": 58, "max_dist": [58, 153, 174], "intercept": 58, "histogram": [58, 169, 219], "10x10": 58, "distance_cut_intercept": 58, "distance_cut_slop": 58, "9542": 58, "zerosign": 58, "auto": [58, 148], "null": [58, 214], "noise_temperatur": 58, "kelvin": [58, 70, 111, 186, 210], "save_al": 58, "analog": [58, 96, 112, 177, 215], "digit": [58, 112, 177, 204, 215], "resampl": [58, 86, 89, 90, 91, 99, 112, 122, 139, 169], "altitud": [58, 78, 96, 134], "associ": [58, 82, 92, 214, 219], "mark": [58, 135], "boresight": [58, 73, 75, 77, 78, 79, 81, 215], "tine": [58, 73, 75, 77, 78, 79, 81, 213, 215], "xz": 58, "135": 58, "pos_east": [58, 214], "pos_north": [58, 214], "102": [58, 96], "ident": [58, 108, 111, 190, 214], "_default": 58, "adc_id": 58, "256": [58, 121], "adc_nbit": [58, 112, 215], "adc_time_delai": [58, 112], "amp_reference_measur": 58, "amp_typ": [58, 67, 70, 108, 111, 214], "vpol_prototype_50cm_n1": 58, "74": [58, 75], "cab_id": 58, "17": [58, 96, 120], "09": 58, "cab_length": 58, "cab_reference_measur": 58, "cab_time_delai": [58, 214], "cab_typ": 58, "lmr_400": 58, "92": 58, "bicone_v8_inf_n1": 58, "97": 58, "mac_address": 58, "0002f7f2e7b9": 58, "mbed_typ": 58, "v1": 58, "board_numb": 58, "203": [58, 96], "pos_measurement_tim": 58, "pos_posit": 58, "station_typ": [58, 78, 214], "teach": 58, "princip": [58, 118], "constitu": 58, "guidelin": 58, "argpars": 58, "simplethreshold": [58, 103, 180], "highlowthreshold": [58, 103, 180], "channelgenericnoiseadd": [58, 103], "__name__": 58, "__main__": 58, "results_fold": 58, "mkdir": [58, 59], "great": 58, "christoph": 58, "massiv": 58, "heavi": 58, "Be": 58, "comments_detector": 58, "txt": 58, "understand": [58, 148, 216], "parser": 58, "argumentpars": 58, "add_argu": 58, "input_3": 58, "2e": 58, "19_1": 58, "0e": 58, "20": [58, 71, 72, 73, 82, 96, 120, 127, 134, 143, 148, 156, 168, 208, 213, 214], "numc_output": 58, "narg": 58, "parse_arg": 58, "incomplet": [58, 81, 214], "design": [58, 81, 120, 168, 169], "lack": [58, 216], "_detector_simulation_filter_amp": 58, "_detector_simulation_trigg": 58, "characterist": [58, 214], "chain": [58, 70, 71, 72, 73, 82, 216], "act": [58, 144], "700": 58, "butter": [58, 89, 90, 91, 99, 118, 138, 143, 194], "150": 58, "800": [58, 134], "coincid": [58, 61, 102, 106, 182, 183, 184, 185, 186, 187, 204], "subset": 58, "threshold_high": [58, 102, 183, 184], "_vrm": 58, "threshold_low": [58, 102, 183, 184], "coinc_window": [58, 106, 182, 183, 184, 185, 186, 187], "hilo_2of4_5_sigma": 58, "simple_10_sigma": 58, "default_detector": 58, "01_veff_simul": 59, "home": [59, 65, 67, 70, 75, 102], "cp": 59, "t01generate_event_list": 59, "1e19": 59, "1e19_n1e3": 59, "1e19_n1e3_output": 59, "_c_": 59, "18": [59, 96, 195], "018": 59, "22": [59, 96, 125, 206], "sr": [59, 195], "26m": 59, "binari": 59, "1e18_n1e4": 59, "1e18_n1e4_output": 59, "laptop": 59, "29": [59, 96], "later": [59, 134, 175, 214, 220, 222], "though": [59, 71, 72, 222], "worri": [59, 223], "adc": [59, 102, 112, 148, 163, 177, 204], "bicon": [59, 213], "detector_nam": 59, "everyth": [59, 82], "easier": [59, 108, 111, 214, 223], "t05visualize_sim_output": 59, "submodul": [60, 130, 212], "api": [62, 71, 72, 224], "analog_compon": [63, 64, 66, 69, 108, 111], "load_system_respons": [63, 64, 65], "get_system_respons": [63, 64, 65], "load_amplifier_respons": [63, 66, 67], "load_amp_measur": [63, 66, 67], "get_amplifier_respons": [63, 66, 67, 69, 73, 77, 79, 81, 108, 111], "get_cable_response_parametr": [63, 66, 67], "get_cable_respons": [63, 66, 67], "get_available_amplifi": [63, 66, 67, 69, 70], "preprocessamprespons": [63, 66], "save_preprocessed_amp": [63, 66, 68], "preprocess_300amp": [63, 66, 68], "rno_g": [63, 76, 96, 103, 145, 164, 186], "load_amp_respons": [63, 69, 70], "db_mongo_read": [63, 69], "dictionarize_nested_list": [63, 69, 71], "dictionarize_nested_lists_as_tupl": [63, 69, 71], "db_mongo_writ": [63, 69], "rnog_detector": [63, 69, 76], "amp": [63, 67, 68, 70, 77, 79, 81, 108, 111, 120, 123, 136], "get_amp_respons": [63, 74], "antennapattern": 63, "interpolate_linear": [63, 75], "interpolate_linear_vector": [63, 75], "get_group_delai": [63, 75], "parse_rnog_xfdtd_fil": [63, 75], "preprocess_rnog_xfdtd": [63, 75], "parse_wipld_fil": [63, 75], "preprocess_wipld_old": [63, 75], "save_preprocessed_wipld_old": [63, 75], "preprocess_wipld": [63, 75], "save_preprocessed_wipld": [63, 75], "save_preprocessed_wipld_forara": [63, 75], "get_pickle_antenna_respons": [63, 75], "parse_aera_xml_fil": [63, 75], "preprocess_aera": [63, 75], "parse_ara_fil": [63, 75], "preprocess_ara": [63, 75], "parse_hfss_fil": [63, 75], "preprocess_hfss": [63, 75], "preprocess_xfdtd": [63, 75], "antennapatternbas": [63, 75], "get_antenna_response_vector": [63, 75], "antennapatternanalyt": [63, 75], "parametric_phas": [63, 75], "antennapatternprovid": [63, 75, 209], "load_antenna_pattern": [63, 75], "find_path": [63, 76], "find_reference_entri": [63, 76], "detector_bas": [63, 76], "datetimeseri": [63, 77], "obj_class": [63, 77], "decod": [63, 77], "buffer_db": [63, 77], "detectorbas": [63, 77, 79, 81], "get_station_id": [63, 69, 71, 72, 73, 77, 79, 81, 86, 92, 98], "get_stat": [63, 69, 73, 77, 79, 81, 86, 92, 219], "has_stat": [63, 69, 73, 77, 79, 81], "get_unique_time_period": [63, 77, 79, 81], "get_detector_tim": [63, 69, 71, 72, 73, 77, 79, 81], "get_channel": [63, 69, 73, 77, 79, 81, 86, 100, 101], "get_devic": [63, 69, 73, 77, 79, 81], "get_absolute_posit": [63, 69, 73, 77, 79, 81, 214], "get_absolute_position_sit": [63, 77, 78, 79, 81], "get_sit": [63, 69, 73, 77, 78, 79, 81], "get_site_coordin": [63, 77, 79, 81], "get_channel_id": [63, 69, 73, 77, 79, 81, 86, 91, 100, 101, 219], "get_parallel_channel": [63, 77, 79, 81], "get_number_of_devic": [63, 77, 79, 81], "get_device_id": [63, 77, 79, 81], "get_cable_delai": [63, 69, 73, 77, 78, 79, 81], "get_cable_type_and_length": [63, 77, 78, 79, 81], "get_antenna_typ": [63, 69, 73, 77, 78, 79, 81], "get_antenna_deployment_tim": [63, 77, 78, 79, 81], "get_antenna_orient": [63, 69, 73, 77, 78, 79, 81], "get_amplifier_typ": [63, 77, 78, 79, 81], "get_amplifier_measur": [63, 77, 79, 81], "get_sampling_frequ": [63, 69, 73, 77, 78, 79, 81], "get_number_of_sampl": [63, 69, 73, 77, 78, 79, 81, 86, 89, 90, 91, 99], "get_antenna_model": [63, 69, 73, 77, 78, 79, 81], "get_noise_rm": [63, 77, 79, 81, 123], "get_noise_temperatur": [63, 69, 73, 77, 79, 81], "is_channel_noiseless": [63, 69, 73, 77, 79, 81], "detector_sql": 63, "get_everyth": [63, 78], "get_everything_channel": [63, 78], "get_everything_st": [63, 78], "get_everything_posit": [63, 78], "get_antenna_model_fil": [63, 78], "get_station_typ": [63, 78], "detector_sys_uncertainti": 63, "detectorsysuncertainti": [63, 79], "set_antenna_orientation_offset": [63, 79], "reset_antenna_orientation_offset": [63, 79], "set_antenna_position_offset": [63, 79], "reset_antenna_position_offset": [63, 79], "filterrespons": [63, 118, 194], "get_filter_response_mini_circuit": [63, 80], "get_filter_response_mini_circuits2": [63, 80], "get_filter_respons": [63, 80, 143, 192, 194], "generic_detector": [63, 76], "genericdetector": [63, 81, 106, 108, 154, 174, 175], "add_generic_st": [63, 81], "add_station_properties_for_ev": [63, 81, 214], "get_station_properties_for_ev": [63, 81], "set_ev": [63, 81, 214], "get_reference_st": [63, 81], "get_reference_station_id": [63, 81], "get_default_st": [63, 81], "get_default_station_id": [63, 81], "get_default_channel": [63, 81], "get_default_channel_id": [63, 81], "get_raw_st": [63, 81], "get_raw_channel": [63, 81], "get_nam": [63, 82, 86, 94, 102], "get_time_delai": [63, 69, 73, 82, 107, 108, 109, 111], "subtract_time_delay_from_respons": [63, 82], "sql_to_json": 63, "test_detector_db": 63, "visualize_detector": [63, 215], "bhokansonfasig": 65, "tree": [65, 162, 163], "possibli": [67, 70], "amp_measur": 67, "buffer": [67, 71, 72, 73, 75, 77, 146, 214], "cable_typ": [67, 72], "cable_length": 67, "cabl": [67, 72, 73, 77, 79, 81, 108, 111, 116, 214], "amp_nam": [68, 72, 74], "hardwarerespons": 68, "preprocess": [68, 75, 163], "seri": [68, 89, 90, 91, 99, 134], "ex": [68, 75], "set_database_tim": [69, 71, 72], "set_detector_tim": [69, 71, 72], "get_database_tim": [69, 71, 72], "find_primary_measur": [69, 71, 72], "get_object_nam": [69, 71, 72], "get_collection_nam": [69, 71, 72], "load_board_inform": [69, 71, 72], "get_general_station_inform": [69, 71, 72], "get_general_channel_inform": [69, 71, 72], "get_general_device_inform": [69, 71, 72], "get_collection_inform": [69, 71, 72], "get_quantity_nam": [69, 71, 72], "get_all_available_signal_chain_config": [69, 71, 72], "get_identifi": [69, 71, 72], "get_posit": [69, 71, 72, 86, 91, 219], "get_channel_signal_chain_measur": [69, 71, 72], "get_component_data": [69, 71, 72], "get_complete_station_inform": [69, 71, 72], "get_channel_signal_chain": [69, 71, 72, 73], "get_complete_channel_inform": [69, 71, 72], "get_complete_device_inform": [69, 71, 72], "query_modification_timestamps_per_st": [69, 71, 72], "rename_database_collect": [69, 72], "create_empty_collect": [69, 72], "clone_collection_to_collect": [69, 72], "set_not_work": [69, 72], "add_entry_to_databas": [69, 72], "add_general_station_info": [69, 72], "add_general_channel_info_to_st": [69, 72], "add_general_device_info_to_st": [69, 72], "add_measurement_protocol": [69, 72], "update_current_primari": [69, 72], "change_primary_antenna_measur": [69, 72], "change_primary_cable_measur": [69, 72], "change_primary_iglu_measur": [69, 72], "change_primary_drab_measur": [69, 72], "change_primary_surface_measur": [69, 72], "change_primary_downhole_measur": [69, 72], "decommission_a_st": [69, 72], "decommission_a_channel": [69, 72], "decommission_a_devic": [69, 72], "export_as_str": [69, 73], "get_channel_orient": [69, 73], "get_signal_chain_respons": [69, 73, 82], "get_signal_chain_compon": [69, 73], "get_relative_position_devic": [69, 73], "rno_surfac": 70, "temp": [70, 72, 111, 148], "293": [70, 111], "hardwar": [70, 71, 72, 105, 108, 111], "incorpor": [70, 105, 108, 111], "ri": 70, "hardweareresponseincorpor": 70, "52": 70, "room": 70, "empir": 70, "board": [70, 72, 102, 186], "drab": [70, 71, 72, 73], "fiber": [70, 72, 73], "iglu": [70, 71, 72, 73, 214], "climat": 70, "chamber": 70, "phased_arrai": 70, "15k": 70, "connect": [71, 72, 73], "preconfigur": [71, 72], "mongo": [71, 72, 73], "client": [71, 72], "freeli": [71, 72], "acces": [71, 72], "db": [71, 72, 73, 77, 82, 148], "database_connect": [71, 72, 73], "rnog_publ": [71, 72], "env_pw_us": [71, 72], "server": [71, 72, 75, 77, 79, 213, 214], "environment": [71, 72], "mongo_serv": [71, 72], "mongo_us": [71, 72], "mongo_password": [71, 72], "rnog_test_publ": [71, 72, 73], "connection_str": [71, 72], "db_mongo_connection_str": [71, 72], "database_nam": [71, 72], "rnog_liv": [71, 72], "mongo_kwarg": [71, 72], "mongocli": [71, 72], "utc": [71, 72], "commiss": [71, 72, 73, 81, 214, 216], "collection_nam": [71, 72], "primary_tim": [71, 72], "identification_label": [71, 72], "data_dict": [71, 72], "object_id": [71, 72], "measurement_id": [71, 72], "surface_board": [71, 72], "iglu_board": [71, 72], "timestamp": [71, 72, 78], "s_paramet": [71, 72, 75], "object_typ": [71, 72], "board_nam": [71, 72], "info_nam": [71, 72], "device_id": [71, 72, 73, 77, 79, 81], "devic": [71, 72, 73, 77, 79, 81], "search_bi": [71, 72], "obj_id": [71, 72], "measurement_nam": [71, 72], "use_primary_time_with_measur": [71, 72], "station_posit": [71, 72, 134, 214], "channel_posit": [71, 72], "signal_chain": [71, 72, 73], "unless": [71, 72, 148], "wanted_quant": [71, 72], "object_nam": [71, 72], "input_d": [71, 72], "golden_iglu": [71, 72], "measurement_temp": [71, 72], "drab_id": [71, 72], "golden_drab": [71, 72], "channel_device_id": [71, 72], "position_id": [71, 72], "channel_signal_id": [71, 72], "component_typ": [71, 72], "component_id": [71, 72], "supplementary_info": [71, 72], "sparamet": [71, 72], "s21": [71, 72], "measurement_station_posit": [71, 72], "measurement_channel_posit": [71, 72], "measurement_signal_chain": [71, 72], "measurement_device_posit": [71, 72], "complete_info": [71, 72], "indentifi": [71, 72], "dictinoari": [71, 72], "otherth": [71, 72], "response_chain": [71, 72], "measurement_posit": [71, 72], "modif": [71, 72], "requier": [71, 72, 87, 94, 98], "station_data": [71, 72], "modification_timestamp": [71, 72], "station_commission_timestamp": [71, 72], "station_decommission_timestamp": [71, 72], "former": [71, 72, 216], "comiss": [71, 72, 214], "nested_list": 71, "parent_kei": 71, "nested_field": 71, "nested_kei": 71, "aggreg": 71, "old_nam": 72, "new_nam": 72, "fail": [72, 201], "old_collect": 72, "new_collect": 72, "primary_measur": 72, "breakout_id": 72, "breakout_channel_id": 72, "broken": 72, "dosn": 72, "breakout": 72, "identification_kei": 72, "identification_valu": 72, "primary_measurement_start": 72, "hpol": [72, 73, 171, 213], "vpol": [72, 73, 171, 213], "station_nam": 72, "station_com": 72, "number_of_sampl": [72, 73, 121], "2080": 72, "channel_com": 72, "device_nam": 72, "device_com": 72, "protocol_nam": 72, "utcnow": [72, 216], "antenna_typ": [72, 213], "antenna_nam": [72, 154], "protocol": 72, "units_arr": 72, "function_test": 72, "s11": 72, "cable_nam": 72, "downhol": 72, "board_typ": 72, "laser_id": 72, "iglu_id": 72, "photodiode_id": 72, "breakout_cha_id": 72, "decomm_tim": 72, "decommiss": [72, 81, 214], "over_write_handset_valu": 73, "database_tim": [73, 216], "always_query_entire_descript": 73, "select_st": 73, "logger": [73, 82, 103, 114, 134, 148, 154, 202, 222], "acut": 73, "question": [73, 214], "queri": [73, 148, 214], "describt": 73, "descib": 73, "json_kwarg": 73, "_json_seri": 73, "skip_signal_chain_respons": 73, "dumps_kwarg": 73, "constructor": [73, 174, 175, 214, 219, 222], "idendifi": 73, "channel_info": 73, "station_info": 73, "site": [73, 77, 79, 81, 129, 134, 152, 171, 199], "outward": [73, 75, 77, 79, 81, 215], "symmetri": [73, 75, 77, 79, 81, 215, 220], "counterclockwis": [73, 75, 77, 78, 79, 81, 215], "orientation_theta": [73, 75, 215], "orientation_phi": [73, 75, 215], "rotation_theta": [73, 75, 215], "rotation_phi": [73, 75, 215], "tubl": 73, "channel_signal_chain": 73, "repons": [73, 82], "coax": 73, "radiant": [73, 134], "signal_chain_compon": 73, "dictonari": [73, 75], "particlular": 73, "rais": [73, 92, 110, 148, 159, 202], "pariti": 73, "antenna_model": [73, 75], "vel": [73, 75], "accronym": 73, "abbrivatipn": 73, "record": [73, 166, 168, 219], "outer": 73, "tempertur": 73, "use_stor": 73, "delai": [73, 75, 77, 79, 81, 82, 102, 112, 116, 177, 188, 198, 200, 204, 209, 220], "cable_onli": 73, "time_delai": [73, 82, 209], "ntu": 74, "y1": 75, "interpolation_method": 75, "imaginari": 75, "magnitud": [75, 96, 189, 213], "vector_effective_length": 75, "df": 75, "effecitv": 75, "path_gain": 75, "path_phas": 75, "xfdtd": [75, 213], "THAT": 75, "THE": 75, "IN": 75, "TO": 75, "OF": 75, "ad1": 75, "ra1": 75, "gen_num": 75, "wipld": 75, "s_12": 75, "older": [75, 214, 216], "insuffici": 75, "incid": [75, 190, 198], "circuit": 75, "ohm": [75, 196], "180deg": [75, 77, 78, 79, 81, 215], "ff2": 75, "inicd": 75, "h_phi": 75, "h_theta": 75, "wipl": [75, 213], "verifi": 75, "sha1": [75, 213], "pars": [75, 80, 146, 154, 158, 214], "ascii": 75, "containig": 75, "hfss": 75, "magnitudes_theta": 75, "magnitudes_phi": 75, "phases_phi": 75, "phases_theta": 75, "csv": [75, 148], "antennamodel": 75, "interpolation_mod": 75, "magphas": 75, "cutoff_freq": 75, "phase_typ": 75, "theoret": 75, "usag": [75, 214, 223], "occupi": 75, "station_dict": [76, 81], "reference_st": [76, 81, 214], "reference_channel": [76, 81, 214], "rnog_mongo": 76, "backward": [76, 77, 79, 81, 197], "assume_inf": [76, 77, 79, 81], "antenna_by_depth": [76, 77, 79, 81], "alia": 77, "obj": 77, "rtype": 77, "in_memori": 77, "tini": 77, "tb": 77, "detector_sql_auth": [77, 79], "credenti": [77, 79], "arianna_detector_db": [77, 79, 81], "madel": [77, 79, 81], "_inffirn": [77, 79, 81], "period": [77, 79, 81, 213], "mode_id": [77, 81], "deploi": [77, 79, 81, 216], "latitud": [77, 79, 81], "longitud": [77, 79, 81], "lmr240": [77, 79, 81], "deploy": [77, 79, 81, 215], "differenti": [77, 78, 79, 81, 120, 195], "stage": [77, 79, 81, 163], "precomput": [77, 79, 81], "deconvolv": [77, 79, 81, 108, 111], "100mhz": [77, 79, 81], "deviat": [77, 79, 81, 102, 157, 196, 220], "noiseless": [77, 79, 81], "proxi": [77, 79, 81], "utm": 78, "connector": [78, 215], "ori_theta": 79, "ori_phi": 79, "rot_theta": 79, "rot_phi": 79, "systemat": [79, 136], "filter_nam": 80, "minicircuit": 80, "default_st": 81, "default_channel": 81, "default_devic": 81, "reference_devic": 81, "run_numb": [81, 92, 148, 163], "whose": [81, 119, 121, 219, 220], "y_unit": 82, "remove_time_delai": 82, "debug_plot": 82, "multipi": 82, "trace_at_readout": 82, "trace_at_antenna": 82, "arang": 82, "complex_resp": 82, "mag": 82, "Will": [82, 110, 191], "alongsid": 82, "Its": [82, 222], "expon": 82, "multiplicit": 82, "ax1": 82, "in_db": 82, "plt_kwarg": 82, "resp": 82, "base_show": 86, "baseshow": [86, 87, 94, 98, 134], "get_id": [86, 87, 88, 90, 92, 94, 97, 98, 99, 100, 101], "get_paramet": [86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 100, 101, 219], "set_paramet": [86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 100, 101, 219], "has_paramet": [86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 100, 101], "get_axi": [86, 87, 94, 98], "get_coordinatesystem": [86, 87, 94, 98], "deseri": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 219], "base_st": [86, 188], "basest": [86, 88, 100, 101], "set_parameter_error": [86, 88, 91, 100, 101, 219], "get_parameter_error": [86, 88, 91, 100, 101, 219], "remove_paramet": [86, 88, 100, 101], "set_station_tim": [86, 88, 100, 101], "get_station_tim": [86, 88, 100, 101], "get_station_time_dict": [86, 88, 100, 101], "remove_trigg": [86, 88, 100, 101], "get_trigg": [86, 88, 100, 101], "has_trigg": [86, 88, 92, 100, 101, 102, 104, 106], "set_trigg": [86, 88, 100, 101, 102], "set_electric_field": [86, 88, 100, 101], "get_electric_field": [86, 88, 100, 101, 219], "add_electric_field": [86, 88, 100, 101], "get_electric_fields_for_channel": [86, 88, 100, 101, 219], "is_neutrino": [86, 88, 100, 101], "is_cosmic_rai": [86, 88, 100, 101], "set_is_neutrino": [86, 88, 100, 101], "set_is_cosmic_rai": [86, 88, 100, 101], "get_arianna_paramet": [86, 88, 100, 101], "has_arianna_paramet": [86, 88, 100, 101], "set_arianna_paramet": [86, 88, 100, 101], "basetrac": [86, 89, 90, 91, 126, 143, 175, 220], "get_trac": [86, 89, 90, 91, 99, 219], "get_filtered_trac": [86, 89, 90, 91, 99], "set_trac": [86, 89, 90, 91, 99, 219], "set_frequency_spectrum": [86, 89, 90, 91, 99, 219, 220], "set_trace_start_tim": [86, 89, 90, 91, 99, 219], "add_trace_start_tim": [86, 89, 90, 91, 99], "get_trace_start_tim": [86, 89, 90, 91, 99], "get_frequ": [86, 89, 90, 91, 99, 219], "get_hilbert_envelop": [86, 89, 90, 91, 99], "get_hilbert_envelope_mag": [86, 89, 90, 91, 99], "apply_time_shift": [86, 89, 90, 91, 99], "electric_field": [86, 88, 100, 101, 209], "get_unique_identifi": [86, 91, 99], "has_parameter_error": [86, 91], "set_channel_id": [86, 91], "has_channel_id": [86, 91], "get_shower_id": [86, 91, 99, 100], "get_ray_tracing_solution_id": [86, 91, 99], "set_posit": [86, 91], "register_module_ev": [86, 92], "register_module_st": [86, 92], "iter_modul": [86, 92], "get_generator_info": [86, 92], "set_generator_info": [86, 92], "has_generator_info": [86, 92], "set_id": [86, 92], "get_run_numb": [86, 92], "set_stat": [86, 92], "add_particl": [86, 92], "get_particl": [86, 92], "get_primari": [86, 92], "get_par": [86, 92], "has_particl": [86, 92], "get_interaction_product": [86, 92], "add_show": [86, 92], "get_show": [86, 92, 219], "has_show": [86, 92], "get_first_show": [86, 92, 219], "add_sim_show": [86, 92], "get_sim_show": [86, 92, 219], "get_first_sim_show": [86, 92], "has_sim_show": [86, 92], "get_hybrid_inform": [86, 92, 219], "hybrid_inform": 86, "hybridinform": [86, 93, 219], "add_hybrid_show": [86, 93, 219], "get_hybrid_show": [86, 93, 219], "hybrid_show": [86, 93], "hybridshow": [86, 94, 219], "set_hybrid_detector": [86, 94, 219], "get_hybrid_detector": [86, 94, 219], "parameter_seri": 86, "serialize_covari": [86, 95], "deserialize_covari": [86, 95], "stationparamet": [86, 96, 219], "nu_zenith": [86, 96], "nu_azimuth": [86, 96], "nu_flavor": [86, 96], "nu_vertex": [86, 96, 126], "cr_energi": [86, 96], "cr_zenith": [86, 96, 219], "cr_azimuth": [86, 96], "channels_max_amplitud": [86, 96], "zenith_cr_templatefit": [86, 96], "zenith_nu_templatefit": [86, 96], "cr_xcorrel": [86, 96], "nu_xcorrel": [86, 96], "station_tim": [86, 96], "cr_energy_em": [86, 96], "nu_inttyp": [86, 96], "chi2_efield_time_direction_fit": [86, 96], "ndf_efield_time_direction_fit": [86, 96], "cr_xmax": [86, 96], "vertex_2d_fit": [86, 96, 126], "distance_correl": [86, 96], "viewing_angl": [86, 96, 220], "channelparamet": [86, 96, 110], "maximum_amplitude_envelop": [86, 96], "p2p_amplitud": [86, 96], "signal_tim": [86, 96, 127], "noise_rm": [86, 96], "signal_region": [86, 96], "noise_region": [86, 96], "signal_time_offset": [86, 96], "signal_receiving_zenith": [86, 96], "signal_ray_typ": [86, 96], "signal_receiving_azimuth": [86, 96], "block_offset": [86, 96, 110], "electricfieldparamet": [86, 96], "ray_path_typ": [86, 88, 96, 100, 101], "polarization_angl": [86, 96], "polarization_angle_expect": [86, 96], "signal_energy_flu": [86, 96], "cr_spectrum_slop": [86, 96], "nu_vertex_dist": [86, 96], "nu_viewing_angl": [86, 96], "max_amp_antenna": [86, 96], "max_amp_antenna_envelop": [86, 96], "reflection_coefficient_theta": [86, 96], "reflection_coefficient_phi": [86, 96], "cr_spectrum_quadratic_term": [86, 96], "energy_fluence_ratio": [86, 96], "ariannaparamet": [86, 96], "seq_start_tim": [86, 96], "seq_stop_tim": [86, 96], "seq_num": [86, 96], "comm_period": [86, 96], "comm_dur": [86, 96], "trigger_threshold": [86, 96], "l1_supression_valu": [86, 96], "internal_clock_tim": [86, 96], "showerparamet": [86, 87, 94, 96, 98], "electromagnetic_energi": [86, 96], "radiation_energi": [86, 96], "electromagnetic_radiation_energi": [86, 96], "primary_particl": [86, 96], "shower_maximum": [86, 96], "distance_shower_maximum_geometr": [86, 96], "distance_shower_maximum_grammag": [86, 96], "parent_id": [86, 96], "refractive_index_at_ground": [86, 96], "atmospheric_model": [86, 96], "magnetic_field_rot": [86, 96], "magnetic_field_vector": [86, 96, 100, 134], "observation_level": [86, 96], "charge_excess_profile_id": [86, 96], "interferometric_shower_maximum": [86, 96], "interferometric_shower_axi": [86, 96], "interferometric_cor": [86, 96], "particleparamet": [86, 96], "generatorattribut": [86, 96], "total_number_of_ev": [86, 96], "eventparamet": [86, 96], "sim_config": [86, 96], "hash_nuradioreco": [86, 96], "hash_nuradiomc": [86, 96], "as_hdf5_dict": [86, 97], "radio_show": 86, "radioshow": [86, 92, 98, 219], "has_station_id": [86, 98], "sim_channel": [86, 100], "simchannel": [86, 99, 100, 137, 143, 159], "sim_stat": [86, 101, 134, 152, 157], "simstat": [86, 100, 159], "get_magnetic_field_vector": [86, 100, 101], "set_magnetic_field_vector": [86, 100], "get_simulation_weight": [86, 100], "set_simulation_weight": [86, 100], "iter_channel": [86, 100, 101, 219], "add_channel": [86, 100, 101], "get_ray_tracing_id": [86, 100], "get_channels_by_channel_id": [86, 100], "get_channels_by_shower_id": [86, 100], "get_channels_by_ray_tracing_id": [86, 100], "set_sim_st": [86, 101], "get_sim_st": [86, 101, 219], "has_sim_st": [86, 101], "set_reference_reconstruct": [86, 101], "get_reference_reconstruct": [86, 101], "get_reference_direct": [86, 101], "set_trigger_tim": [86, 102], "get_trigger_tim": [86, 102], "get_typ": [86, 102], "get_triggered_channel": [86, 102], "set_triggered_channel": [86, 102], "set_pre_trigger_tim": [86, 102], "get_pre_trigger_tim": [86, 102], "get_trigger_set": [86, 102], "simplethresholdtrigg": [86, 102], "envelopephasedtrigg": [86, 102], "simplephasedtrigg": [86, 102], "highlowtrigg": [86, 102], "integratedpowertrigg": [86, 102], "envelopetrigg": [86, 102, 103, 180], "rnogsurfacetrigg": [86, 102], "antiparallel": [87, 94, 98], "movement": [87, 94, 98], "particla": [87, 94, 98], "coordinatesystem": [87, 94, 98, 134], "cstrafo": [87, 94, 98, 134], "coordiat": [87, 94, 98], "magnet": [87, 94, 96, 98, 134], "data_pkl": [87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102], "_event_tim": [88, 100, 101], "isot": [88, 100, 101], "_station_tim": [88, 100, 101], "save_efield_trac": [88, 100], "ifft": [89, 90, 91, 99], "represent": [89, 90, 91, 99], "date": [89, 90, 91, 99], "butterab": [89, 90, 91, 99, 102, 118, 138, 194], "butterworth": [89, 90, 91, 99, 102, 118, 129, 138, 182, 189, 194, 196, 209], "frequency_spectrum": [89, 90, 91, 99], "start_tim": [89, 90, 91, 99], "delta_t": [89, 90, 91, 99], "silent": [89, 90, 91, 99], "theorem": [89, 90, 91, 99], "cyclic": [89, 90, 91, 99, 209], "wrap": [89, 90, 91, 99, 220], "acommod": [89, 90, 91, 99], "save_trac": [90, 91, 99], "ray_tracing_id": [91, 99, 100], "regist": [92, 114, 214], "inter": 92, "sequenc": [92, 96], "evt_id": 92, "particle_id": [92, 192, 205], "particle_or_show": 92, "parent_particl": 92, "sim_show": [92, 134, 152], "hybrid": 92, "hybrid_detector": 94, "target_object": 95, "parameter_enum": 95, "no_arg": 96, "qualnam": 96, "ot": 96, "crosscorrel": 96, "cr": [96, 125], "26": 96, "chi2": [96, 171], "fitter": 96, "27": 96, "freedom": 96, "28": 96, "31": [96, 119], "ampliud": 96, "likel": 96, "pedest": [96, 148], "channelblockoffsetfitt": [96, 103, 109, 148], "onski": 96, "e_theta": 96, "e_phi": 96, "voltagetoanalyticefieldconvert": [96, 103, 129], "convolut": [96, 196], "channelid": 96, "dirat": 96, "provi": 96, "l1": 96, "supress": 96, "sea": 96, "corrdinatesystem": 96, "103": 96, "104": 96, "105": 96, "106": 96, "107": 96, "108": 96, "109": 96, "110": [96, 106], "longitudion": 96, "120": [96, 123, 206], "121": 96, "122": 96, "ob": 96, "footprint": 96, "23": 96, "201": 96, "202": 96, "particle_index": 97, "regular": 99, "apart": 99, "simulation_weight": 100, "unique_identifi": 100, "tripl": 100, "save_channel_trac": 100, "use_channel": [101, 171, 189, 190], "triggers_pkl": 102, "trigger_typ": [102, 148, 163], "involv": 102, "pre_trigger_tim": [102, 177, 188, 204], "readout": [102, 188], "triggertimeadjust": [102, 103], "number_of_coincid": [102, 183], "channel_coincidence_window": 102, "threshold_factor": 102, "power_mean": [102, 106, 196], "power_std": [102, 106, 196], "phasing_angl": [102, 177], "trigger_delai": [102, 177], "output_passband": [102, 196], "diod": [102, 106, 186, 196, 208], "calculate_noise_paramet": [102, 192, 196], "diodesimul": [102, 192, 208], "6th": [102, 196], "secondary_channel": 102, "primary_angl": 102, "secondary_angl": 102, "sec_trigger_delai": 102, "window_s": 102, "maximum_amp": [102, 177], "subbeam": [102, 177], "tick": [102, 177], "stride": [102, 204], "high_low_window": [102, 183, 184], "integration_window": [102, 185], "filtertyp": 102, "60": [102, 125, 134, 186, 206], "vbia": [102, 186], "hardwareresponseincorpor": [103, 104, 107, 109, 118], "channelblockoffset": [103, 109, 110], "fit_block_offset": [103, 109, 110], "setup_logg": [103, 113, 114, 192, 202, 222], "register_run": [103, 113, 114], "deltat": [103, 130], "iftelectricfieldreconstructor": 103, "linearslopeoper": [103, 142, 144], "slopespectrumoper": [103, 142, 144], "domainflipp": [103, 142, 144], "symmetrizingoper": [103, 142, 144], "io": [103, 214, 219], "araroot": [103, 145], "nuradiorecoio": [103, 145, 214, 219], "eventread": [103, 145, 214, 219], "eventwrit": [103, 145, 214, 219], "get_head": [103, 145, 146, 158, 159, 219], "event_parser_factori": [103, 145], "scan_files_funct": [103, 145, 160], "iter_events_funct": [103, 145, 160], "measured_nois": 103, "channelmeasurednoiseadd": [103, 164], "neutrinodirectionreconstructor": 103, "voltagetoefieldanalyticconverterforneutrino": [103, 170], "voltagetoanalyticefieldconverterneutrino": [103, 170, 171], "neutrinovertexreconstructor": [103, 220], "create_lookup_t": [103, 172, 220], "neutrino2dvertexreconstructor": [103, 126, 172, 220], "neutrino3dvertexreconstructor": [103, 172, 220], "phasedarrai": 103, "calc_parameters_for_rnog_surface_trigg": [103, 180], "linear_fit": [103, 180, 181], "get_envelope_trigg": [103, 180, 182], "get_high_low_trigg": [103, 180, 183], "get_majority_log": [103, 180, 183], "multihighlowthreshold": [103, 180], "get_high_trigg": [103, 180, 184], "get_low_trigg": [103, 180, 184], "get_multiple_high_low_trigg": [103, 180, 184], "powerintegr": [103, 180], "get_power_int_trigg": [103, 180, 185], "rnog_surface_trigg": [103, 180], "schottky_diod": [103, 180, 186], "get_threshold_trigg": [103, 180, 187], "analogtodigitalconvert": [103, 177], "perfect_compar": [103, 112], "perfect_floor_compar": [103, 112], "perfect_ceiling_compar": [103, 112], "apply_satur": [103, 112], "round_to_int": [103, 112], "get_digital_trac": [103, 112], "beamformingdirectionfitt": 103, "get_array_of_channel": [103, 115, 190], "channeladdcabledelai": 103, "channelantennadedispers": 103, "get_filter_argu": [103, 118], "get_filt": [103, 107, 108, 109, 111, 118], "add_random_phas": [103, 120], "fftnoise_fullfft": [103, 120], "bandlimited_nois": [103, 120], "precalculate_bandlimited_noise_paramet": [103, 120], "bandlimited_noise_from_precalculated_paramet": [103, 120], "channellengthadjust": [103, 166, 169], "channelsignalreconstructor": 103, "get_snr": [103, 123], "channelstopfilt": 103, "channeltemplatecorrel": 103, "match_sampl": [103, 125], "channeltimeoffsetcalcul": 103, "channeltimewindow": 103, "correlationdirectionfitt": 103, "cosmicrayenergyreconstructor": 103, "efieldairtoicepropag": 103, "efieldradiointerferometricreconstruct": 103, "efieldinterferometricdepthreco": [103, 134], "sample_longitudinal_profil": [103, 134], "reconstruct_interferometric_depth": [103, 134], "update_atmospheric_model_and_refractivity_t": [103, 134], "efieldinterferometricaxisreco": [103, 134], "find_maximum_in_plan": [103, 134], "sample_lateral_cross_sect": [103, 134], "reconstruct_shower_axi": [103, 134], "get_geometry_and_transform": [103, 134], "get_station_data": [103, 134], "plot_lateral_cross_sect": [103, 134], "efieldtimedirectionfitt": 103, "efieldtovoltageconvert": [103, 222], "efieldtovoltageconverterperefield": 103, "electricfieldbandpassfilt": 103, "electricfieldresampl": 103, "electricfieldsignalreconstructor": 103, "eventtypeidentifi": 103, "sphericalwavefitt": 103, "templatedirectionfitt": 103, "covari": [103, 189], "stacked_lstsq": [103, 189, 190], "voltagetoefieldconvert": 103, "voltagetoefieldconverterperchannel": 103, "sim_to_data": [105, 108, 111, 188], "tunnel": [106, 196], "fasig": 106, "exce": [106, 159, 169], "power_threshold": 106, "default_integrated_pow": 106, "requri": [106, 183, 184, 185, 187], "get_mingainlin": [107, 108, 109, 111], "phase_onli": [108, 111], "mingainlin": [108, 111], "unfilt": [108, 111], "post": [108, 111, 112, 148, 177], "mitig": [108, 111], "zero_nois": [108, 111], "unclear": [108, 111], "add_offset": [109, 110], "remove_offset": [109, 110], "block_siz": 110, "128": [110, 124, 193, 209], "max_frequ": 110, "051000000000000004": 110, "mv": 110, "maxit": 110, "guess": [110, 134, 174], "cost": 110, "return_trac": 110, "tol": 110, "1e": [110, 143, 189, 190, 200], "06": [110, 177, 183, 184, 187, 196, 200], "rect": 110, "baselin": [110, 148], "output_trac": 110, "toler": 110, "223": 111, "323": 111, "adc_n_bit": 112, "adc_ref_voltag": 112, "perfect": [112, 118, 138, 194], "flash": 112, "signif": 112, "bit": [112, 213, 215], "ceil": 112, "digitis": 112, "discretis": [112, 177], "digital_trac": 112, "perfect_floor": 112, "adc_counts_trac": 112, "clip": [112, 134], "unclip": 112, "saturated_trac": 112, "satur": [112, 215], "adc_reference_voltag": [112, 215], "clock": [112, 177, 198], "jitter": [112, 120, 177], "random_clock_offset": 112, "upsampl": [112, 171, 177, 204, 209, 219], "fpga": 112, "arithmet": 112, "_adc_typ": 112, "elimin": 112, "nyquist": [112, 120], "trigger_": 112, "trigger_adc": [112, 177], "clock_offset": [112, 177], "adc_typ": 112, "return_sampling_frequ": 112, "adc_output": [112, 177], "trigger_filt": [112, 177], "suppli": 112, "cycl": [112, 143], "upsampling_factor": [112, 177], "int_factor": [112, 177, 209], "handler": [114, 202, 222], "streamhandl": [114, 202], "formatt": [114, 202, 222], "logging_statu": [114, 202, 222], "februari": [114, 202, 222], "2024": [114, 202, 222], "decor": 114, "interferometri": [115, 192], "zenlim": [115, 128], "azilim": [115, 128], "1009": 115, "0345": 115, "360deg": 115, "subtract": [116, 163, 169], "fir": [118, 209], "rippl": [118, 194], "uniti": [118, 194], "decibel": [118, 194], "chebyshev": [118, 194], "jan": 118, "07": [118, 134, 143], "robert": 118, "lahmann": 118, "fau": 118, "get_window": 118, "ham": 118, "kaiser": 118, "beta": 118, "firwin": 118, "lp": 118, "f_cut": 118, "hp": 118, "bp": 118, "f_cut_low": 118, "f_cut_high": 118, "unus": 118, "signatur": 118, "galact": 119, "pydgsm": 119, "oliveira": 119, "costa": 119, "2008": 119, "0802": 119, "1525": 119, "zheng": 119, "2016": 119, "1605": 119, "04920": 119, "evalu": [119, 186, 189, 195, 200], "fold": [119, 126, 171, 189, 220], "bright": 119, "n_side": 119, "interpolation_frequ": 119, "41": 119, "61": 119, "healpix": 119, "skymap": 119, "downsiz": 119, "pixel": 119, "greatli": 119, "n_samples_time_domain": 120, "odd": [120, 197], "min_freq": [120, 196], "max_freq": [120, 196], "perfect_whit": 120, "time_domain": [120, 190], "dc": [120, 148], "nquist": 120, "frequencei": 120, "v_rm": 120, "roughli": [120, 121, 215], "flat": [120, 200], "rayleigh": [120, 196, 204], "white": 120, "rl": 120, "sept": 120, "multi_whit": 120, "excluded_channel": 120, "exclud": 120, "compli": 121, "signal_window_start": 123, "signal_window_length": 123, "noise_window_start": 123, "noise_window_length": 123, "laid": 123, "stored_nois": 123, "rms_stage": 123, "glitch": 124, "smoothli": 124, "filter_s": 124, "prepend": 124, "tukei": 124, "percentag": 124, "span": 124, "fill": [124, 214], "template_directori": 125, "correl": [125, 126, 128, 134, 174, 175, 179, 189, 219, 220], "ref_templ": 125, "resampling_factor": 125, "channels_to_us": [125, 135, 179], "cosmic_rai": [125, 135, 141, 179], "n_templat": 125, "correctd": 126, "thu": [126, 134], "electric_field_templ": [126, 143], "use_sim": [126, 143], "estim": [126, 143, 148, 216], "window_funct": 127, "around_puls": 127, "window_width": [127, 200], "window_rise_tim": 127, "time_window_start": 127, "time_window_end": 127, "han": [127, 189], "rise": 127, "channel_pair": 128, "use_envelop": 128, "360": [128, 213], "beforehand": [129, 188, 222], "10th": [129, 189], "calculateamplitudeperraysolut": [130, 131], "host": 134, "interferometr": 134, "rit": 134, "schoorlemm": 134, "jr": 134, "2006": 134, "10348": 134, "schlueter": 134, "hueg": 134, "1088": 134, "1748": 134, "0221": 134, "p07048": 134, "x_rit": 134, "x_max": 134, "irregular": 134, "vxb": 134, "signal_kind": 134, "beamform": [134, 204], "metric": [134, 200], "hilbert_sum": [134, 200], "interferomet": 134, "number_of_antenna": 134, "anchor": [134, 200], "singal": 134, "lower_depth": 134, "400": 134, "upper_depth": 134, "bin_siz": 134, "return_profil": 134, "samp": 134, "narrow": 134, "cm2": 134, "pf": 134, "depths_cors": 134, "coars": 134, "depths_fin": 134, "signals_cores": 134, "signals_fin": 134, "popt": 134, "use_mc_geometri": 134, "use_mc_puls": 134, "p_axi": 134, "vxvxb": 134, "quadrat": 134, "coordinatesytem": 134, "idx": 134, "argmax": 134, "shower_axis_init": 134, "shower_axis_mc": 134, "core_mc": 134, "initial_grid_spac": 134, "centered_around_truth": 134, "cross_section_s": 134, "deg_resolut": 134, "726646259971648e": 134, "stupid": 134, "strenght": 134, "60m": 134, "abitrari": 134, "side": [134, 174, 183, 184], "1000m": 134, "target": [134, 144], "deg2rad": 134, "point_found": 134, "strengt": 134, "is_mc": 134, "truth": [134, 219], "smear": 134, "optain": 134, "inperfect": 134, "traces_vxb": 134, "mp": 134, "mc_po": 134, "fname": 134, "fitur": 134, "time_uncertainti": 135, "time_resolut": 136, "pre_pulse_tim": 136, "post_pulse_tim": 136, "sys_dx": 136, "sys_di": 136, "sys_dz": 136, "sys_amp": 136, "aplif": 136, "simstationclass": 137, "seq": 138, "signal_window_pr": 140, "signal_window_post": 140, "noise_window": 140, "distinguish": [141, 219], "forced_event_typ": 141, "accordingli": [141, 188], "criteria": [141, 157, 169], "decis": 141, "make_priors_plot": [142, 143], "theori": 143, "2102": 143, "00258": 143, "amp_dct": 143, "pulse_time_prior": 143, "pulse_time_uncertainti": 143, "n_iter": 143, "pol": [143, 191], "relative_toler": 143, "convergence_level": 143, "energy_fluence_passband": 143, "slope_passband": 143, "phase_slop": 143, "ift": 143, "bandpass_filt": [143, 192], "prior": 143, "efield_sc": 143, "linearoper": 144, "sigma_m": 144, "sigma_n": 144, "codomain": 144, "endomorphicoper": 144, "wise": [144, 198], "revers": [144, 219], "domaintupl": 144, "readrnogdatamattak": [145, 147, 168], "get_time_offset": [145, 147, 148], "readrnogdata": [145, 147, 148], "readaradata": [145, 149], "calculate_simulation_weight": [145, 151, 152], "make_sim_st": [145, 151, 152], "make_sim_show": [145, 151, 152], "readcorea": [145, 151, 155, 156], "readcoreasshow": [145, 151], "antenna_id": [145, 151, 154], "readcoreasst": [145, 151], "readcoreasstationgrid": [145, 151], "simulationselector": [145, 151], "readariannadata": [145, 161, 163], "readariannadatacalib": [145, 161], "openfil": [145, 146], "close_fil": [145, 146], "get_filenam": [145, 146], "get_event_id": [145, 146], "get_event_i": [145, 146, 219], "get_ev": [145, 146, 147, 148, 219], "get_detector": [145, 146, 158, 214], "get_n_ev": [145, 146], "parse_head": 146, "parse_detector": [146, 214], "fail_on_version_mismatch": 146, "fail_on_minor_version_mismatch": 146, "max_open_fil": 146, "buffer_s": 146, "104857600": 146, "byte": 146, "100mb": 146, "eventid": [146, 159], "event_numb": 146, "set_selector": [147, 148], "get_events_inform": [147, 148], "get_event_by_index": [147, 148], "temporari": 148, "calibr": [148, 162, 163, 214, 216], "mattak": 148, "519": 148, "time_offset": 148, "trace_start_tim": [148, 188], "run_table_path": 148, "load_run_t": 148, "reader": [148, 219], "run_tabl": 148, "mattak_kwarg": 148, "root_file_or_fold": 148, "run_nr": 148, "1100": 148, "679": 148, "dirs_fil": 148, "read_calibrated_data": 148, "select_trigg": 148, "select_run": 148, "apply_baseline_correct": 148, "convert_to_voltag": 148, "selector": 148, "run_typ": 148, "run_time_rang": 148, "max_trigger_r": 148, "overwrite_sampling_r": 148, "stationxx": 148, "runxxx": 148, "incorp": 148, "convin": 148, "run_tim": 148, "trigger_r": 148, "programm": 148, "interrupt": [148, 219], "messag": [148, 222], "eventinfo": 148, "trigger_selector": 148, "triggertyp": 148, "runtabl": 148, "suffici": [148, 190], "partial": 148, "unconstrain": 148, "hz": 148, "backend": 148, "pyroot": 148, "fallback": 148, "runinfo": 148, "eventnumb": 148, "read_ev": 148, "triggertim": 148, "indeci": 148, "event_index": 148, "particluar": 148, "chronolog": 148, "across": [148, 222], "corsika": 152, "convex": 152, "hull": 152, "ground": [153, 198, 213], "star": [153, 156, 214], "closest": [153, 156], "reuturn": [153, 156], "logger_level": 154, "set_ascending_run_and_event_numb": 154, "notset": 154, "__ascending_run_and_event_numb": 154, "bee": 154, "default_id": 154, "ynax": 156, "frequency_window": 157, "n_std": 157, "std": 157, "stricter": 157, "selected_sim": 157, "read_detector": [158, 214], "max_file_s": 159, "1024": [159, 214, 220], "check_for_dupl": 159, "events_per_fil": 159, "mbyte": 159, "writer": 159, "whenev": [159, 210, 213], "fullfil": 159, "simelectricfield": 159, "version_major": 160, "version_minor": 160, "scan_files_majorversion_minorvers": 160, "rawdata": 163, "fpncorrecteddata": 163, "calibrateddata": 163, "time_interv": 163, "ampoutdata": 163, "random_iter": 163, "fpn": 163, "regardless": 163, "fpnsubdata": 163, "walk": 163, "noiseimporterroot": [164, 165], "noiseimport": [164, 165, 166, 167], "get_noise_st": [164, 169], "seizabl": 166, "basi": [166, 222], "noise_fil": 166, "rnog": [168, 213], "noise_fold": 168, "file_pattern": [168, 169], "match_station_id": 168, "channel_map": [168, 169], "scramble_noise_file_ord": 168, "random_se": [168, 169], "reader_kwarg": 168, "logg": [168, 169], "arguement": 168, "max_iter": 169, "draw_noise_statist": 169, "restrict_station_id": 169, "allow_noise_resampl": 169, "baseline_substract": 169, "allowed_trigg": 169, "subdirectori": 169, "recurs": 169, "until": [169, 189, 216], "suitabl": 169, "thrown": [169, 209], "mean_opt": 169, "forward": [171, 197], "provied": 171, "use_bandpass_filt": 171, "passband_low": 171, "passband_high": 171, "include_focus": 171, "use_mc": 171, "n_samples_multiplication_factor": 171, "plot_traces_with_true_input": 171, "themselv": [171, 174, 215], "against": [171, 213], "overlai": 171, "get_correlation_array_2d": [172, 174, 175], "get_correlation_for_po": [172, 174, 175], "get_signal_travel_tim": [172, 174, 175], "find_ray_typ": [172, 174], "find_receiving_zenith": [172, 174], "get_correlation_array_3d": [172, 175], "lookup_table_loc": [174, 175], "reconstructor": [174, 175], "lookup": [174, 175], "z_width": 174, "grid_spac": 174, "direction_guess": 174, "use_dnr": 174, "stripe": 174, "strip": 174, "dnr": 174, "d_hor": [174, 175], "ray_typ": [174, 175], "ch1": 174, "scenario": 174, "distances_2d": 175, "azimuths_2d": 175, "z_coordinates_2d": 175, "distance_step_3d": 175, "widths_3d": 175, "z_step_3d": 175, "min_antenna_dist": 175, "debug_fold": 175, "dept": 175, "get_antenna_posit": [176, 177], "calculate_time_delai": [176, 177], "get_channel_trace_start_tim": [176, 177], "check_vertical_str": [176, 177], "power_sum": [176, 177], "phase_sign": [176, 177], "phased_trigg": [176, 177], "particip": 177, "1809": 177, "04573": 177, "ant_po": 177, "floatss": 177, "959931089": 177, "714608352": 177, "513801244": 177, "333826648": 177, "164572284": 177, "11022302e": 177, "ref_index": [177, 204], "sampling_frequ": [177, 209], "beam_rol": 177, "throw": 177, "dont": 177, "channel_trace_start_tim": 177, "coh_sum": 177, "num_fram": 177, "roll": [177, 188, 204], "phased_trac": 177, "is_trigg": 177, "met": 177, "simple_phased_threshold": 177, "set_not_trigg": [177, 183, 184], "not_trigg": [177, 183, 184], "start_pulser_posit": 178, "number_coincid": [182, 186], "envelope_trigg": 182, "high_threshold": [183, 184], "low_threshold": [183, 184], "time_coincid": [183, 184, 204], "calculat": [183, 184, 185, 187], "tt": 183, "triggerd": 183, "triggerd_bin": 183, "triggered_tim": 183, "default_high_low": [183, 184], "n_high_low": 184, "default_powerint": 185, "slide": 185, "300k": 186, "273k": 186, "250k": 186, "triggerpath": 186, "10db": 186, "rnog_surface_trigger_measur": 186, "default_simple_threshold": 187, "data_to_sim": 188, "vmin": 189, "matrix": 189, "chi": 189, "loglikelihood": 189, "climb": 189, "uphil": 189, "invert": [189, 213], "hess": 189, "expens": 189, "robust": 189, "contour": 189, "hessian": 189, "author": [189, 213], "dembinski": 189, "kit": 189, "edu": 189, "cov": 189, "invcov": 189, "linalg": 189, "inv": 189, "chisquar": 189, "par": 189, "grad": 189, "negloglik": 189, "rcond": [189, 190], "svd": [189, 190], "singular": [189, 190], "reconstuct": 189, "foward": 189, "maxim": 189, "debug_plotpath": 189, "use_mc_direct": [189, 190], "frequeci": 189, "antenna_pattern_provid": [190, 209], "link": 190, "springer": 190, "1140": 190, "epjc": 190, "s10052": 190, "019": 190, "6971": 190, "furthermor": 190, "force_polar": 190, "deconvolut": 191, "analytic_puls": 192, "amp_from_energi": [192, 193], "get_analytic_pulse_freq": [192, 193], "get_analytic_puls": [192, 193], "cr_flux": 192, "get_measured_data": [192, 195], "get_interpolated_cr_flux": [192, 195], "get_analytic_cr_flux": [192, 195], "get_flux_per_energy_bin": [192, 195], "get_cr_event_r": [192, 195], "plot_measured_spectrum": [192, 195], "tunnel_diod": [192, 196], "geometryutil": 192, "get_time_delay_from_direct": [192, 198], "rot_z": [192, 198], "rot_x": [192, 198], "rot_i": [192, 198], "get_efield_in_spherical_coord": [192, 198], "get_fresnel_angl": [192, 198], "get_fresnel_t_p": [192, 198], "get_fresnel_t_": [192, 198], "get_fresnel_r_p": [192, 198], "get_fresnel_r_": [192, 198], "get_refractive_index": [192, 199], "get_sign": [192, 200], "interfere_traces_interpol": [192, 200], "get_time_shift": [192, 200], "fit_axi": [192, 200], "get_intersection_between_line_and_plan": [192, 200], "io_util": 192, "read_pickl": [192, 201], "addlogginglevel": [192, 202, 222], "mro": [192, 203], "rolled_sum_rol": [192, 204], "rolling_indic": [192, 204], "rolled_sum_tak": [192, 204], "rolled_sum_sl": [192, 204], "thermalnoisegener": [192, 204], "generate_nois": [192, 204], "thermalnoisegeneratorphasedarrai": [192, 204], "generate_noise2": [192, 204], "set_template_directori": [192, 206], "get_cr_ref_templ": [192, 206], "get_set_of_cr_templates_ful": [192, 206], "get_set_of_cr_templ": [192, 206], "get_set_of_nu_templ": [192, 206], "get_nu_ref_templ": [192, 206], "analyze_tim": [192, 207], "tracewindow": 192, "get_window_around_maximum": [192, 208], "trace_util": 192, "get_efield_antenna_factor": [192, 209], "get_channel_voltage_from_efield": [192, 209], "get_electric_field_energy_flu": [192, 209], "upsampling_fir": [192, 209], "butterworth_filter_trac": [192, 209], "apply_butterworth": [192, 209], "delay_trac": [192, 209], "get_git_commit_hash": [192, 211], "get_nuradiomc_commit_hash": [192, 211], "get_nuradioreco_commit_hash": [192, 211], "amp_p0": 193, "amp_p1": 193, "phase_p0": 193, "n_samples_tim": 193, "phase_p1": 193, "quadratic_term": 193, "quadratic_term_offset": 193, "glaser": 193, "data_auger_19": 195, "data_ta_21": 195, "err_up": 195, "err_low": 195, "log10_energi": 195, "auger_19": 195, "auger_17": 195, "ta_19": 195, "log10e_min": 195, "log10e_max": 195, "log10energi": 195, "8726646259971648": 195, "a_eff": 195, "eventr": 195, "zenith_angl": 195, "solid_angl": 195, "base_unit": 195, "attent": [195, 220], "yr": 195, "diodd": 196, "lowpass": 196, "resist": 196, "trace_after_tunnel_diod": 196, "999999999999999e": 196, "n_tri": 196, "conserv": 197, "000293": 198, "zenith_incom": 198, "n_2": 198, "n_1": 198, "snell": 198, "n1": 198, "n2": 198, "transmit": 198, "defind": 198, "sum_trac": 200, "tstep": 200, "target_po": 200, "tab": 200, "traget": 200, "stamp": 200, "refractivityt": 200, "avg": 200, "tshift": 200, "sec": 200, "corex": 200, "corei": 200, "intersetct": 200, "flatten": 200, "plane_norm": 200, "plane_anchor": 200, "line_direct": 200, "line_anchor": 200, "betweem": 200, "rosettacod": 200, "find_the_intersection_of_a_line_with_a_plan": 200, "psi": 200, "latin1": 201, "suppos": 201, "levelnam": 202, "levelnum": 202, "methodnam": 202, "comprehens": 202, "getloggerclass": 202, "clobber": 202, "attributeerror": 202, "answer": 202, "__call__": [203, 223], "sumtr": 204, "n_major": 204, "time_coincidence_major": 204, "noise_typ": 204, "keep_full_band": 204, "symmetr": [204, 215], "trace_length": 204, "window_length": 204, "main_low_angl": 204, "039338088856046": 204, "main_high_angl": 204, "n_beam": 204, "quantiz": 204, "96": 204, "220": 204, "durat": 204, "calcuat": 204, "59": 204, "lowest": [204, 213], "highest": [204, 213], "phasing_mod": 204, "trigger_mod": 204, "binned_sum": 204, "140": 206, "module_list": 207, "t_tot": 207, "sustract": 208, "left_tim": 208, "right_tim": 208, "return_spectrum": 209, "electric_field_trac": 209, "signal_window_mask": 209, "noise_window_mask": 209, "original_sampling_frequ": 209, "ntap": 209, "impuls": 209, "tap": 209, "upsampled_trac": 209, "cutoff": 209, "filtered_trac": 209, "filtered_spectrum": 209, "delayed_sampl": 209, "crop": 209, "delayed_trac": 209, "choic": 210, "mm": [210, 223], "eplu": 210, "substanc": 210, "mole": 210, "lumin": 210, "intens": 210, "candela": 210, "steradian": 210, "si": 210, "esi": 210, "coulomb": 210, "offlin": [210, 214], "pierr": 210, "collabor": 210, "geant4": 210, "head": 213, "demand": 213, "sha1sum": 213, "hashlib": 213, "send": [213, 214], "christian": 213, "he": 213, "inf": 213, "imprecis": 213, "embed": 213, "10cm": 213, "3m": 213, "nose": 213, "58m": 213, "100m": 213, "200m": 213, "52cm": 213, "260cm": 213, "270mm": 213, "xf": 213, "inch": 213, "borehol": 213, "cubic": 213, "4200": 213, "halfwai": 213, "wall": 213, "574": 213, "ska": 213, "skala": 213, "350": 213, "ieeexplor": 213, "ieee": 213, "abstract": 213, "7297231": 213, "detector_tim": [214, 216], "lifetim": 214, "took": 214, "decomiss": 214, "compost": 214, "remot": 214, "properli": 214, "situat": 214, "varieti": 214, "ship": 214, "mostli": 214, "cumbersom": 214, "prone": 214, "declar": 214, "substitut": 214, "ant_com": 214, "rnog_vpol_4inch_center_n1": 214, "73": 214, "likewis": 214, "therebi": 214, "_event": 214, "event_read": [214, 219], "event_writ": [214, 219], "detector_brows": 214, "web": [214, 218], "127": [214, 218], "8080": [214, 218], "dropdown": 214, "position_x": 215, "position_i": 215, "position_z": 215, "rod": 215, "west": 215, "simplic": 215, "sidewai": 215, "tradit": 215, "upright": 215, "my_detector": 215, "deployment_tim": 215, "aka": 215, "accumul": 215, "euler": 215, "un": 215, "intuit": [215, 216], "everydai": 215, "intrins": 215, "trigger_adc_nbit": 215, "trigger_adc_reference_voltag": 215, "trigger_adc_sampling_frequ": 215, "context": 216, "mainten": 216, "ii": 216, "campaign": 216, "bring": 216, "concept": 216, "immedi": 216, "imagin": 216, "poor": 216, "dedic": [216, 219, 222], "datatim": 216, "reanalyz": 216, "todai": 216, "earlier": 216, "past": 216, "organ": [216, 219], "station_rnog": 216, "eventbrows": 218, "ly": 218, "webbrows": 218, "brows": 218, "press": 218, "ctrl": 218, "inotifi": 218, "reload": 218, "debugg": 218, "pin": 218, "224": 218, "474": 218, "503": 218, "favorit": 218, "nuradioview": 218, "simpler": 219, "obviou": 219, "hierarchi": 219, "onto": 219, "streamlin": 219, "nuradioreco_io": 219, "event_1": 219, "event_2": 219, "stnp": 219, "hist": 219, "children": 219, "zenith_uncertainti": 219, "respectr": 219, "spread": 219, "despit": 219, "hybriddetector": 219, "divers": 219, "impract": 219, "impement": 219, "slot": 219, "pai": 220, "horitont": 220, "reliabl": 220, "ior": 220, "cherenkov_angl": 220, "arcco": 220, "efield_spec": 220, "e18": 220, "efield_templ": 220, "exactl": 220, "influenc": 220, "rougher": 220, "struggl": 220, "colormap": 220, "serious": 220, "freez": 220, "arrang": 222, "deem": 222, "cleanup": 222, "fact": 222, "behaviour": 222, "getlogg": 222, "report": 222, "logging_level": 222, "setlevel": 222, "consol": 222, "f_handler": 222, "filehandl": 222, "addhandl": 222, "life": 223, "132": 223, "milli": 223, "2f": 223, "stai": 223, "omit": 223, "accomplish": 223, "superced": 223, "behavior": 223}, "objects": {"NuRadioMC": [[5, 0, 0, "-", "EvtGen"], [18, 0, 0, "-", "SignalGen"], [25, 0, 0, "-", "SignalProp"], [31, 0, 0, "-", "simulation"], [33, 0, 0, "-", "utilities"]], "NuRadioMC.EvtGen": [[6, 0, 0, "-", "NuRadioMCtoAraSim"], [7, 0, 0, "-", "NuRadioProposal"], [8, 0, 0, "-", "create_tau_tab"], [9, 0, 0, "-", "generate_cylinder"], [10, 0, 0, "-", "generate_unforced"], [11, 0, 0, "-", "generator"], [12, 0, 0, "-", "generator_ASCII"], [13, 0, 0, "-", "generator_skeleton"], [14, 0, 0, "-", "hdf5_to_ASCII"], [15, 0, 0, "-", "proposal_table_manager"], [16, 0, 0, "-", "readARAEventList"], [17, 0, 0, "-", "readEventList_ASCII"]], "NuRadioMC.EvtGen.NuRadioProposal": [[7, 1, 1, "", "ProposalFunctions"], [7, 1, 1, "", "SecondaryProperties"], [7, 3, 1, "", "is_em_primary"], [7, 3, 1, "", "is_had_primary"], [7, 3, 1, "", "is_shower_primary"], [7, 3, 1, "", "particle_code"]], "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions": [[7, 2, 1, "", "get_decays"], [7, 2, 1, "", "get_secondaries_array"]], "NuRadioMC.EvtGen.generate_unforced": [[10, 3, 1, "", "generate_eventlist_cylinder"]], "NuRadioMC.EvtGen.generator": [[11, 3, 1, "", "generate_eventlist_cylinder"], [11, 3, 1, "", "generate_surface_muons"], [11, 3, 1, "", "generate_vertex_positions"], [11, 3, 1, "", "get_energies"], [11, 3, 1, "", "get_energy_from_flux"], [11, 3, 1, "", "get_intersection_volume_neutrino"], [11, 3, 1, "", "get_product_position_time"], [11, 3, 1, "", "get_tau_95_length"], [11, 3, 1, "", "ice_cube_nu_fit"], [11, 3, 1, "", "ice_cube_nu_fit_2022"], [11, 3, 1, "", "intersection_box_ray"], [11, 3, 1, "", "is_in_fiducial_volume"], [11, 3, 1, "", "load_input_hdf5"], [11, 3, 1, "", "mask_arrival_azimuth"], [11, 3, 1, "", "primary_energy_from_deposited"], [11, 3, 1, "", "set_volume_attributes"], [11, 3, 1, "", "write_events_to_hdf5"]], "NuRadioMC.EvtGen.generator_ASCII": [[12, 3, 1, "", "generate_eventlist"]], "NuRadioMC.EvtGen.generator_skeleton": [[13, 3, 1, "", "generate_my_events"]], "NuRadioMC.EvtGen.proposal_table_manager": [[15, 3, 1, "", "download_proposal_tables"], [15, 3, 1, "", "get_compiler"], [15, 3, 1, "", "produce_proposal_tables"], [15, 3, 1, "", "produce_proposal_tables_tarball"]], "NuRadioMC.EvtGen.readARAEventList": [[16, 3, 1, "", "convert_to_hdf5"], [16, 3, 1, "", "read_ARA_eventlist"]], "NuRadioMC.EvtGen.readEventList_ASCII": [[17, 3, 1, "", "read_eventlist"]], "NuRadioMC.SignalGen": [[19, 0, 0, "-", "ARZ"], [21, 0, 0, "-", "HCRB2017"], [22, 0, 0, "-", "askaryan"], [23, 0, 0, "-", "emitter"], [24, 0, 0, "-", "parametrizations"]], "NuRadioMC.SignalGen.ARZ": [[20, 0, 0, "-", "ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ": [[20, 1, 1, "", "ARZ"], [20, 1, 1, "", "ARZ_tabulated"], [20, 3, 1, "", "get_vector_potential"], [20, 3, 1, "", "get_vector_potential_numba"], [20, 3, 1, "", "theta_to_thetaprime"], [20, 3, 1, "", "thetaprime_to_theta"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ": [[20, 2, 1, "", "em_fraction"], [20, 2, 1, "", "get_last_shower_profile_id"], [20, 2, 1, "", "get_shower_profile"], [20, 2, 1, "", "get_time_trace"], [20, 2, 1, "", "get_vector_potential"], [20, 2, 1, "", "get_vector_potential_fast"], [20, 2, 1, "", "set_interpolation_factor"], [20, 2, 1, "", "set_interpolation_factor2"], [20, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated": [[20, 2, 1, "", "get_time_trace"], [20, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.HCRB2017": [[21, 3, 1, "", "gauss"], [21, 3, 1, "", "get_N_AskDepthA"], [21, 3, 1, "", "get_frequency_spectrum"], [21, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.askaryan": [[22, 3, 1, "", "get_frequency_spectrum"], [22, 3, 1, "", "get_time_trace"], [22, 3, 1, "", "set_log_level"]], "NuRadioMC.SignalGen.emitter": [[23, 3, 1, "", "get_frequency_spectrum"], [23, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.parametrizations": [[24, 3, 1, "", "get_parametrizations"], [24, 3, 1, "", "get_time_trace"], [24, 3, 1, "", "set_log_level"]], "NuRadioMC.SignalProp": [[26, 0, 0, "-", "analyticraytracing"], [27, 0, 0, "-", "directRayTracing"], [28, 0, 0, "-", "propagation"], [29, 0, 0, "-", "propagation_base_class"], [30, 0, 0, "-", "radioproparaytracing"]], "NuRadioMC.SignalProp.analyticraytracing": [[26, 3, 1, "", "get_n_steps"], [26, 3, 1, "", "get_segments"], [26, 3, 1, "", "get_z_deep"], [26, 1, 1, "", "ray_tracing"], [26, 1, 1, "", "ray_tracing_2D"], [26, 4, 1, "", "speed_of_light"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing": [[26, 2, 1, "", "apply_propagation_effects"], [26, 2, 1, "", "find_solutions"], [26, 2, 1, "", "get_attenuation"], [26, 2, 1, "", "get_config"], [26, 2, 1, "", "get_focusing"], [26, 2, 1, "", "get_launch_vector"], [26, 2, 1, "", "get_number_of_raytracing_solutions"], [26, 2, 1, "", "get_number_of_solutions"], [26, 2, 1, "", "get_output_parameters"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_path_length"], [26, 2, 1, "", "get_ray_path"], [26, 2, 1, "", "get_raytracing_output"], [26, 2, 1, "", "get_receive_vector"], [26, 2, 1, "", "get_reflection_angle"], [26, 2, 1, "", "get_results"], [26, 2, 1, "", "get_solution_type"], [26, 2, 1, "", "get_travel_time"], [26, 2, 1, "", "has_solution"], [26, 2, 1, "", "reset_solutions"], [26, 2, 1, "", "set_config"], [26, 2, 1, "", "set_solution"], [26, 2, 1, "", "set_start_and_end_point"], [26, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D": [[26, 2, 1, "", "angular_diff"], [26, 2, 1, "", "apply_propagation_effects"], [26, 2, 1, "", "determine_solution_type"], [26, 2, 1, "", "ds"], [26, 2, 1, "", "find_solutions"], [26, 2, 1, "", "get_C0_from_log"], [26, 2, 1, "", "get_C_0_from_angle"], [26, 2, 1, "", "get_C_1"], [26, 2, 1, "", "get_angle"], [26, 2, 1, "", "get_angle_from_C_0"], [26, 2, 1, "", "get_angle_from_logC_0"], [26, 2, 1, "", "get_attenuation"], [26, 2, 1, "", "get_attenuation_along_path"], [26, 2, 1, "", "get_c"], [26, 2, 1, "", "get_config"], [26, 2, 1, "", "get_delta_y"], [26, 2, 1, "", "get_gamma"], [26, 2, 1, "", "get_launch_angle"], [26, 2, 1, "", "get_launch_vector"], [26, 2, 1, "", "get_number_of_raytracing_solutions"], [26, 2, 1, "", "get_number_of_solutions"], [26, 2, 1, "", "get_output_parameters"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_path_length"], [26, 2, 1, "", "get_path_length_analytic"], [26, 2, 1, "", "get_path_reflections"], [26, 2, 1, "", "get_path_segments"], [26, 2, 1, "", "get_raytracing_output"], [26, 2, 1, "", "get_receive_angle"], [26, 2, 1, "", "get_receive_vector"], [26, 2, 1, "", "get_reflection_angle"], [26, 2, 1, "", "get_reflection_point"], [26, 2, 1, "", "get_results"], [26, 2, 1, "", "get_solution_type"], [26, 2, 1, "", "get_surf_skim_angle"], [26, 2, 1, "", "get_surface_pulse"], [26, 2, 1, "", "get_tof_for_straight_line"], [26, 2, 1, "", "get_travel_time"], [26, 2, 1, "", "get_travel_time_analytic"], [26, 2, 1, "", "get_turning_point"], [26, 2, 1, "", "get_y"], [26, 2, 1, "", "get_y_diff"], [26, 2, 1, "", "get_y_turn"], [26, 2, 1, "", "get_y_with_z_mirror"], [26, 2, 1, "", "get_z_from_n"], [26, 2, 1, "", "get_z_mirrored"], [26, 2, 1, "", "get_z_unmirrored"], [26, 2, 1, "", "has_solution"], [26, 2, 1, "", "is_in_refraction_zone"], [26, 2, 1, "", "n"], [26, 2, 1, "", "obj_delta_y"], [26, 2, 1, "", "obj_delta_y_square"], [26, 2, 1, "", "plot_result"], [26, 2, 1, "", "reset_solutions"], [26, 2, 1, "", "set_config"], [26, 2, 1, "", "set_start_and_end_point"], [26, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.directRayTracing": [[27, 1, 1, "", "direct_ray_tracing"]], "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing": [[27, 2, 1, "", "apply_propagation_effects"], [27, 2, 1, "", "find_solutions"], [27, 2, 1, "", "get_attenuation"], [27, 2, 1, "", "get_config"], [27, 2, 1, "", "get_launch_vector"], [27, 2, 1, "", "get_number_of_raytracing_solutions"], [27, 2, 1, "", "get_number_of_solutions"], [27, 2, 1, "", "get_output_parameters"], [27, 2, 1, "", "get_path"], [27, 2, 1, "", "get_path_length"], [27, 2, 1, "", "get_raytracing_output"], [27, 2, 1, "", "get_receive_vector"], [27, 2, 1, "", "get_reflection_angle"], [27, 2, 1, "", "get_results"], [27, 2, 1, "", "get_solution_type"], [27, 2, 1, "", "get_travel_time"], [27, 2, 1, "", "has_solution"], [27, 2, 1, "", "reset_solutions"], [27, 2, 1, "", "set_config"], [27, 2, 1, "", "set_start_and_end_point"], [27, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.propagation": [[28, 3, 1, "", "get_propagation_module"]], "NuRadioMC.SignalProp.propagation_base_class": [[29, 1, 1, "", "ray_tracing_base"]], "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base": [[29, 2, 1, "", "apply_propagation_effects"], [29, 2, 1, "", "find_solutions"], [29, 2, 1, "", "get_attenuation"], [29, 2, 1, "", "get_config"], [29, 2, 1, "", "get_launch_vector"], [29, 2, 1, "", "get_number_of_raytracing_solutions"], [29, 2, 1, "", "get_number_of_solutions"], [29, 2, 1, "", "get_output_parameters"], [29, 2, 1, "", "get_path"], [29, 2, 1, "", "get_path_length"], [29, 2, 1, "", "get_raytracing_output"], [29, 2, 1, "", "get_receive_vector"], [29, 2, 1, "", "get_reflection_angle"], [29, 2, 1, "", "get_results"], [29, 2, 1, "", "get_solution_type"], [29, 2, 1, "", "get_travel_time"], [29, 2, 1, "", "has_solution"], [29, 2, 1, "", "reset_solutions"], [29, 2, 1, "", "set_config"], [29, 2, 1, "", "set_start_and_end_point"], [29, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.radioproparaytracing": [[30, 1, 1, "", "radiopropa_ray_tracing"]], "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing": [[30, 2, 1, "", "activate_auto_step_size"], [30, 2, 1, "", "apply_propagation_effects"], [30, 2, 1, "", "deactivate_auto_step_size"], [30, 2, 1, "", "delta_theta_bottom"], [30, 2, 1, "", "delta_theta_direct"], [30, 2, 1, "", "delta_theta_reflective"], [30, 2, 1, "", "find_solutions"], [30, 2, 1, "", "get_attenuation"], [30, 2, 1, "", "get_config"], [30, 2, 1, "", "get_correction_path_length"], [30, 2, 1, "", "get_correction_travel_time"], [30, 2, 1, "", "get_focusing"], [30, 2, 1, "", "get_frequencies_for_attenuation"], [30, 2, 1, "", "get_launch_vector"], [30, 2, 1, "", "get_number_of_raytracing_solutions"], [30, 2, 1, "", "get_number_of_solutions"], [30, 2, 1, "", "get_output_parameters"], [30, 2, 1, "", "get_path"], [30, 2, 1, "", "get_path_candidate"], [30, 2, 1, "", "get_path_length"], [30, 2, 1, "", "get_raytracing_output"], [30, 2, 1, "", "get_receive_vector"], [30, 2, 1, "", "get_reflection_angle"], [30, 2, 1, "", "get_results"], [30, 2, 1, "", "get_solution_type"], [30, 2, 1, "", "get_travel_time"], [30, 2, 1, "", "has_solution"], [30, 2, 1, "", "raytracer_iterative"], [30, 2, 1, "", "raytracer_minimizer"], [30, 2, 1, "", "reset_solutions"], [30, 2, 1, "", "set_config"], [30, 2, 1, "", "set_cut_viewing_angle"], [30, 2, 1, "", "set_iterative_sphere_sizes"], [30, 2, 1, "", "set_iterative_step_sizes"], [30, 2, 1, "", "set_maximum_trajectory_length"], [30, 2, 1, "", "set_minimizer_tolerance"], [30, 2, 1, "", "set_shower_axis"], [30, 2, 1, "", "set_solutions"], [30, 2, 1, "", "set_start_and_end_point"], [30, 2, 1, "", "use_optional_function"]], "NuRadioMC.simulation": [[32, 0, 0, "-", "simulation"]], "NuRadioMC.simulation.simulation": [[32, 3, 1, "", "merge_config"], [32, 3, 1, "", "pretty_time_delta"], [32, 1, 1, "", "simulation"]], "NuRadioMC.simulation.simulation.simulation": [[32, 2, 1, "", "calculate_Veff"], [32, 2, 1, "", "get_Vrms"], [32, 2, 1, "", "get_bandwidth"], [32, 2, 1, "", "get_sampling_rate"], [32, 5, 1, "", "integrated_channel_response"], [32, 2, 1, "", "run"]], "NuRadioMC.utilities": [[34, 0, 0, "-", "Veff"], [35, 0, 0, "-", "attenuation"], [36, 0, 0, "-", "cross_sections"], [37, 0, 0, "-", "dump_hdf5"], [38, 0, 0, "-", "earth_attenuation"], [39, 0, 0, "-", "fluxes"], [40, 0, 0, "-", "inelasticities"], [41, 0, 0, "-", "medium"], [42, 0, 0, "-", "medium_base"], [43, 0, 0, "-", "merge_hdf5"], [45, 0, 0, "-", "plotting"], [46, 0, 0, "-", "runner"], [47, 0, 0, "-", "runner_example"], [48, 0, 0, "-", "split_hdf5"]], "NuRadioMC.utilities.Veff": [[34, 3, 1, "", "FC_limits"], [34, 3, 1, "", "export"], [34, 3, 1, "", "get_Veff_Aeff"], [34, 3, 1, "", "get_Veff_Aeff_array"], [34, 3, 1, "", "get_Veff_Aeff_single"], [34, 3, 1, "", "get_Veff_Aeff_single_wrapper"], [34, 3, 1, "", "get_Veff_water_equivalent"], [34, 3, 1, "", "get_index"], [34, 3, 1, "", "get_veff_output"], [34, 3, 1, "", "remove_duplicate_triggers"]], "NuRadioMC.utilities.attenuation": [[35, 3, 1, "", "fit_GL1"], [35, 3, 1, "", "get_attenuation_length"], [35, 3, 1, "", "get_temperature"]], "NuRadioMC.utilities.cross_sections": [[36, 3, 1, "", "csms"], [36, 3, 1, "", "get_interaction_length"], [36, 3, 1, "", "get_nu_cross_section"], [36, 3, 1, "", "param"]], "NuRadioMC.utilities.dump_hdf5": [[37, 3, 1, "", "dump"]], "NuRadioMC.utilities.earth_attenuation": [[38, 1, 1, "", "CoreMantleCrustModel"], [38, 1, 1, "", "PREM"], [38, 3, 1, "", "get_core_mantle_crust_weight"], [38, 3, 1, "", "get_simple_weight"], [38, 3, 1, "", "get_weight"]], "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel": [[38, 6, 1, "", "densities"], [38, 2, 1, "", "density"], [38, 6, 1, "", "earth_radius"], [38, 6, 1, "", "radii"], [38, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.earth_attenuation.PREM": [[38, 6, 1, "", "densities"], [38, 2, 1, "", "density"], [38, 6, 1, "", "earth_radius"], [38, 6, 1, "", "radii"], [38, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.fluxes": [[39, 3, 1, "", "get_exposure"], [39, 3, 1, "", "get_fluence_limit"], [39, 3, 1, "", "get_integrated_exposure"], [39, 3, 1, "", "get_limit_e1_flux"], [39, 3, 1, "", "get_limit_e2_flux"], [39, 3, 1, "", "get_limit_flux"], [39, 3, 1, "", "get_limit_from_aeff"], [39, 3, 1, "", "get_number_of_events_for_flux"]], "NuRadioMC.utilities.inelasticities": [[40, 3, 1, "", "get_ccnc"], [40, 3, 1, "", "get_neutrino_inelasticity"], [40, 3, 1, "", "inelasticity_tau_decay"], [40, 3, 1, "", "random_tau_branch"], [40, 3, 1, "", "rejection_sampling"]], "NuRadioMC.utilities.medium": [[41, 1, 1, "", "ARAsim_southpole"], [41, 3, 1, "", "get_ice_model"], [41, 1, 1, "", "greenland_firn"], [41, 1, 1, "", "greenland_perturbation"], [41, 1, 1, "", "greenland_simple"], [41, 1, 1, "", "mooresbay_simple"], [41, 1, 1, "", "mooresbay_simple_2"], [41, 1, 1, "", "southpole_2015"], [41, 1, 1, "", "southpole_simple"], [41, 1, 1, "", "uniform_ice"]], "NuRadioMC.utilities.medium.ARAsim_southpole": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_firn": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_perturbation": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_simple": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple_2": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_2015": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_simple": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.uniform_ice": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base": [[42, 1, 1, "", "IceModel"], [42, 1, 1, "", "IceModelSimple"], [42, 1, 1, "", "RadioPropaIceWrapper"], [42, 1, 1, "", "ScalarFieldBuilder"]], "NuRadioMC.utilities.medium_base.IceModel": [[42, 2, 1, "", "add_reflective_bottom"], [42, 2, 1, "", "get_average_index_of_refraction"], [42, 2, 1, "", "get_gradient_of_index_of_refraction"], [42, 2, 1, "", "get_ice_model_radiopropa"], [42, 2, 1, "", "get_index_of_refraction"], [42, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.IceModelSimple": [[42, 2, 1, "", "add_reflective_bottom"], [42, 2, 1, "", "get_average_index_of_refraction"], [42, 2, 1, "", "get_gradient_of_index_of_refraction"], [42, 2, 1, "", "get_ice_model_radiopropa"], [42, 2, 1, "", "get_index_of_refraction"], [42, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper": [[42, 2, 1, "", "add_module"], [42, 2, 1, "", "get_module"], [42, 2, 1, "", "get_modules"], [42, 2, 1, "", "get_scalar_field"], [42, 2, 1, "", "remove_module"], [42, 2, 1, "", "replace_module"]], "NuRadioMC.utilities.medium_base.ScalarFieldBuilder": [[42, 2, 1, "", "getGradient"], [42, 2, 1, "", "getValue"]], "NuRadioMC.utilities.merge_hdf5": [[43, 3, 1, "", "merge2"]], "NuRadioMC.utilities.plotting": [[45, 3, 1, "", "plot_vertex_distribution"]], "NuRadioMC.utilities.runner": [[46, 1, 1, "", "NuRadioMCRunner"]], "NuRadioMC.utilities.runner.NuRadioMCRunner": [[46, 2, 1, "", "get_outputfilename"], [46, 2, 1, "", "run"]], "NuRadioMC.utilities.runner_example": [[47, 3, 1, "", "task"]], "NuRadioMC.utilities.split_hdf5": [[48, 3, 1, "", "split_hdf5_input_file"]], "NuRadioReco": [[63, 0, 0, "-", "detector"], [86, 0, 0, "-", "framework"], [103, 0, 0, "-", "modules"], [192, 0, 0, "-", "utilities"]], "NuRadioReco.detector": [[64, 0, 0, "-", "ARA"], [66, 0, 0, "-", "ARIANNA"], [69, 0, 0, "-", "RNO_G"], [74, 0, 0, "-", "amp"], [75, 0, 0, "-", "antennapattern"], [76, 0, 0, "-", "detector"], [77, 0, 0, "-", "detector_base"], [78, 0, 0, "-", "detector_sql"], [79, 0, 0, "-", "detector_sys_uncertainties"], [80, 0, 0, "-", "filterresponse"], [81, 0, 0, "-", "generic_detector"], [82, 0, 0, "-", "response"], [83, 0, 0, "-", "sql_to_json"], [84, 0, 0, "-", "test_detector_db"], [85, 0, 0, "-", "visualize_detector"]], "NuRadioReco.detector.ARA": [[65, 0, 0, "-", "analog_components"]], "NuRadioReco.detector.ARA.analog_components": [[65, 3, 1, "", "get_system_response"], [65, 3, 1, "", "load_system_response"]], "NuRadioReco.detector.ARIANNA": [[67, 0, 0, "-", "analog_components"], [68, 0, 0, "-", "preprocessAmpResponses"]], "NuRadioReco.detector.ARIANNA.analog_components": [[67, 3, 1, "", "get_amplifier_response"], [67, 3, 1, "", "get_available_amplifiers"], [67, 3, 1, "", "get_cable_response"], [67, 3, 1, "", "get_cable_response_parametrized"], [67, 3, 1, "", "load_amp_measurement"], [67, 3, 1, "", "load_amplifier_response"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses": [[68, 3, 1, "", "preprocess_300Amp"], [68, 3, 1, "", "save_preprocessed_Amps"]], "NuRadioReco.detector.RNO_G": [[70, 0, 0, "-", "analog_components"], [71, 0, 0, "-", "db_mongo_read"], [72, 0, 0, "-", "db_mongo_write"], [73, 0, 0, "-", "rnog_detector"]], "NuRadioReco.detector.RNO_G.analog_components": [[70, 3, 1, "", "get_available_amplifiers"], [70, 3, 1, "", "load_amp_response"]], "NuRadioReco.detector.RNO_G.db_mongo_read": [[71, 1, 1, "", "Database"], [71, 3, 1, "", "dictionarize_nested_lists"], [71, 3, 1, "", "dictionarize_nested_lists_as_tuples"]], "NuRadioReco.detector.RNO_G.db_mongo_read.Database": [[71, 2, 1, "", "find_primary_measurement"], [71, 2, 1, "", "get_all_available_signal_chain_configs"], [71, 2, 1, "", "get_channel_signal_chain"], [71, 2, 1, "", "get_channel_signal_chain_measurement"], [71, 2, 1, "", "get_collection_information"], [71, 2, 1, "", "get_collection_names"], [71, 2, 1, "", "get_complete_channel_information"], [71, 2, 1, "", "get_complete_device_information"], [71, 2, 1, "", "get_complete_station_information"], [71, 2, 1, "", "get_component_data"], [71, 2, 1, "", "get_database_time"], [71, 2, 1, "", "get_detector_time"], [71, 2, 1, "", "get_general_channel_information"], [71, 2, 1, "", "get_general_device_information"], [71, 2, 1, "", "get_general_station_information"], [71, 2, 1, "", "get_identifier"], [71, 2, 1, "", "get_object_names"], [71, 2, 1, "", "get_position"], [71, 2, 1, "", "get_quantity_names"], [71, 2, 1, "", "get_station_ids"], [71, 2, 1, "", "load_board_information"], [71, 2, 1, "", "query_modification_timestamps_per_station"], [71, 2, 1, "", "set_database_time"], [71, 2, 1, "", "set_detector_time"]], "NuRadioReco.detector.RNO_G.db_mongo_write": [[72, 1, 1, "", "Database"]], "NuRadioReco.detector.RNO_G.db_mongo_write.Database": [[72, 2, 1, "", "add_entry_to_database"], [72, 2, 1, "", "add_general_channel_info_to_station"], [72, 2, 1, "", "add_general_device_info_to_station"], [72, 2, 1, "", "add_general_station_info"], [72, 2, 1, "", "add_measurement_protocol"], [72, 2, 1, "", "change_primary_antenna_measurement"], [72, 2, 1, "", "change_primary_cable_measurement"], [72, 2, 1, "", "change_primary_downhole_measurement"], [72, 2, 1, "", "change_primary_drab_measurement"], [72, 2, 1, "", "change_primary_iglu_measurement"], [72, 2, 1, "", "change_primary_surface_measurement"], [72, 2, 1, "", "clone_collection_to_collection"], [72, 2, 1, "", "create_empty_collection"], [72, 2, 1, "", "decommission_a_channel"], [72, 2, 1, "", "decommission_a_device"], [72, 2, 1, "", "decommission_a_station"], [72, 2, 1, "", "find_primary_measurement"], [72, 2, 1, "", "get_all_available_signal_chain_configs"], [72, 2, 1, "", "get_channel_signal_chain"], [72, 2, 1, "", "get_channel_signal_chain_measurement"], [72, 2, 1, "", "get_collection_information"], [72, 2, 1, "", "get_collection_names"], [72, 2, 1, "", "get_complete_channel_information"], [72, 2, 1, "", "get_complete_device_information"], [72, 2, 1, "", "get_complete_station_information"], [72, 2, 1, "", "get_component_data"], [72, 2, 1, "", "get_database_time"], [72, 2, 1, "", "get_detector_time"], [72, 2, 1, "", "get_general_channel_information"], [72, 2, 1, "", "get_general_device_information"], [72, 2, 1, "", "get_general_station_information"], [72, 2, 1, "", "get_identifier"], [72, 2, 1, "", "get_object_names"], [72, 2, 1, "", "get_position"], [72, 2, 1, "", "get_quantity_names"], [72, 2, 1, "", "get_station_ids"], [72, 2, 1, "", "load_board_information"], [72, 2, 1, "", "query_modification_timestamps_per_station"], [72, 2, 1, "", "rename_database_collection"], [72, 2, 1, "", "set_database_time"], [72, 2, 1, "", "set_detector_time"], [72, 2, 1, "", "set_not_working"], [72, 2, 1, "", "update_current_primary"]], "NuRadioReco.detector.RNO_G.rnog_detector": [[73, 1, 1, "", "Detector"]], "NuRadioReco.detector.RNO_G.rnog_detector.Detector": [[73, 2, 1, "", "export"], [73, 2, 1, "", "export_as_string"], [73, 2, 1, "", "get_absolute_position"], [73, 2, 1, "", "get_amplifier_response"], [73, 2, 1, "", "get_antenna_model"], [73, 2, 1, "", "get_antenna_orientation"], [73, 2, 1, "", "get_antenna_type"], [73, 2, 1, "", "get_cable_delay"], [73, 2, 1, "", "get_channel"], [73, 2, 1, "", "get_channel_ids"], [73, 2, 1, "", "get_channel_orientation"], [73, 2, 1, "", "get_channel_signal_chain"], [73, 2, 1, "", "get_detector_time"], [73, 2, 1, "", "get_devices"], [73, 2, 1, "", "get_noise_temperature"], [73, 2, 1, "", "get_number_of_channels"], [73, 2, 1, "", "get_number_of_samples"], [73, 2, 1, "", "get_relative_position"], [73, 2, 1, "", "get_relative_position_device"], [73, 2, 1, "", "get_sampling_frequency"], [73, 2, 1, "", "get_signal_chain_components"], [73, 2, 1, "", "get_signal_chain_response"], [73, 2, 1, "", "get_site"], [73, 2, 1, "", "get_station"], [73, 2, 1, "", "get_station_ids"], [73, 2, 1, "", "get_time_delay"], [73, 2, 1, "", "has_station"], [73, 2, 1, "", "is_channel_noiseless"], [73, 2, 1, "", "update"]], "NuRadioReco.detector.amp": [[74, 3, 1, "", "get_amp_response"]], "NuRadioReco.detector.antennapattern": [[75, 1, 1, "", "AntennaPattern"], [75, 1, 1, "", "AntennaPatternAnalytic"], [75, 1, 1, "", "AntennaPatternBase"], [75, 1, 1, "", "AntennaPatternProvider"], [75, 3, 1, "", "get_group_delay"], [75, 3, 1, "", "get_pickle_antenna_response"], [75, 3, 1, "", "interpolate_linear"], [75, 3, 1, "", "interpolate_linear_vectorized"], [75, 3, 1, "", "parse_AERA_XML_file"], [75, 3, 1, "", "parse_ARA_file"], [75, 3, 1, "", "parse_HFSS_file"], [75, 3, 1, "", "parse_RNOG_XFDTD_file"], [75, 3, 1, "", "parse_WIPLD_file"], [75, 3, 1, "", "preprocess_AERA"], [75, 3, 1, "", "preprocess_ARA"], [75, 3, 1, "", "preprocess_HFSS"], [75, 3, 1, "", "preprocess_RNOG_XFDTD"], [75, 3, 1, "", "preprocess_WIPLD"], [75, 3, 1, "", "preprocess_WIPLD_old"], [75, 3, 1, "", "preprocess_XFDTD"], [75, 3, 1, "", "save_preprocessed_WIPLD"], [75, 3, 1, "", "save_preprocessed_WIPLD_forARA"], [75, 3, 1, "", "save_preprocessed_WIPLD_old"]], "NuRadioReco.detector.antennapattern.AntennaPattern": [[75, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic": [[75, 2, 1, "", "get_antenna_response_vectorized"], [75, 2, 1, "", "parametric_phase"]], "NuRadioReco.detector.antennapattern.AntennaPatternBase": [[75, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternProvider": [[75, 2, 1, "", "load_antenna_pattern"]], "NuRadioReco.detector.detector": [[76, 3, 1, "", "Detector"], [76, 3, 1, "", "find_path"], [76, 3, 1, "", "find_reference_entry"]], "NuRadioReco.detector.detector_base": [[77, 1, 1, "", "DateTimeSerializer"], [77, 1, 1, "", "DetectorBase"], [77, 3, 1, "", "buffer_db"]], "NuRadioReco.detector.detector_base.DateTimeSerializer": [[77, 6, 1, "", "OBJ_CLASS"], [77, 2, 1, "", "decode"], [77, 2, 1, "", "encode"]], "NuRadioReco.detector.detector_base.DetectorBase": [[77, 2, 1, "", "get_absolute_position"], [77, 2, 1, "", "get_absolute_position_site"], [77, 2, 1, "", "get_amplifier_measurement"], [77, 2, 1, "", "get_amplifier_response"], [77, 2, 1, "", "get_amplifier_type"], [77, 2, 1, "", "get_antenna_deployment_time"], [77, 2, 1, "", "get_antenna_model"], [77, 2, 1, "", "get_antenna_orientation"], [77, 2, 1, "", "get_antenna_type"], [77, 2, 1, "", "get_cable_delay"], [77, 2, 1, "", "get_cable_type_and_length"], [77, 2, 1, "", "get_channel"], [77, 2, 1, "", "get_channel_ids"], [77, 2, 1, "", "get_detector_time"], [77, 2, 1, "", "get_device"], [77, 2, 1, "", "get_device_ids"], [77, 2, 1, "", "get_noise_RMS"], [77, 2, 1, "", "get_noise_temperature"], [77, 2, 1, "", "get_number_of_channels"], [77, 2, 1, "", "get_number_of_devices"], [77, 2, 1, "", "get_number_of_samples"], [77, 2, 1, "", "get_parallel_channels"], [77, 2, 1, "", "get_relative_position"], [77, 2, 1, "", "get_sampling_frequency"], [77, 2, 1, "", "get_site"], [77, 2, 1, "", "get_site_coordinates"], [77, 2, 1, "", "get_station"], [77, 2, 1, "", "get_station_ids"], [77, 2, 1, "", "get_unique_time_periods"], [77, 2, 1, "", "has_station"], [77, 2, 1, "", "is_channel_noiseless"], [77, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sql": [[78, 1, 1, "", "Detector"], [78, 3, 1, "", "get_amplifier_type"], [78, 3, 1, "", "get_antenna_model_file"], [78, 3, 1, "", "get_antenna_type"], [78, 3, 1, "", "get_cable_delays"], [78, 3, 1, "", "get_number_of_channels"], [78, 3, 1, "", "get_relative_position"], [78, 3, 1, "", "get_relative_positions"], [78, 3, 1, "", "get_station_type"]], "NuRadioReco.detector.detector_sql.Detector": [[78, 2, 1, "", "get_absolute_position_site"], [78, 2, 1, "", "get_amplifier_type"], [78, 2, 1, "", "get_antenna_deployment_time"], [78, 2, 1, "", "get_antenna_model"], [78, 2, 1, "", "get_antenna_orientation"], [78, 2, 1, "", "get_antenna_type"], [78, 2, 1, "", "get_cable_delay"], [78, 2, 1, "", "get_cable_type_and_length"], [78, 2, 1, "", "get_everything"], [78, 2, 1, "", "get_everything_channels"], [78, 2, 1, "", "get_everything_positions"], [78, 2, 1, "", "get_everything_stations"], [78, 2, 1, "", "get_number_of_channels"], [78, 2, 1, "", "get_number_of_samples"], [78, 2, 1, "", "get_relative_position"], [78, 2, 1, "", "get_relative_positions"], [78, 2, 1, "", "get_sampling_frequency"], [78, 2, 1, "", "get_site"], [78, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sys_uncertainties": [[79, 1, 1, "", "DetectorSysUncertainties"]], "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties": [[79, 2, 1, "", "get_absolute_position"], [79, 2, 1, "", "get_absolute_position_site"], [79, 2, 1, "", "get_amplifier_measurement"], [79, 2, 1, "", "get_amplifier_response"], [79, 2, 1, "", "get_amplifier_type"], [79, 2, 1, "", "get_antenna_deployment_time"], [79, 2, 1, "", "get_antenna_model"], [79, 2, 1, "", "get_antenna_orientation"], [79, 2, 1, "", "get_antenna_type"], [79, 2, 1, "", "get_cable_delay"], [79, 2, 1, "", "get_cable_type_and_length"], [79, 2, 1, "", "get_channel"], [79, 2, 1, "", "get_channel_ids"], [79, 2, 1, "", "get_detector_time"], [79, 2, 1, "", "get_device"], [79, 2, 1, "", "get_device_ids"], [79, 2, 1, "", "get_noise_RMS"], [79, 2, 1, "", "get_noise_temperature"], [79, 2, 1, "", "get_number_of_channels"], [79, 2, 1, "", "get_number_of_devices"], [79, 2, 1, "", "get_number_of_samples"], [79, 2, 1, "", "get_parallel_channels"], [79, 2, 1, "", "get_relative_position"], [79, 2, 1, "", "get_sampling_frequency"], [79, 2, 1, "", "get_site"], [79, 2, 1, "", "get_site_coordinates"], [79, 2, 1, "", "get_station"], [79, 2, 1, "", "get_station_ids"], [79, 2, 1, "", "get_unique_time_periods"], [79, 2, 1, "", "has_station"], [79, 2, 1, "", "is_channel_noiseless"], [79, 2, 1, "", "reset_antenna_orientation_offsets"], [79, 2, 1, "", "reset_antenna_position_offsets"], [79, 2, 1, "", "set_antenna_orientation_offsets"], [79, 2, 1, "", "set_antenna_position_offsets"], [79, 2, 1, "", "update"]], "NuRadioReco.detector.filterresponse": [[80, 3, 1, "", "get_filter_response"], [80, 3, 1, "", "get_filter_response_mini_circuits"], [80, 3, 1, "", "get_filter_response_mini_circuits2"]], "NuRadioReco.detector.generic_detector": [[81, 1, 1, "", "GenericDetector"]], "NuRadioReco.detector.generic_detector.GenericDetector": [[81, 2, 1, "", "add_generic_station"], [81, 2, 1, "", "add_station_properties_for_event"], [81, 2, 1, "", "get_absolute_position"], [81, 2, 1, "", "get_absolute_position_site"], [81, 2, 1, "", "get_amplifier_measurement"], [81, 2, 1, "", "get_amplifier_response"], [81, 2, 1, "", "get_amplifier_type"], [81, 2, 1, "", "get_antenna_deployment_time"], [81, 2, 1, "", "get_antenna_model"], [81, 2, 1, "", "get_antenna_orientation"], [81, 2, 1, "", "get_antenna_type"], [81, 2, 1, "", "get_cable_delay"], [81, 2, 1, "", "get_cable_type_and_length"], [81, 2, 1, "", "get_channel"], [81, 2, 1, "", "get_channel_ids"], [81, 2, 1, "", "get_default_channel"], [81, 2, 1, "", "get_default_channel_id"], [81, 2, 1, "", "get_default_station"], [81, 2, 1, "", "get_default_station_id"], [81, 2, 1, "", "get_detector_time"], [81, 2, 1, "", "get_device"], [81, 2, 1, "", "get_device_ids"], [81, 2, 1, "", "get_noise_RMS"], [81, 2, 1, "", "get_noise_temperature"], [81, 2, 1, "", "get_number_of_channels"], [81, 2, 1, "", "get_number_of_devices"], [81, 2, 1, "", "get_number_of_samples"], [81, 2, 1, "", "get_parallel_channels"], [81, 2, 1, "", "get_raw_channel"], [81, 2, 1, "", "get_raw_station"], [81, 2, 1, "", "get_reference_station"], [81, 2, 1, "", "get_reference_station_id"], [81, 2, 1, "", "get_reference_station_ids"], [81, 2, 1, "", "get_reference_stations"], [81, 2, 1, "", "get_relative_position"], [81, 2, 1, "", "get_sampling_frequency"], [81, 2, 1, "", "get_site"], [81, 2, 1, "", "get_site_coordinates"], [81, 2, 1, "", "get_station"], [81, 2, 1, "", "get_station_ids"], [81, 2, 1, "", "get_station_properties_for_event"], [81, 2, 1, "", "get_unique_time_periods"], [81, 2, 1, "", "has_station"], [81, 2, 1, "", "is_channel_noiseless"], [81, 2, 1, "", "set_event"], [81, 2, 1, "", "update"]], "NuRadioReco.detector.response": [[82, 1, 1, "", "Response"], [82, 3, 1, "", "subtract_time_delay_from_response"]], "NuRadioReco.detector.response.Response": [[82, 2, 1, "", "get_names"], [82, 2, 1, "", "get_time_delay"], [82, 2, 1, "", "plot"]], "NuRadioReco.framework": [[87, 0, 0, "-", "base_shower"], [88, 0, 0, "-", "base_station"], [89, 0, 0, "-", "base_trace"], [90, 0, 0, "-", "channel"], [91, 0, 0, "-", "electric_field"], [92, 0, 0, "-", "event"], [93, 0, 0, "-", "hybrid_information"], [94, 0, 0, "-", "hybrid_shower"], [95, 0, 0, "-", "parameter_serialization"], [96, 0, 0, "-", "parameters"], [97, 0, 0, "-", "particle"], [98, 0, 0, "-", "radio_shower"], [99, 0, 0, "-", "sim_channel"], [100, 0, 0, "-", "sim_station"], [101, 0, 0, "-", "station"], [102, 0, 0, "-", "trigger"]], "NuRadioReco.framework.base_shower": [[87, 1, 1, "", "BaseShower"]], "NuRadioReco.framework.base_shower.BaseShower": [[87, 2, 1, "", "deserialize"], [87, 2, 1, "", "get_axis"], [87, 2, 1, "", "get_coordinatesystem"], [87, 2, 1, "", "get_id"], [87, 2, 1, "", "get_parameter"], [87, 2, 1, "", "has_parameter"], [87, 2, 1, "", "serialize"], [87, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.base_station": [[88, 1, 1, "", "BaseStation"]], "NuRadioReco.framework.base_station.BaseStation": [[88, 2, 1, "", "add_electric_field"], [88, 2, 1, "", "deserialize"], [88, 2, 1, "", "get_ARIANNA_parameter"], [88, 2, 1, "", "get_ARIANNA_parameters"], [88, 2, 1, "", "get_electric_fields"], [88, 2, 1, "", "get_electric_fields_for_channels"], [88, 2, 1, "", "get_id"], [88, 2, 1, "", "get_parameter"], [88, 2, 1, "", "get_parameter_error"], [88, 2, 1, "", "get_parameters"], [88, 2, 1, "", "get_station_time"], [88, 2, 1, "", "get_station_time_dict"], [88, 2, 1, "", "get_trigger"], [88, 2, 1, "", "get_triggers"], [88, 2, 1, "", "has_ARIANNA_parameter"], [88, 2, 1, "", "has_parameter"], [88, 2, 1, "", "has_trigger"], [88, 2, 1, "", "has_triggered"], [88, 2, 1, "", "is_cosmic_ray"], [88, 2, 1, "", "is_neutrino"], [88, 2, 1, "", "remove_parameter"], [88, 2, 1, "", "remove_triggers"], [88, 2, 1, "", "serialize"], [88, 2, 1, "", "set_ARIANNA_parameter"], [88, 2, 1, "", "set_electric_fields"], [88, 2, 1, "", "set_is_cosmic_ray"], [88, 2, 1, "", "set_is_neutrino"], [88, 2, 1, "", "set_parameter"], [88, 2, 1, "", "set_parameter_error"], [88, 2, 1, "", "set_station_time"], [88, 2, 1, "", "set_trigger"], [88, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.base_trace": [[89, 1, 1, "", "BaseTrace"]], "NuRadioReco.framework.base_trace.BaseTrace": [[89, 2, 1, "", "add_trace_start_time"], [89, 2, 1, "", "apply_time_shift"], [89, 2, 1, "", "deserialize"], [89, 2, 1, "", "get_filtered_trace"], [89, 2, 1, "", "get_frequencies"], [89, 2, 1, "", "get_frequency_spectrum"], [89, 2, 1, "", "get_hilbert_envelope"], [89, 2, 1, "", "get_hilbert_envelope_mag"], [89, 2, 1, "", "get_number_of_samples"], [89, 2, 1, "", "get_sampling_rate"], [89, 2, 1, "", "get_times"], [89, 2, 1, "", "get_trace"], [89, 2, 1, "", "get_trace_start_time"], [89, 2, 1, "", "resample"], [89, 2, 1, "", "serialize"], [89, 2, 1, "", "set_frequency_spectrum"], [89, 2, 1, "", "set_trace"], [89, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.channel": [[90, 1, 1, "", "Channel"]], "NuRadioReco.framework.channel.Channel": [[90, 2, 1, "", "add_trace_start_time"], [90, 2, 1, "", "apply_time_shift"], [90, 2, 1, "", "deserialize"], [90, 2, 1, "", "get_filtered_trace"], [90, 2, 1, "", "get_frequencies"], [90, 2, 1, "", "get_frequency_spectrum"], [90, 2, 1, "", "get_hilbert_envelope"], [90, 2, 1, "", "get_hilbert_envelope_mag"], [90, 2, 1, "", "get_id"], [90, 2, 1, "", "get_number_of_samples"], [90, 2, 1, "", "get_parameter"], [90, 2, 1, "", "get_parameters"], [90, 2, 1, "", "get_sampling_rate"], [90, 2, 1, "", "get_times"], [90, 2, 1, "", "get_trace"], [90, 2, 1, "", "get_trace_start_time"], [90, 2, 1, "", "has_parameter"], [90, 2, 1, "", "resample"], [90, 2, 1, "", "serialize"], [90, 2, 1, "", "set_frequency_spectrum"], [90, 2, 1, "", "set_parameter"], [90, 2, 1, "", "set_trace"], [90, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.electric_field": [[91, 1, 1, "", "ElectricField"]], "NuRadioReco.framework.electric_field.ElectricField": [[91, 2, 1, "", "add_trace_start_time"], [91, 2, 1, "", "apply_time_shift"], [91, 2, 1, "", "deserialize"], [91, 2, 1, "", "get_channel_ids"], [91, 2, 1, "", "get_filtered_trace"], [91, 2, 1, "", "get_frequencies"], [91, 2, 1, "", "get_frequency_spectrum"], [91, 2, 1, "", "get_hilbert_envelope"], [91, 2, 1, "", "get_hilbert_envelope_mag"], [91, 2, 1, "", "get_number_of_samples"], [91, 2, 1, "", "get_parameter"], [91, 2, 1, "", "get_parameter_error"], [91, 2, 1, "", "get_parameters"], [91, 2, 1, "", "get_position"], [91, 2, 1, "", "get_ray_tracing_solution_id"], [91, 2, 1, "", "get_sampling_rate"], [91, 2, 1, "", "get_shower_id"], [91, 2, 1, "", "get_times"], [91, 2, 1, "", "get_trace"], [91, 2, 1, "", "get_trace_start_time"], [91, 2, 1, "", "get_unique_identifier"], [91, 2, 1, "", "has_channel_ids"], [91, 2, 1, "", "has_parameter"], [91, 2, 1, "", "has_parameter_error"], [91, 2, 1, "", "resample"], [91, 2, 1, "", "serialize"], [91, 2, 1, "", "set_channel_ids"], [91, 2, 1, "", "set_frequency_spectrum"], [91, 2, 1, "", "set_parameter"], [91, 2, 1, "", "set_parameter_error"], [91, 2, 1, "", "set_position"], [91, 2, 1, "", "set_trace"], [91, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.event": [[92, 1, 1, "", "Event"]], "NuRadioReco.framework.event.Event": [[92, 2, 1, "", "add_particle"], [92, 2, 1, "", "add_shower"], [92, 2, 1, "", "add_sim_shower"], [92, 2, 1, "", "deserialize"], [92, 2, 1, "", "get_first_shower"], [92, 2, 1, "", "get_first_sim_shower"], [92, 2, 1, "", "get_generator_info"], [92, 2, 1, "", "get_hybrid_information"], [92, 2, 1, "", "get_id"], [92, 2, 1, "", "get_interaction_products"], [92, 2, 1, "", "get_parameter"], [92, 2, 1, "", "get_parent"], [92, 2, 1, "", "get_particle"], [92, 2, 1, "", "get_particles"], [92, 2, 1, "", "get_primary"], [92, 2, 1, "", "get_run_number"], [92, 2, 1, "", "get_shower"], [92, 2, 1, "", "get_showers"], [92, 2, 1, "", "get_sim_shower"], [92, 2, 1, "", "get_sim_showers"], [92, 2, 1, "", "get_station"], [92, 2, 1, "", "get_station_ids"], [92, 2, 1, "", "get_stations"], [92, 2, 1, "", "has_generator_info"], [92, 2, 1, "", "has_parameter"], [92, 2, 1, "", "has_particle"], [92, 2, 1, "", "has_shower"], [92, 2, 1, "", "has_sim_shower"], [92, 2, 1, "", "has_triggered"], [92, 2, 1, "", "iter_modules"], [92, 2, 1, "", "register_module_event"], [92, 2, 1, "", "register_module_station"], [92, 2, 1, "", "serialize"], [92, 2, 1, "", "set_generator_info"], [92, 2, 1, "", "set_id"], [92, 2, 1, "", "set_parameter"], [92, 2, 1, "", "set_station"]], "NuRadioReco.framework.hybrid_information": [[93, 1, 1, "", "HybridInformation"]], "NuRadioReco.framework.hybrid_information.HybridInformation": [[93, 2, 1, "", "add_hybrid_shower"], [93, 2, 1, "", "deserialize"], [93, 2, 1, "", "get_hybrid_shower"], [93, 2, 1, "", "get_hybrid_showers"], [93, 2, 1, "", "serialize"]], "NuRadioReco.framework.hybrid_shower": [[94, 1, 1, "", "HybridShower"]], "NuRadioReco.framework.hybrid_shower.HybridShower": [[94, 2, 1, "", "deserialize"], [94, 2, 1, "", "get_axis"], [94, 2, 1, "", "get_coordinatesystem"], [94, 2, 1, "", "get_hybrid_detector"], [94, 2, 1, "", "get_id"], [94, 2, 1, "", "get_name"], [94, 2, 1, "", "get_parameter"], [94, 2, 1, "", "has_parameter"], [94, 2, 1, "", "serialize"], [94, 2, 1, "", "set_hybrid_detector"], [94, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.parameter_serialization": [[95, 3, 1, "", "deserialize"], [95, 3, 1, "", "deserialize_covariances"], [95, 3, 1, "", "serialize"], [95, 3, 1, "", "serialize_covariances"]], "NuRadioReco.framework.parameters": [[96, 1, 1, "", "ARIANNAParameters"], [96, 1, 1, "", "channelParameters"], [96, 1, 1, "", "electricFieldParameters"], [96, 1, 1, "", "eventParameters"], [96, 1, 1, "", "generatorAttributes"], [96, 1, 1, "", "particleParameters"], [96, 1, 1, "", "showerParameters"], [96, 1, 1, "", "stationParameters"]], "NuRadioReco.framework.parameters.ARIANNAParameters": [[96, 6, 1, "", "comm_duration"], [96, 6, 1, "", "comm_period"], [96, 6, 1, "", "internal_clock_time"], [96, 6, 1, "", "l1_supression_value"], [96, 6, 1, "", "seq_num"], [96, 6, 1, "", "seq_start_time"], [96, 6, 1, "", "seq_stop_time"], [96, 6, 1, "", "trigger_thresholds"]], "NuRadioReco.framework.parameters.channelParameters": [[96, 6, 1, "", "P2P_amplitude"], [96, 6, 1, "", "SNR"], [96, 6, 1, "", "azimuth"], [96, 6, 1, "", "block_offsets"], [96, 6, 1, "", "cr_xcorrelations"], [96, 6, 1, "", "maximum_amplitude"], [96, 6, 1, "", "maximum_amplitude_envelope"], [96, 6, 1, "", "noise_regions"], [96, 6, 1, "", "noise_rms"], [96, 6, 1, "", "nu_xcorrelations"], [96, 6, 1, "", "signal_ray_type"], [96, 6, 1, "", "signal_receiving_azimuth"], [96, 6, 1, "", "signal_receiving_zenith"], [96, 6, 1, "", "signal_regions"], [96, 6, 1, "", "signal_time"], [96, 6, 1, "", "signal_time_offset"], [96, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.electricFieldParameters": [[96, 6, 1, "", "azimuth"], [96, 6, 1, "", "cr_spectrum_quadratic_term"], [96, 6, 1, "", "cr_spectrum_slope"], [96, 6, 1, "", "energy_fluence_ratios"], [96, 6, 1, "", "max_amp_antenna"], [96, 6, 1, "", "max_amp_antenna_envelope"], [96, 6, 1, "", "nu_vertex_distance"], [96, 6, 1, "", "nu_viewing_angle"], [96, 6, 1, "", "polarization_angle"], [96, 6, 1, "", "polarization_angle_expectation"], [96, 6, 1, "", "ray_path_type"], [96, 6, 1, "", "reflection_coefficient_phi"], [96, 6, 1, "", "reflection_coefficient_theta"], [96, 6, 1, "", "signal_energy_fluence"], [96, 6, 1, "", "signal_time"], [96, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.eventParameters": [[96, 6, 1, "", "hash_NuRadioMC"], [96, 6, 1, "", "hash_NuRadioReco"], [96, 6, 1, "", "sim_config"]], "NuRadioReco.framework.parameters.generatorAttributes": [[96, 6, 1, "", "Emax"], [96, 6, 1, "", "Emin"], [96, 6, 1, "", "NuRadioMC_EvtGen_version"], [96, 6, 1, "", "NuRadioMC_EvtGen_version_hash"], [96, 6, 1, "", "NuRadioMC_version"], [96, 6, 1, "", "NuRadioMC_version_hash"], [96, 6, 1, "", "area"], [96, 6, 1, "", "deposited"], [96, 6, 1, "", "dt"], [96, 6, 1, "", "fiducial_rmax"], [96, 6, 1, "", "fiducial_rmin"], [96, 6, 1, "", "fiducial_xmax"], [96, 6, 1, "", "fiducial_xmin"], [96, 6, 1, "", "fiducial_ymax"], [96, 6, 1, "", "fiducial_ymin"], [96, 6, 1, "", "fiducial_zmax"], [96, 6, 1, "", "fiducial_zmin"], [96, 6, 1, "", "flavors"], [96, 6, 1, "", "n_events"], [96, 6, 1, "", "n_samples"], [96, 6, 1, "", "phimax"], [96, 6, 1, "", "phimin"], [96, 6, 1, "", "rmax"], [96, 6, 1, "", "rmin"], [96, 6, 1, "", "start_event_id"], [96, 6, 1, "", "thetamax"], [96, 6, 1, "", "thetamin"], [96, 6, 1, "", "total_number_of_events"], [96, 6, 1, "", "volume"], [96, 6, 1, "", "xmax"], [96, 6, 1, "", "xmin"], [96, 6, 1, "", "ymax"], [96, 6, 1, "", "ymin"], [96, 6, 1, "", "zmax"], [96, 6, 1, "", "zmin"]], "NuRadioReco.framework.parameters.particleParameters": [[96, 6, 1, "", "azimuth"], [96, 6, 1, "", "cr_azimuth"], [96, 6, 1, "", "cr_energy"], [96, 6, 1, "", "cr_energy_em"], [96, 6, 1, "", "cr_zenith"], [96, 6, 1, "", "energy"], [96, 6, 1, "", "flavor"], [96, 6, 1, "", "inelasticity"], [96, 6, 1, "", "interaction_type"], [96, 6, 1, "", "n_interaction"], [96, 6, 1, "", "parent_id"], [96, 6, 1, "", "vertex"], [96, 6, 1, "", "vertex_time"], [96, 6, 1, "", "weight"], [96, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.showerParameters": [[96, 6, 1, "", "atmospheric_model"], [96, 6, 1, "", "azimuth"], [96, 6, 1, "", "charge_excess_profile_id"], [96, 6, 1, "", "core"], [96, 6, 1, "", "distance_shower_maximum_geometric"], [96, 6, 1, "", "distance_shower_maximum_grammage"], [96, 6, 1, "", "electromagnetic_energy"], [96, 6, 1, "", "electromagnetic_radiation_energy"], [96, 6, 1, "", "energy"], [96, 6, 1, "", "flavor"], [96, 6, 1, "", "interaction_type"], [96, 6, 1, "", "interferometric_core"], [96, 6, 1, "", "interferometric_shower_axis"], [96, 6, 1, "", "interferometric_shower_maximum"], [96, 6, 1, "", "k_L"], [96, 6, 1, "", "magnetic_field_rotation"], [96, 6, 1, "", "magnetic_field_vector"], [96, 6, 1, "", "observation_level"], [96, 6, 1, "", "parent_id"], [96, 6, 1, "", "primary_particle"], [96, 6, 1, "", "radiation_energy"], [96, 6, 1, "", "refractive_index_at_ground"], [96, 6, 1, "", "shower_maximum"], [96, 6, 1, "", "type"], [96, 6, 1, "", "vertex"], [96, 6, 1, "", "vertex_time"], [96, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.stationParameters": [[96, 6, 1, "", "azimuth"], [96, 6, 1, "", "ccnc"], [96, 6, 1, "", "channels_max_amplitude"], [96, 6, 1, "", "chi2_efield_time_direction_fit"], [96, 6, 1, "", "cr_azimuth"], [96, 6, 1, "", "cr_energy"], [96, 6, 1, "", "cr_energy_em"], [96, 6, 1, "", "cr_xcorrelations"], [96, 6, 1, "", "cr_xmax"], [96, 6, 1, "", "cr_zenith"], [96, 6, 1, "", "distance_correlations"], [96, 6, 1, "", "inelasticity"], [96, 6, 1, "", "ndf_efield_time_direction_fit"], [96, 6, 1, "", "nu_azimuth"], [96, 6, 1, "", "nu_energy"], [96, 6, 1, "", "nu_flavor"], [96, 6, 1, "", "nu_inttype"], [96, 6, 1, "", "nu_vertex"], [96, 6, 1, "", "nu_xcorrelations"], [96, 6, 1, "", "nu_zenith"], [96, 6, 1, "", "shower_energy"], [96, 6, 1, "", "station_time"], [96, 6, 1, "", "triggered"], [96, 6, 1, "", "vertex_2D_fit"], [96, 6, 1, "", "viewing_angles"], [96, 6, 1, "", "zenith"], [96, 6, 1, "", "zenith_cr_templatefit"], [96, 6, 1, "", "zenith_nu_templatefit"]], "NuRadioReco.framework.particle": [[97, 1, 1, "", "Particle"]], "NuRadioReco.framework.particle.Particle": [[97, 2, 1, "", "as_hdf5_dict"], [97, 2, 1, "", "deserialize"], [97, 2, 1, "", "get_id"], [97, 2, 1, "", "get_parameter"], [97, 2, 1, "", "has_parameter"], [97, 2, 1, "", "serialize"], [97, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.radio_shower": [[98, 1, 1, "", "RadioShower"]], "NuRadioReco.framework.radio_shower.RadioShower": [[98, 2, 1, "", "deserialize"], [98, 2, 1, "", "get_axis"], [98, 2, 1, "", "get_coordinatesystem"], [98, 2, 1, "", "get_id"], [98, 2, 1, "", "get_parameter"], [98, 2, 1, "", "get_station_ids"], [98, 2, 1, "", "has_parameter"], [98, 2, 1, "", "has_station_ids"], [98, 2, 1, "", "serialize"], [98, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.sim_channel": [[99, 1, 1, "", "SimChannel"]], "NuRadioReco.framework.sim_channel.SimChannel": [[99, 2, 1, "", "add_trace_start_time"], [99, 2, 1, "", "apply_time_shift"], [99, 2, 1, "", "deserialize"], [99, 2, 1, "", "get_filtered_trace"], [99, 2, 1, "", "get_frequencies"], [99, 2, 1, "", "get_frequency_spectrum"], [99, 2, 1, "", "get_hilbert_envelope"], [99, 2, 1, "", "get_hilbert_envelope_mag"], [99, 2, 1, "", "get_id"], [99, 2, 1, "", "get_number_of_samples"], [99, 2, 1, "", "get_parameter"], [99, 2, 1, "", "get_parameters"], [99, 2, 1, "", "get_ray_tracing_solution_id"], [99, 2, 1, "", "get_sampling_rate"], [99, 2, 1, "", "get_shower_id"], [99, 2, 1, "", "get_times"], [99, 2, 1, "", "get_trace"], [99, 2, 1, "", "get_trace_start_time"], [99, 2, 1, "", "get_unique_identifier"], [99, 2, 1, "", "has_parameter"], [99, 2, 1, "", "resample"], [99, 2, 1, "", "serialize"], [99, 2, 1, "", "set_frequency_spectrum"], [99, 2, 1, "", "set_parameter"], [99, 2, 1, "", "set_trace"], [99, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.sim_station": [[100, 1, 1, "", "SimStation"]], "NuRadioReco.framework.sim_station.SimStation": [[100, 2, 1, "", "add_channel"], [100, 2, 1, "", "add_electric_field"], [100, 2, 1, "", "deserialize"], [100, 2, 1, "", "get_ARIANNA_parameter"], [100, 2, 1, "", "get_ARIANNA_parameters"], [100, 2, 1, "", "get_channel"], [100, 2, 1, "", "get_channel_ids"], [100, 2, 1, "", "get_channels_by_channel_id"], [100, 2, 1, "", "get_channels_by_ray_tracing_id"], [100, 2, 1, "", "get_channels_by_shower_id"], [100, 2, 1, "", "get_electric_fields"], [100, 2, 1, "", "get_electric_fields_for_channels"], [100, 2, 1, "", "get_id"], [100, 2, 1, "", "get_magnetic_field_vector"], [100, 2, 1, "", "get_parameter"], [100, 2, 1, "", "get_parameter_error"], [100, 2, 1, "", "get_parameters"], [100, 2, 1, "", "get_ray_tracing_ids"], [100, 2, 1, "", "get_shower_ids"], [100, 2, 1, "", "get_simulation_weight"], [100, 2, 1, "", "get_station_time"], [100, 2, 1, "", "get_station_time_dict"], [100, 2, 1, "", "get_trigger"], [100, 2, 1, "", "get_triggers"], [100, 2, 1, "", "has_ARIANNA_parameter"], [100, 2, 1, "", "has_parameter"], [100, 2, 1, "", "has_trigger"], [100, 2, 1, "", "has_triggered"], [100, 2, 1, "", "is_cosmic_ray"], [100, 2, 1, "", "is_neutrino"], [100, 2, 1, "", "iter_channels"], [100, 2, 1, "", "remove_parameter"], [100, 2, 1, "", "remove_triggers"], [100, 2, 1, "", "serialize"], [100, 2, 1, "", "set_ARIANNA_parameter"], [100, 2, 1, "", "set_electric_fields"], [100, 2, 1, "", "set_is_cosmic_ray"], [100, 2, 1, "", "set_is_neutrino"], [100, 2, 1, "", "set_magnetic_field_vector"], [100, 2, 1, "", "set_parameter"], [100, 2, 1, "", "set_parameter_error"], [100, 2, 1, "", "set_simulation_weight"], [100, 2, 1, "", "set_station_time"], [100, 2, 1, "", "set_trigger"], [100, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.station": [[101, 1, 1, "", "Station"]], "NuRadioReco.framework.station.Station": [[101, 2, 1, "", "add_channel"], [101, 2, 1, "", "add_electric_field"], [101, 2, 1, "", "deserialize"], [101, 2, 1, "", "get_ARIANNA_parameter"], [101, 2, 1, "", "get_ARIANNA_parameters"], [101, 2, 1, "", "get_channel"], [101, 2, 1, "", "get_channel_ids"], [101, 2, 1, "", "get_electric_fields"], [101, 2, 1, "", "get_electric_fields_for_channels"], [101, 2, 1, "", "get_id"], [101, 2, 1, "", "get_magnetic_field_vector"], [101, 2, 1, "", "get_number_of_channels"], [101, 2, 1, "", "get_parameter"], [101, 2, 1, "", "get_parameter_error"], [101, 2, 1, "", "get_parameters"], [101, 2, 1, "", "get_reference_direction"], [101, 2, 1, "", "get_reference_reconstruction"], [101, 2, 1, "", "get_sim_station"], [101, 2, 1, "", "get_station_time"], [101, 2, 1, "", "get_station_time_dict"], [101, 2, 1, "", "get_trigger"], [101, 2, 1, "", "get_triggers"], [101, 2, 1, "", "has_ARIANNA_parameter"], [101, 2, 1, "", "has_parameter"], [101, 2, 1, "", "has_sim_station"], [101, 2, 1, "", "has_trigger"], [101, 2, 1, "", "has_triggered"], [101, 2, 1, "", "is_cosmic_ray"], [101, 2, 1, "", "is_neutrino"], [101, 2, 1, "", "iter_channels"], [101, 2, 1, "", "remove_parameter"], [101, 2, 1, "", "remove_triggers"], [101, 2, 1, "", "serialize"], [101, 2, 1, "", "set_ARIANNA_parameter"], [101, 2, 1, "", "set_electric_fields"], [101, 2, 1, "", "set_is_cosmic_ray"], [101, 2, 1, "", "set_is_neutrino"], [101, 2, 1, "", "set_parameter"], [101, 2, 1, "", "set_parameter_error"], [101, 2, 1, "", "set_reference_reconstruction"], [101, 2, 1, "", "set_sim_station"], [101, 2, 1, "", "set_station_time"], [101, 2, 1, "", "set_trigger"], [101, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.trigger": [[102, 1, 1, "", "EnvelopePhasedTrigger"], [102, 1, 1, "", "EnvelopeTrigger"], [102, 1, 1, "", "HighLowTrigger"], [102, 1, 1, "", "IntegratedPowerTrigger"], [102, 1, 1, "", "RNOGSurfaceTrigger"], [102, 1, 1, "", "SimplePhasedTrigger"], [102, 1, 1, "", "SimpleThresholdTrigger"], [102, 1, 1, "", "Trigger"], [102, 3, 1, "", "deserialize"]], "NuRadioReco.framework.trigger.EnvelopePhasedTrigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.EnvelopeTrigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.HighLowTrigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.IntegratedPowerTrigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.RNOGSurfaceTrigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"], [102, 6, 1, "", "units"]], "NuRadioReco.framework.trigger.SimplePhasedTrigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.SimpleThresholdTrigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.Trigger": [[102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_name"], [102, 2, 1, "", "get_pre_trigger_times"], [102, 2, 1, "", "get_trigger_settings"], [102, 2, 1, "", "get_trigger_time"], [102, 2, 1, "", "get_trigger_times"], [102, 2, 1, "", "get_triggered_channels"], [102, 2, 1, "", "get_type"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_pre_trigger_times"], [102, 2, 1, "", "set_trigger_time"], [102, 2, 1, "", "set_trigger_times"], [102, 2, 1, "", "set_triggered"], [102, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.modules": [[104, 0, 0, "-", "ARA"], [107, 0, 0, "-", "ARIANNA"], [109, 0, 0, "-", "RNO_G"], [112, 0, 0, "-", "analogToDigitalConverter"], [113, 0, 0, "-", "base"], [115, 0, 0, "-", "beamFormingDirectionFitter"], [116, 0, 0, "-", "channelAddCableDelay"], [117, 0, 0, "-", "channelAntennaDedispersion"], [118, 0, 0, "-", "channelBandPassFilter"], [119, 0, 0, "-", "channelGalacticNoiseAdder"], [120, 0, 0, "-", "channelGenericNoiseAdder"], [121, 0, 0, "-", "channelLengthAdjuster"], [122, 0, 0, "-", "channelResampler"], [123, 0, 0, "-", "channelSignalReconstructor"], [124, 0, 0, "-", "channelStopFilter"], [125, 0, 0, "-", "channelTemplateCorrelation"], [126, 0, 0, "-", "channelTimeOffsetCalculator"], [127, 0, 0, "-", "channelTimeWindow"], [128, 0, 0, "-", "correlationDirectionFitter"], [129, 0, 0, "-", "cosmicRayEnergyReconstructor"], [130, 0, 0, "-", "custom"], [133, 0, 0, "-", "efieldAirToIcePropagator"], [134, 0, 0, "-", "efieldRadioInterferometricReconstruction"], [135, 0, 0, "-", "efieldTimeDirectionFitter"], [136, 0, 0, "-", "efieldToVoltageConverter"], [137, 0, 0, "-", "efieldToVoltageConverterPerEfield"], [138, 0, 0, "-", "electricFieldBandPassFilter"], [139, 0, 0, "-", "electricFieldResampler"], [140, 0, 0, "-", "electricFieldSignalReconstructor"], [141, 0, 0, "-", "eventTypeIdentifier"], [142, 0, 0, "-", "iftElectricFieldReconstructor"], [145, 0, 0, "-", "io"], [164, 0, 0, "-", "measured_noise"], [170, 0, 0, "-", "neutrinoDirectionReconstructor"], [172, 0, 0, "-", "neutrinoVertexReconstructor"], [176, 0, 0, "-", "phasedarray"], [178, 0, 0, "-", "sphericalWaveFitter"], [179, 0, 0, "-", "templateDirectionFitter"], [180, 0, 0, "-", "trigger"], [188, 0, 0, "-", "triggerTimeAdjuster"], [189, 0, 0, "-", "voltageToAnalyticEfieldConverter"], [190, 0, 0, "-", "voltageToEfieldConverter"], [191, 0, 0, "-", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.ARA": [[105, 0, 0, "-", "hardwareResponseIncorporator"], [106, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator": [[105, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[105, 2, 1, "", "begin"], [105, 2, 1, "", "end"], [105, 2, 1, "", "run"]], "NuRadioReco.modules.ARA.triggerSimulator": [[106, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator": [[106, 2, 1, "", "end"], [106, 2, 1, "", "has_triggered"], [106, 2, 1, "", "run"]], "NuRadioReco.modules.ARIANNA": [[108, 0, 0, "-", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator": [[108, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[108, 2, 1, "", "begin"], [108, 2, 1, "", "end"], [108, 2, 1, "", "get_filter"], [108, 2, 1, "", "get_mingainlin"], [108, 2, 1, "", "get_time_delay"], [108, 2, 1, "", "run"]], "NuRadioReco.modules.RNO_G": [[110, 0, 0, "-", "channelBlockOffsetFitter"], [111, 0, 0, "-", "hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter": [[110, 1, 1, "", "channelBlockOffsets"], [110, 3, 1, "", "fit_block_offsets"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets": [[110, 2, 1, "", "add_offsets"], [110, 2, 1, "", "remove_offsets"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator": [[111, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator": [[111, 2, 1, "", "begin"], [111, 2, 1, "", "end"], [111, 2, 1, "", "get_filter"], [111, 2, 1, "", "get_mingainlin"], [111, 2, 1, "", "get_time_delay"], [111, 2, 1, "", "run"]], "NuRadioReco.modules.analogToDigitalConverter": [[112, 1, 1, "", "analogToDigitalConverter"], [112, 3, 1, "", "apply_saturation"], [112, 3, 1, "", "perfect_ceiling_comparator"], [112, 3, 1, "", "perfect_comparator"], [112, 3, 1, "", "perfect_floor_comparator"], [112, 3, 1, "", "round_to_int"]], "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter": [[112, 2, 1, "", "end"], [112, 2, 1, "", "get_digital_trace"], [112, 2, 1, "", "run"]], "NuRadioReco.modules.base": [[114, 0, 0, "-", "module"]], "NuRadioReco.modules.base.module": [[114, 3, 1, "", "register_run"], [114, 3, 1, "", "setup_logger"]], "NuRadioReco.modules.beamFormingDirectionFitter": [[115, 1, 1, "", "beamFormingDirectionFitter"], [115, 3, 1, "", "get_array_of_channels"]], "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter": [[115, 2, 1, "", "begin"], [115, 2, 1, "", "end"], [115, 2, 1, "", "run"]], "NuRadioReco.modules.channelAddCableDelay": [[116, 1, 1, "", "channelAddCableDelay"]], "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay": [[116, 2, 1, "", "run"]], "NuRadioReco.modules.channelAntennaDedispersion": [[117, 1, 1, "", "channelAntennaDedispersion"]], "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion": [[117, 2, 1, "", "end"], [117, 2, 1, "", "run"]], "NuRadioReco.modules.channelBandPassFilter": [[118, 1, 1, "", "channelBandPassFilter"]], "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter": [[118, 2, 1, "", "begin"], [118, 2, 1, "", "end"], [118, 2, 1, "", "get_filter"], [118, 2, 1, "", "get_filter_arguments"], [118, 2, 1, "", "run"]], "NuRadioReco.modules.channelGalacticNoiseAdder": [[119, 1, 1, "", "channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder": [[119, 2, 1, "", "begin"], [119, 2, 1, "", "run"]], "NuRadioReco.modules.channelGenericNoiseAdder": [[120, 1, 1, "", "channelGenericNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder": [[120, 2, 1, "", "add_random_phases"], [120, 2, 1, "", "bandlimited_noise"], [120, 2, 1, "", "bandlimited_noise_from_precalculated_parameters"], [120, 2, 1, "", "begin"], [120, 2, 1, "", "end"], [120, 2, 1, "", "fftnoise_fullfft"], [120, 2, 1, "", "precalculate_bandlimited_noise_parameters"], [120, 2, 1, "", "run"]], "NuRadioReco.modules.channelLengthAdjuster": [[121, 1, 1, "", "channelLengthAdjuster"]], "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster": [[121, 2, 1, "", "begin"], [121, 2, 1, "", "end"], [121, 2, 1, "", "run"]], "NuRadioReco.modules.channelResampler": [[122, 1, 1, "", "channelResampler"]], "NuRadioReco.modules.channelResampler.channelResampler": [[122, 2, 1, "", "begin"], [122, 2, 1, "", "end"], [122, 2, 1, "", "run"]], "NuRadioReco.modules.channelSignalReconstructor": [[123, 1, 1, "", "channelSignalReconstructor"]], "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor": [[123, 2, 1, "", "begin"], [123, 2, 1, "", "end"], [123, 2, 1, "", "get_SNR"], [123, 2, 1, "", "run"]], "NuRadioReco.modules.channelStopFilter": [[124, 1, 1, "", "channelStopFilter"]], "NuRadioReco.modules.channelStopFilter.channelStopFilter": [[124, 2, 1, "", "begin"], [124, 2, 1, "", "end"], [124, 2, 1, "", "run"]], "NuRadioReco.modules.channelTemplateCorrelation": [[125, 1, 1, "", "channelTemplateCorrelation"]], "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation": [[125, 2, 1, "", "begin"], [125, 2, 1, "", "end"], [125, 2, 1, "", "match_sampling"], [125, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeOffsetCalculator": [[126, 1, 1, "", "channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator": [[126, 2, 1, "", "begin"], [126, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeWindow": [[127, 1, 1, "", "channelTimeWindow"]], "NuRadioReco.modules.channelTimeWindow.channelTimeWindow": [[127, 2, 1, "", "begin"], [127, 2, 1, "", "end"], [127, 2, 1, "", "run"]], "NuRadioReco.modules.correlationDirectionFitter": [[128, 1, 1, "", "correlationDirectionFitter"]], "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter": [[128, 2, 1, "", "begin"], [128, 2, 1, "", "end"], [128, 2, 1, "", "run"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor": [[129, 1, 1, "", "cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor": [[129, 2, 1, "", "begin"], [129, 2, 1, "", "run"]], "NuRadioReco.modules.custom": [[131, 0, 0, "-", "deltaT"]], "NuRadioReco.modules.custom.deltaT": [[132, 0, 0, "-", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution": [[132, 1, 1, "", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution": [[132, 2, 1, "", "begin"], [132, 2, 1, "", "end"], [132, 2, 1, "", "run"]], "NuRadioReco.modules.efieldAirToIcePropagator": [[133, 1, 1, "", "efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator": [[133, 2, 1, "", "begin"], [133, 2, 1, "", "end"], [133, 2, 1, "", "run"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction": [[134, 1, 1, "", "efieldInterferometricAxisReco"], [134, 1, 1, "", "efieldInterferometricDepthReco"], [134, 3, 1, "", "get_geometry_and_transformation"], [134, 3, 1, "", "get_station_data"], [134, 4, 1, "", "logger"], [134, 3, 1, "", "plot_lateral_cross_section"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco": [[134, 2, 1, "", "begin"], [134, 2, 1, "", "end"], [134, 2, 1, "", "find_maximum_in_plane"], [134, 2, 1, "", "reconstruct_interferometric_depth"], [134, 2, 1, "", "reconstruct_shower_axis"], [134, 2, 1, "", "run"], [134, 2, 1, "", "sample_lateral_cross_section"], [134, 2, 1, "", "sample_longitudinal_profile"], [134, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco": [[134, 2, 1, "", "begin"], [134, 2, 1, "", "end"], [134, 2, 1, "", "reconstruct_interferometric_depth"], [134, 2, 1, "", "run"], [134, 2, 1, "", "sample_longitudinal_profile"], [134, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldTimeDirectionFitter": [[135, 1, 1, "", "efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter": [[135, 2, 1, "", "begin"], [135, 2, 1, "", "end"], [135, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverter": [[136, 1, 1, "", "efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter": [[136, 2, 1, "", "begin"], [136, 2, 1, "", "end"], [136, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield": [[137, 1, 1, "", "efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield": [[137, 2, 1, "", "end"], [137, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldBandPassFilter": [[138, 1, 1, "", "electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter": [[138, 2, 1, "", "begin"], [138, 2, 1, "", "end"], [138, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldResampler": [[139, 1, 1, "", "electricFieldResampler"]], "NuRadioReco.modules.electricFieldResampler.electricFieldResampler": [[139, 2, 1, "", "begin"], [139, 2, 1, "", "end"], [139, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldSignalReconstructor": [[140, 1, 1, "", "electricFieldSignalReconstructor"]], "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor": [[140, 2, 1, "", "begin"], [140, 2, 1, "", "end"], [140, 2, 1, "", "run"]], "NuRadioReco.modules.eventTypeIdentifier": [[141, 1, 1, "", "eventTypeIdentifier"]], "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier": [[141, 2, 1, "", "begin"], [141, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor": [[143, 0, 0, "-", "iftElectricFieldReconstructor"], [144, 0, 0, "-", "operators"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor": [[143, 1, 1, "", "IftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor": [[143, 2, 1, "", "begin"], [143, 2, 1, "", "make_priors_plot"], [143, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators": [[144, 1, 1, "", "DomainFlipper"], [144, 1, 1, "", "Inserter"], [144, 1, 1, "", "LinearSlopeOperator"], [144, 3, 1, "", "SlopeSpectrumOperator"], [144, 1, 1, "", "SymmetrizingOperator"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper": [[144, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter": [[144, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator": [[144, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator": [[144, 2, 1, "", "apply"]], "NuRadioReco.modules.io": [[146, 0, 0, "-", "NuRadioRecoio"], [147, 0, 0, "-", "RNO_G"], [149, 0, 0, "-", "araroot"], [151, 0, 0, "-", "coreas"], [158, 0, 0, "-", "eventReader"], [159, 0, 0, "-", "eventWriter"], [160, 0, 0, "-", "event_parser_factory"], [161, 0, 0, "-", "snowshovel"]], "NuRadioReco.modules.io.NuRadioRecoio": [[146, 1, 1, "", "NuRadioRecoio"]], "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio": [[146, 2, 1, "", "close_files"], [146, 2, 1, "", "get_detector"], [146, 2, 1, "", "get_event"], [146, 2, 1, "", "get_event_i"], [146, 2, 1, "", "get_event_ids"], [146, 2, 1, "", "get_events"], [146, 2, 1, "", "get_filenames"], [146, 2, 1, "", "get_header"], [146, 2, 1, "", "get_n_events"], [146, 2, 1, "", "openFile"]], "NuRadioReco.modules.io.RNO_G": [[148, 0, 0, "-", "readRNOGDataMattak"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak": [[148, 3, 1, "", "get_time_offset"], [148, 1, 1, "", "readRNOGData"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData": [[148, 2, 1, "", "begin"], [148, 2, 1, "", "end"], [148, 2, 1, "", "get_event"], [148, 2, 1, "", "get_event_by_index"], [148, 2, 1, "", "get_events_information"], [148, 2, 1, "", "run"], [148, 2, 1, "", "set_selectors"]], "NuRadioReco.modules.io.coreas": [[152, 0, 0, "-", "coreas"], [153, 0, 0, "-", "readCoREAS"], [154, 0, 0, "-", "readCoREASShower"], [155, 0, 0, "-", "readCoREASStation"], [156, 0, 0, "-", "readCoREASStationGrid"], [157, 0, 0, "-", "simulationSelector"]], "NuRadioReco.modules.io.coreas.coreas": [[152, 3, 1, "", "calculate_simulation_weights"], [152, 3, 1, "", "get_angles"], [152, 3, 1, "", "make_sim_shower"], [152, 3, 1, "", "make_sim_station"]], "NuRadioReco.modules.io.coreas.readCoREAS": [[153, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS": [[153, 2, 1, "", "begin"], [153, 2, 1, "", "end"], [153, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASShower": [[154, 3, 1, "", "antenna_id"], [154, 1, 1, "", "readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower": [[154, 2, 1, "", "begin"], [154, 2, 1, "", "end"], [154, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStation": [[155, 1, 1, "", "readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation": [[155, 2, 1, "", "begin"], [155, 2, 1, "", "end"], [155, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid": [[156, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS": [[156, 2, 1, "", "begin"], [156, 2, 1, "", "end"], [156, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.simulationSelector": [[157, 1, 1, "", "simulationSelector"]], "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector": [[157, 2, 1, "", "begin"], [157, 2, 1, "", "end"], [157, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventReader": [[158, 1, 1, "", "eventReader"]], "NuRadioReco.modules.io.eventReader.eventReader": [[158, 2, 1, "", "begin"], [158, 2, 1, "", "end"], [158, 2, 1, "", "get_detector"], [158, 2, 1, "", "get_header"], [158, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventWriter": [[159, 1, 1, "", "eventWriter"], [159, 3, 1, "", "get_header"]], "NuRadioReco.modules.io.eventWriter.eventWriter": [[159, 2, 1, "", "begin"], [159, 2, 1, "", "end"], [159, 2, 1, "", "run"]], "NuRadioReco.modules.io.event_parser_factory": [[160, 3, 1, "", "iter_events_function"], [160, 3, 1, "", "scan_files_function"]], "NuRadioReco.modules.io.snowshovel": [[162, 0, 0, "-", "readARIANNAData"], [163, 0, 0, "-", "readARIANNADataCalib"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData": [[162, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData": [[162, 2, 1, "", "begin"], [162, 2, 1, "", "end"], [162, 2, 1, "", "run"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib": [[163, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData": [[163, 2, 1, "", "begin"], [163, 2, 1, "", "end"], [163, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise": [[165, 0, 0, "-", "ARIANNA"], [167, 0, 0, "-", "RNO_G"], [169, 0, 0, "-", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.ARIANNA": [[166, 0, 0, "-", "noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT": [[166, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter": [[166, 2, 1, "", "begin"], [166, 2, 1, "", "end"], [166, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.RNO_G": [[168, 0, 0, "-", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter": [[168, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter": [[168, 2, 1, "", "begin"], [168, 2, 1, "", "end"], [168, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder": [[169, 1, 1, "", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder": [[169, 2, 1, "", "begin"], [169, 2, 1, "", "end"], [169, 2, 1, "", "get_noise_station"], [169, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoDirectionReconstructor": [[171, 0, 0, "-", "voltageToEfieldAnalyticConverterForNeutrinos"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos": [[171, 1, 1, "", "voltageToAnalyticEfieldConverterNeutrinos"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos": [[171, 2, 1, "", "begin"], [171, 2, 1, "", "end"], [171, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor": [[173, 0, 0, "-", "create_lookup_table"], [174, 0, 0, "-", "neutrino2DVertexReconstructor"], [175, 0, 0, "-", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor": [[174, 1, 1, "", "neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor": [[174, 2, 1, "", "begin"], [174, 2, 1, "", "find_ray_type"], [174, 2, 1, "", "find_receiving_zenith"], [174, 2, 1, "", "get_correlation_array_2d"], [174, 2, 1, "", "get_correlation_for_pos"], [174, 2, 1, "", "get_signal_travel_time"], [174, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor": [[175, 1, 1, "", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor": [[175, 2, 1, "", "begin"], [175, 2, 1, "", "get_correlation_array_2d"], [175, 2, 1, "", "get_correlation_array_3d"], [175, 2, 1, "", "get_correlation_for_pos"], [175, 2, 1, "", "get_signal_travel_time"], [175, 2, 1, "", "run"]], "NuRadioReco.modules.phasedarray": [[177, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator": [[177, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator": [[177, 2, 1, "", "begin"], [177, 2, 1, "", "calculate_time_delays"], [177, 2, 1, "", "check_vertical_string"], [177, 2, 1, "", "end"], [177, 2, 1, "", "get_antenna_positions"], [177, 2, 1, "", "get_channel_trace_start_time"], [177, 2, 1, "", "phase_signals"], [177, 2, 1, "", "phased_trigger"], [177, 2, 1, "", "power_sum"], [177, 2, 1, "", "run"]], "NuRadioReco.modules.sphericalWaveFitter": [[178, 1, 1, "", "sphericalWaveFitter"]], "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter": [[178, 2, 1, "", "begin"], [178, 2, 1, "", "end"], [178, 2, 1, "", "run"]], "NuRadioReco.modules.templateDirectionFitter": [[179, 1, 1, "", "templateDirectionFitter"]], "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter": [[179, 2, 1, "", "begin"], [179, 2, 1, "", "end"], [179, 2, 1, "", "run"]], "NuRadioReco.modules.trigger": [[181, 0, 0, "-", "calc_parameters_for_rnog_surface_trigger"], [182, 0, 0, "-", "envelopeTrigger"], [183, 0, 0, "-", "highLowThreshold"], [184, 0, 0, "-", "multiHighLowThreshold"], [185, 0, 0, "-", "powerIntegration"], [186, 0, 0, "-", "rnog_surface_trigger"], [187, 0, 0, "-", "simpleThreshold"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[181, 3, 1, "", "linear_fit"]], "NuRadioReco.modules.trigger.envelopeTrigger": [[182, 3, 1, "", "get_envelope_triggers"], [182, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator": [[182, 2, 1, "", "begin"], [182, 2, 1, "", "end"], [182, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.highLowThreshold": [[183, 3, 1, "", "get_high_low_triggers"], [183, 3, 1, "", "get_majority_logic"], [183, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator": [[183, 2, 1, "", "begin"], [183, 2, 1, "", "end"], [183, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.multiHighLowThreshold": [[184, 3, 1, "", "get_high_triggers"], [184, 3, 1, "", "get_low_triggers"], [184, 3, 1, "", "get_multiple_high_low_trigger"], [184, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator": [[184, 2, 1, "", "begin"], [184, 2, 1, "", "end"], [184, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.powerIntegration": [[185, 3, 1, "", "get_power_int_triggers"], [185, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator": [[185, 2, 1, "", "begin"], [185, 2, 1, "", "end"], [185, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.rnog_surface_trigger": [[186, 3, 1, "", "schottky_diode"], [186, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator": [[186, 2, 1, "", "begin"], [186, 2, 1, "", "end"], [186, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.simpleThreshold": [[187, 3, 1, "", "get_threshold_triggers"], [187, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator": [[187, 2, 1, "", "begin"], [187, 2, 1, "", "end"], [187, 2, 1, "", "run"]], "NuRadioReco.modules.triggerTimeAdjuster": [[188, 1, 1, "", "triggerTimeAdjuster"]], "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster": [[188, 2, 1, "", "begin"], [188, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter": [[189, 3, 1, "", "covariance"], [189, 3, 1, "", "stacked_lstsq"], [189, 1, 1, "", "voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter": [[189, 2, 1, "", "begin"], [189, 2, 1, "", "end"], [189, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverter": [[190, 3, 1, "", "get_array_of_channels"], [190, 3, 1, "", "stacked_lstsq"], [190, 1, 1, "", "voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter": [[190, 2, 1, "", "begin"], [190, 2, 1, "", "end"], [190, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel": [[191, 1, 1, "", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel": [[191, 2, 1, "", "begin"], [191, 2, 1, "", "end"], [191, 2, 1, "", "run"]], "NuRadioReco.utilities": [[193, 0, 0, "-", "analytic_pulse"], [194, 0, 0, "-", "bandpass_filter"], [195, 0, 0, "-", "cr_flux"], [196, 0, 0, "-", "diodeSimulator"], [197, 0, 0, "-", "fft"], [198, 0, 0, "-", "geometryUtilities"], [199, 0, 0, "-", "ice"], [200, 0, 0, "-", "interferometry"], [201, 0, 0, "-", "io_utilities"], [202, 0, 0, "-", "logging"], [203, 0, 0, "-", "metaclasses"], [204, 0, 0, "-", "noise"], [205, 0, 0, "-", "particle_names"], [206, 0, 0, "-", "templates"], [207, 0, 0, "-", "timing"], [208, 0, 0, "-", "traceWindows"], [209, 0, 0, "-", "trace_utilities"], [210, 0, 0, "-", "units"], [211, 0, 0, "-", "version"]], "NuRadioReco.utilities.analytic_pulse": [[193, 3, 1, "", "amp_from_energy"], [193, 3, 1, "", "get_analytic_pulse"], [193, 3, 1, "", "get_analytic_pulse_freq"]], "NuRadioReco.utilities.bandpass_filter": [[194, 3, 1, "", "get_filter_response"]], "NuRadioReco.utilities.cr_flux": [[195, 3, 1, "", "get_analytic_cr_flux"], [195, 3, 1, "", "get_cr_event_rate"], [195, 3, 1, "", "get_flux_per_energy_bin"], [195, 3, 1, "", "get_interpolated_cr_flux"], [195, 3, 1, "", "get_measured_data"], [195, 3, 1, "", "plot_measured_spectrum"]], "NuRadioReco.utilities.diodeSimulator": [[196, 1, 1, "", "diodeSimulator"]], "NuRadioReco.utilities.diodeSimulator.diodeSimulator": [[196, 2, 1, "", "calculate_noise_parameters"], [196, 2, 1, "", "end"], [196, 2, 1, "", "tunnel_diode"]], "NuRadioReco.utilities.fft": [[197, 3, 1, "", "freq2time"], [197, 3, 1, "", "time2freq"]], "NuRadioReco.utilities.geometryUtilities": [[198, 3, 1, "", "get_efield_in_spherical_coords"], [198, 3, 1, "", "get_fresnel_angle"], [198, 3, 1, "", "get_fresnel_r_p"], [198, 3, 1, "", "get_fresnel_r_s"], [198, 3, 1, "", "get_fresnel_t_p"], [198, 3, 1, "", "get_fresnel_t_s"], [198, 3, 1, "", "get_time_delay_from_direction"], [198, 3, 1, "", "rot_x"], [198, 3, 1, "", "rot_y"], [198, 3, 1, "", "rot_z"]], "NuRadioReco.utilities.ice": [[199, 3, 1, "", "get_refractive_index"]], "NuRadioReco.utilities.interferometry": [[200, 3, 1, "", "fit_axis"], [200, 3, 1, "", "get_intersection_between_line_and_plane"], [200, 3, 1, "", "get_signal"], [200, 3, 1, "", "get_time_shifts"], [200, 3, 1, "", "interfere_traces_interpolation"]], "NuRadioReco.utilities.io_utilities": [[201, 3, 1, "", "read_pickle"]], "NuRadioReco.utilities.logging": [[202, 3, 1, "", "addLoggingLevel"], [202, 3, 1, "", "setup_logger"]], "NuRadioReco.utilities.metaclasses": [[203, 1, 1, "", "Singleton"]], "NuRadioReco.utilities.metaclasses.Singleton": [[203, 2, 1, "", "mro"]], "NuRadioReco.utilities.noise": [[204, 3, 1, "", "rolled_sum_roll"], [204, 3, 1, "", "rolled_sum_slicing"], [204, 3, 1, "", "rolled_sum_take"], [204, 3, 1, "", "rolling_indices"], [204, 1, 1, "", "thermalNoiseGenerator"], [204, 1, 1, "", "thermalNoiseGeneratorPhasedArray"]], "NuRadioReco.utilities.noise.thermalNoiseGenerator": [[204, 2, 1, "", "generate_noise"]], "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray": [[204, 2, 1, "", "generate_noise"], [204, 2, 1, "", "generate_noise2"]], "NuRadioReco.utilities.particle_names": [[205, 3, 1, "", "particle_id"], [205, 3, 1, "", "particle_name"]], "NuRadioReco.utilities.templates": [[206, 1, 1, "", "Templates"]], "NuRadioReco.utilities.templates.Templates": [[206, 2, 1, "", "get_cr_ref_template"], [206, 2, 1, "", "get_cr_ref_templates"], [206, 2, 1, "", "get_nu_ref_template"], [206, 2, 1, "", "get_nu_ref_templates"], [206, 2, 1, "", "get_set_of_cr_templates"], [206, 2, 1, "", "get_set_of_cr_templates_full"], [206, 2, 1, "", "get_set_of_nu_templates"], [206, 2, 1, "", "set_template_directory"]], "NuRadioReco.utilities.timing": [[207, 3, 1, "", "analyze_timing"]], "NuRadioReco.utilities.traceWindows": [[208, 3, 1, "", "get_window_around_maximum"]], "NuRadioReco.utilities.trace_utilities": [[209, 3, 1, "", "apply_butterworth"], [209, 3, 1, "", "butterworth_filter_trace"], [209, 3, 1, "", "delay_trace"], [209, 3, 1, "", "get_channel_voltage_from_efield"], [209, 3, 1, "", "get_efield_antenna_factor"], [209, 3, 1, "", "get_electric_field_energy_fluence"], [209, 3, 1, "", "upsampling_fir"]], "NuRadioReco.utilities.version": [[211, 3, 1, "", "get_NuRadioMC_commit_hash"], [211, 3, 1, "", "get_NuRadioReco_commit_hash"], [211, 3, 1, "", "get_git_commit_hash"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": 0, "nuradiomc": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 54, 62], "workflow": 0, "code": [0, 51, 60, 212], "convent": [0, 1], "how": [0, 57, 219], "write": [0, 214, 219], "docstr": 0, "updat": 0, "version": [0, 2, 211], "number": 0, "depend": [0, 2], "addit": [0, 213], "document": [0, 60, 62, 212, 224, 225], "compil": 0, "head": 0, "text": 0, "list": [0, 59, 219], "link": 0, "cross": 0, "refer": 0, "show": 0, "some": 1, "note": 1, "coordin": [1, 215], "default": 1, "system": [1, 210, 223], "point": 1, "angl": 1, "direct": 1, "unit": [1, 210, 223], "particl": [1, 51, 97, 219], "type": 1, "fourier": [1, 223], "transform": [1, 223], "instal": 2, "nuradioreco": [2, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 224], "requir": 2, "us": [2, 51, 54, 56, 219, 220], "pip": 2, "develop": [2, 57, 219], "pythonpath": 2, "manual": [2, 61, 221], "core": 2, "option": 2, "Not": 2, "packag": [2, 5, 18, 19, 25, 31, 33, 63, 64, 66, 69, 86, 103, 104, 107, 109, 113, 130, 131, 142, 145, 147, 149, 151, 161, 164, 165, 167, 170, 172, 176, 180, 192], "introduct": [3, 4], "evtgen": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "submodul": [5, 18, 19, 25, 31, 33, 63, 64, 66, 69, 86, 103, 104, 107, 109, 113, 131, 142, 145, 147, 149, 151, 161, 164, 165, 167, 170, 172, 176, 180, 192], "nuradiomctoarasim": 6, "modul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 57, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 222], "nuradiopropos": [7, 51], "create_tau_tab": 8, "generate_cylind": 9, "generate_unforc": 10, "gener": [11, 51, 52, 55, 56, 59], "generator_ascii": 12, "generator_skeleton": 13, "hdf5_to_ascii": 14, "proposal_table_manag": 15, "readaraeventlist": 16, "readeventlist_ascii": 17, "signalgen": [18, 19, 20, 21, 22, 23, 24], "subpackag": [18, 63, 103, 130, 145, 164], "arz": [19, 20, 56], "hcrb2017": 21, "askaryan": 22, "emitt": 23, "parametr": 24, "signalprop": [25, 26, 27, 28, 29, 30], "analyticraytrac": 26, "directraytrac": 27, "propag": [28, 57], "propagation_base_class": 29, "radioproparaytrac": 30, "simul": [31, 32, 52, 58, 59], "util": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 223], "veff": 34, "attenu": [35, 54], "cross_sect": 36, "dump_hdf5": 37, "earth_attenu": 38, "flux": 39, "inelast": 40, "medium": 41, "medium_bas": 42, "merge_hdf5": 43, "muon_flux": 44, "plot": 45, "runner": 46, "runner_exampl": 47, "split_hdf5": 48, "hdf5": [49, 50, 55], "output": [49, 50, 52, 55], "structur": [49, 50, 216, 219, 222], "open": [49, 50], "file": [49, 50, 55, 58, 59, 214, 219], "what": [49, 50], "": [49, 50, 225], "behind": [49, 50], "attribut": [49, 50, 51], "station": [49, 50, 52, 101, 219], "content": [49, 50, 225], "item": 49, "data": [49, 50, 51, 216, 219], "v2": 50, "2": [50, 52, 55], "event": [51, 59, 92, 214, 218, 219], "cylindr": 51, "volum": [51, 59], "input": [51, 55, 59], "paramet": [51, 96, 219], "set": 51, "atmospher": 51, "muon": 51, "flat": 51, "surfac": 51, "standalon": 51, "exampl": [52, 53, 54, 57, 59], "multi": 52, "coincid": 52, "1": [52, 55], "detector": [52, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 214, 215, 216, 217, 219], "layout": 52, "3": [52, 55], "run": [52, 55, 59], "4": [52, 55, 213], "analyz": 52, "calcul": [53, 57, 59], "expect": 53, "sensit": 53, "ic": [54, 199], "model": [54, 56, 213], "implement": 54, "The": [54, 210, 214, 216], "icemodel": 54, "icemodel_simpl": 54, "class": [54, 214, 216, 219], "radiopropaicewrapp": 54, "avail": [54, 213], "simpl": 54, "radiopropa": [54, 57], "specif": [54, 214], "script": [54, 55, 57], "cluster": 55, "job": 55, "sh": 55, "submit": 55, "merg": 55, "individu": 55, "signal": [56, 57, 214], "electr": [56, 219, 220], "field": [56, 219, 220], "frequenc": 56, "domain": 56, "parameteris": 56, "semi": 56, "analyt": [56, 57], "valid": 56, "time": [56, 207, 216], "same": 56, "shower": [56, 219], "random": 56, "seed": 56, "fft": [56, 197], "normalis": 56, "rai": 57, "trace": 57, "tracer": 57, "gsl": 57, "speed": 57, "boost": 57, "numer": 57, "an": [57, 59], "path": 57, "configur": 58, "steer": 58, "config": [58, 59], "descript": [58, 59, 214, 215, 217], "effect": 59, "more": 59, "detail": 59, "visual": 59, "result": 59, "ara": [64, 65, 104, 105, 106], "analog_compon": [65, 67, 70], "arianna": [66, 67, 68, 107, 108, 165, 166], "preprocessamprespons": 68, "rno_g": [69, 70, 71, 72, 73, 109, 110, 111, 147, 148, 167, 168], "db_mongo_read": 71, "db_mongo_writ": 72, "rnog_detector": 73, "amp": 74, "antennapattern": 75, "detector_bas": 77, "detector_sql": 78, "detector_sys_uncertainti": 79, "filterrespons": 80, "generic_detector": 81, "respons": [82, 214], "sql_to_json": 83, "test_detector_db": 84, "visualize_detector": 85, "framework": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "base_show": 87, "base_st": 88, "base_trac": 89, "channel": [90, 219], "electric_field": 91, "hybrid_inform": 93, "hybrid_show": 94, "parameter_seri": 95, "radio_show": 98, "sim_channel": 99, "sim_stat": 100, "trigger": [102, 180, 181, 182, 183, 184, 185, 186, 187, 219], "hardwareresponseincorpor": [105, 108, 111], "triggersimul": [106, 177], "channelblockoffsetfitt": 110, "analogtodigitalconvert": 112, "base": [113, 114, 210], "beamformingdirectionfitt": 115, "channeladdcabledelai": 116, "channelantennadedispers": 117, "channelbandpassfilt": 118, "channelgalacticnoiseadd": 119, "channelgenericnoiseadd": 120, "channellengthadjust": 121, "channelresampl": 122, "channelsignalreconstructor": 123, "channelstopfilt": 124, "channeltemplatecorrel": 125, "channeltimeoffsetcalcul": 126, "channeltimewindow": 127, "correlationdirectionfitt": 128, "cosmicrayenergyreconstructor": 129, "custom": [130, 131, 132], "deltat": [131, 132], "calculateamplitudeperraysolut": 132, "efieldairtoicepropag": 133, "efieldradiointerferometricreconstruct": 134, "efieldtimedirectionfitt": 135, "efieldtovoltageconvert": 136, "efieldtovoltageconverterperefield": 137, "electricfieldbandpassfilt": 138, "electricfieldresampl": 139, "electricfieldsignalreconstructor": 140, "eventtypeidentifi": 141, "iftelectricfieldreconstructor": [142, 143, 144], "oper": 144, "io": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "nuradiorecoio": 146, "readrnogdatamattak": 148, "araroot": [149, 150], "readaradata": 150, "corea": [151, 152, 153, 154, 155, 156, 157], "readcorea": 153, "readcoreasshow": 154, "readcoreasst": 155, "readcoreasstationgrid": 156, "simulationselector": 157, "eventread": 158, "eventwrit": 159, "event_parser_factori": 160, "snowshovel": [161, 162, 163], "readariannadata": 162, "readariannadatacalib": 163, "measured_nois": [164, 165, 166, 167, 168, 169], "noiseimporterroot": 166, "noiseimport": 168, "channelmeasurednoiseadd": 169, "neutrinodirectionreconstructor": [170, 171], "voltagetoefieldanalyticconverterforneutrino": 171, "neutrinovertexreconstructor": [172, 173, 174, 175], "create_lookup_t": 173, "neutrino2dvertexreconstructor": 174, "neutrino3dvertexreconstructor": 175, "phasedarrai": [176, 177], "sphericalwavefitt": 178, "templatedirectionfitt": 179, "calc_parameters_for_rnog_surface_trigg": 181, "envelopetrigg": 182, "highlowthreshold": 183, "multihighlowthreshold": 184, "powerintegr": 185, "rnog_surface_trigg": 186, "simplethreshold": 187, "triggertimeadjust": 188, "voltagetoanalyticefieldconvert": 189, "voltagetoefieldconvert": 190, "voltagetoefieldconverterperchannel": 191, "analytic_puls": 193, "bandpass_filt": 194, "cr_flux": 195, "diodesimul": 196, "geometryutil": 198, "interferometri": 200, "io_util": 201, "log": [202, 222], "metaclass": [203, 223], "nois": 204, "particle_nam": 205, "templat": [206, 220], "tracewindow": 208, "trace_util": 209, "standard": 210, "ar": 210, "antenna": [213, 215], "overview": 213, "bicone_v8_infair": 213, "bicone_v8_inffirn": 213, "bicone_v8_inf_n1": 213, "32": 213, "78": 213, "createlpda_100mhz_inffirn": 213, "createlpda_inffirn_n1": 213, "createlpda_100mhz_z1cm_infirn_rg": 213, "createlpda_100mhz_z1cm_infirn_boresighttoboundari": 213, "createlpda_100mhz_z10cm_infirn_rg": 213, "createlpda_100mhz_z1m_infirn_rg": 213, "createlpda_100mhz_z2m_infirn_rg": 213, "createlpda_100mhz_z2m_infirn_backlobe_norg": 213, "createlpda_100mhz_z3m_inair_rg": 213, "createlpda_100mhz_z3m_infirn_boresighttoboundari": 213, "createlpda_100mhz_z3mandlpdalen_infirn_boresighttoboundari": 213, "createlpda_100mhz_z5m_infirn_rg": 213, "createlpda_100mhz_z10m_infirn_rg": 213, "createlpda_100mhz_z100m_infirn_rg": 213, "createlpda_100mhz_z200m_infirn_rg": 213, "createlpda_100mhz_infair": 213, "createlpda_100mhz_z1cm_inair_rg": 213, "createlpda_100mhz_z1m_infirn_rg_v2": 213, "dip7cm_hpol_inffirn": 213, "dip7cm_z260mm_infirn_rg": 213, "dip7cm_z1m_infirn_rg": 213, "dip7cm_z2m_infirn_rg": 213, "dip7cm_z3m_infirn_rg_nearhorizontalhd": 213, "dip7cm_z5m_infirn_rg": 213, "dip7cm_z10m_infirn_rg": 213, "dip7cm_z200m_infirn_rg": 213, "dip7cm_z100m_infirn_rg": 213, "dip7cm_infair_s12": 213, "dip7cm_z270mm_inair": 213, "dip7cm_z1m_inair": 213, "dip7cm_z1m_inair_rg_nearhorizontalhd": 213, "dip7cm_z1m_inair_rg_nearhorizontalhd2": 213, "dip7cm_z2m_inair": 213, "dip7cm_z5m_inair": 213, "rnog_vpol_4inch_center_n1": 213, "73": 213, "rnog_vpol_4inch_half_n1": 213, "rnog_vpol_4inch_wall_n1": 213, "rnog_quadslot_v1_n1": 213, "74": 213, "rnog_quadslot_v2_n1": 213, "rnog_quadslot_v2_rescaled_finefreq": 213, "rnog_quadslot_v3_air_rescaled_to_n1": 213, "skala_inffirn": 213, "rnog_vpol_v1_n1": 213, "fourslot_inffirn": 213, "greenland_vpol_inffirn": 213, "trislot_rnog": 213, "dipole_ara_bicone_infinitefirn": 213, "xfdtd_hpol_150mmhole_n1": 213, "xfdtd_vpol_crossfeed_150mmhole_n1": 213, "78_inffirn": 213, "format": 214, "databas": [214, 216], "json": 214, "dictionari": 214, "chain": 214, "genericdetector": 214, "chang": 214, "read": [214, 219], "viewer": 214, "properti": 215, "tabl": [215, 220, 225], "further": 215, "discuss": 215, "adc": 215, "rno": 216, "g": 216, "interfac": 216, "displai": 218, "nur": 219, "them": 219, "philosophi": 219, "basic": [219, 222], "storag": 219, "For": 219, "radio": 219, "simshow": 219, "simstat": 219, "basetrac": 219, "hybrid": 219, "inform": 219, "vertex": 220, "reconstruct": 220, "creat": 220, "lookup": 220, "2d": 220, "v": 220, "3d": 220, "reconstructor": 220, "singleton": 223, "welcom": 225, "nuradio": 225, "indic": 225}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributing to NuRadioMC": [[0, "contributing-to-nuradiomc"]], "Workflow": [[0, "workflow"]], "Coding conventions": [[0, "coding-conventions"]], "How to": [[0, "how-to"]], "Writing docstrings": [[0, "writing-docstrings"]], "Update the version number / dependencies": [[0, "update-the-version-number-dependencies"]], "Writing additional documentation": [[0, "writing-additional-documentation"]], "Compiling the documentation": [[0, "compiling-the-documentation"]], "Headings and text": [[0, "headings-and-text"]], "Lists": [[0, "lists"]], "Links and cross-references": [[0, "links-and-cross-references"]], "Showing code": [[0, "showing-code"]], "Some notes on conventions": [[1, "some-notes-on-conventions"]], "Coordinates": [[1, "coordinates"]], "Default coordinate system": [[1, "default-coordinate-system"]], "Points": [[1, "points"]], "Angles": [[1, "angles"]], "Directions": [[1, "directions"]], "Units": [[1, "units"]], "Particle types": [[1, "particle-types"]], "Fourier transformations": [[1, "fourier-transformations"]], "Installing NuRadioMC / NuRadioReco": [[2, "installing-nuradiomc-nuradioreco"]], "Requirements": [[2, "requirements"]], "Installation using Pip": [[2, "installation-using-pip"]], "Development version": [[2, "development-version"]], "PYTHONPATH": [[2, "pythonpath"]], "Manual installation": [[2, "manual-installation"]], "Pip-installable dependencies": [[2, "pip-installable-dependencies"]], "Core Dependencies": [[2, "core-dependencies"]], "Optional Dependencies": [[2, "optional-dependencies"]], "Not pip-installable packages": [[2, "not-pip-installable-packages"]], "Introduction": [[3, "introduction"], [4, "introduction"]], "NuRadioMC.EvtGen package": [[5, "module-NuRadioMC.EvtGen"]], "Submodules": [[5, "submodules"], [18, "submodules"], [19, "submodules"], [25, "submodules"], [31, "submodules"], [33, "submodules"], [63, "submodules"], [64, "submodules"], [66, "submodules"], [69, "submodules"], [86, "submodules"], [103, "submodules"], [104, "submodules"], [107, "submodules"], [109, "submodules"], [113, "submodules"], [131, "submodules"], [142, "submodules"], [145, "submodules"], [147, "submodules"], [149, "submodules"], [151, "submodules"], [161, "submodules"], [164, "submodules"], [165, "submodules"], [167, "submodules"], [170, "submodules"], [172, "submodules"], [176, "submodules"], [180, "submodules"], [192, "submodules"]], "NuRadioMC.EvtGen.NuRadioMCtoAraSim module": [[6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "NuRadioMC.EvtGen.NuRadioProposal module": [[7, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "NuRadioMC.EvtGen.create_tau_tab module": [[8, "module-NuRadioMC.EvtGen.create_tau_tab"]], "NuRadioMC.EvtGen.generate_cylinder module": [[9, "module-NuRadioMC.EvtGen.generate_cylinder"]], "NuRadioMC.EvtGen.generate_unforced module": [[10, "module-NuRadioMC.EvtGen.generate_unforced"]], "NuRadioMC.EvtGen.generator module": [[11, "module-NuRadioMC.EvtGen.generator"]], "NuRadioMC.EvtGen.generator_ASCII module": [[12, "module-NuRadioMC.EvtGen.generator_ASCII"]], "NuRadioMC.EvtGen.generator_skeleton module": [[13, "module-NuRadioMC.EvtGen.generator_skeleton"]], "NuRadioMC.EvtGen.hdf5_to_ASCII module": [[14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "NuRadioMC.EvtGen.proposal_table_manager module": [[15, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "NuRadioMC.EvtGen.readARAEventList module": [[16, "module-NuRadioMC.EvtGen.readARAEventList"]], "NuRadioMC.EvtGen.readEventList_ASCII module": [[17, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "NuRadioMC.SignalGen package": [[18, "module-NuRadioMC.SignalGen"]], "Subpackages": [[18, "subpackages"], [63, "subpackages"], [103, "subpackages"], [130, "subpackages"], [145, "subpackages"], [164, "subpackages"]], "NuRadioMC.SignalGen.ARZ package": [[19, "module-NuRadioMC.SignalGen.ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ module": [[20, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "NuRadioMC.SignalGen.HCRB2017 module": [[21, "module-NuRadioMC.SignalGen.HCRB2017"]], "NuRadioMC.SignalGen.askaryan module": [[22, "module-NuRadioMC.SignalGen.askaryan"]], "NuRadioMC.SignalGen.emitter module": [[23, "module-NuRadioMC.SignalGen.emitter"]], "NuRadioMC.SignalGen.parametrizations module": [[24, "module-NuRadioMC.SignalGen.parametrizations"]], "NuRadioMC.SignalProp package": [[25, "module-NuRadioMC.SignalProp"]], "NuRadioMC.SignalProp.analyticraytracing module": [[26, "module-NuRadioMC.SignalProp.analyticraytracing"]], "NuRadioMC.SignalProp.directRayTracing module": [[27, "module-NuRadioMC.SignalProp.directRayTracing"]], "NuRadioMC.SignalProp.propagation module": [[28, "module-NuRadioMC.SignalProp.propagation"]], "NuRadioMC.SignalProp.propagation_base_class module": [[29, "module-NuRadioMC.SignalProp.propagation_base_class"]], "NuRadioMC.SignalProp.radioproparaytracing module": [[30, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "NuRadioMC.simulation package": [[31, "module-NuRadioMC.simulation"]], "NuRadioMC.simulation.simulation module": [[32, "module-NuRadioMC.simulation.simulation"]], "NuRadioMC.utilities package": [[33, "module-NuRadioMC.utilities"]], "NuRadioMC.utilities.Veff module": [[34, "module-NuRadioMC.utilities.Veff"]], "NuRadioMC.utilities.attenuation module": [[35, "module-NuRadioMC.utilities.attenuation"]], "NuRadioMC.utilities.cross_sections module": [[36, "module-NuRadioMC.utilities.cross_sections"]], "NuRadioMC.utilities.dump_hdf5 module": [[37, "module-NuRadioMC.utilities.dump_hdf5"]], "NuRadioMC.utilities.earth_attenuation module": [[38, "module-NuRadioMC.utilities.earth_attenuation"]], "NuRadioMC.utilities.fluxes module": [[39, "module-NuRadioMC.utilities.fluxes"]], "NuRadioMC.utilities.inelasticities module": [[40, "module-NuRadioMC.utilities.inelasticities"]], "NuRadioMC.utilities.medium module": [[41, "module-NuRadioMC.utilities.medium"]], "NuRadioMC.utilities.medium_base module": [[42, "module-NuRadioMC.utilities.medium_base"]], "NuRadioMC.utilities.merge_hdf5 module": [[43, "module-NuRadioMC.utilities.merge_hdf5"]], "NuRadioMC.utilities.muon_flux module": [[44, "nuradiomc-utilities-muon-flux-module"]], "NuRadioMC.utilities.plotting module": [[45, "module-NuRadioMC.utilities.plotting"]], "NuRadioMC.utilities.runner module": [[46, "module-NuRadioMC.utilities.runner"]], "NuRadioMC.utilities.runner_example module": [[47, "module-NuRadioMC.utilities.runner_example"]], "NuRadioMC.utilities.split_hdf5 module": [[48, "module-NuRadioMC.utilities.split_hdf5"]], "HDF5 output structure": [[49, "hdf5-output-structure"]], "Opening the HDF5 file": [[49, "opening-the-hdf5-file"], [50, "opening-the-hdf5-file"]], "What\u2019s behind the HDF5 files": [[49, "what-s-behind-the-hdf5-files"], [50, "what-s-behind-the-hdf5-files"]], "HDF5 structure": [[49, "hdf5-structure"], [50, "hdf5-structure"]], "HDF5 file attributes": [[49, "hdf5-file-attributes"], [50, "hdf5-file-attributes"]], "HDF5 attributes": [[49, "id1"]], "HDF5 station attributes": [[49, "id2"]], "HDF5 file contents": [[49, "hdf5-file-contents"], [50, "hdf5-file-contents"]], "HDF5 items": [[49, "id3"]], "Station data": [[49, "station-data"], [50, "station-data"]], "HDF5 station items": [[49, "id4"]], "HDF5 output structure (v2.2)": [[50, "hdf5-output-structure-v2-2"]], "Event Generation": [[51, "event-generation"]], "Events in a cylindrical volume": [[51, "events-in-a-cylindrical-volume"]], "Input parameters": [[51, "input-parameters"]], "Data sets and attributes": [[51, "data-sets-and-attributes"]], "Particle codes used in NuRadioMC": [[51, "id1"]], "Atmospheric muons generated on a flat surface": [[51, "atmospheric-muons-generated-on-a-flat-surface"]], "NuRadioProposal as a standalone module": [[51, "nuradioproposal-as-a-standalone-module"]], "Example: Multi-station coincidences": [[52, "example-multi-station-coincidences"]], "1. Generation of detector layout": [[52, "generation-of-detector-layout"]], "2. Detector simulation": [[52, "detector-simulation"]], "3. Running the simulation": [[52, "running-the-simulation"]], "4. Analyzing the output": [[52, "analyzing-the-output"]], "Example: Calculating expected sensitivities": [[53, "example-calculating-expected-sensitivities"]], "Ice and attenuation models": [[54, "ice-and-attenuation-models"]], "Ice model implementation": [[54, "ice-model-implementation"]], "The IceModel and IceModel_Simple class": [[54, "the-icemodel-and-icemodel-simple-class"]], "RadioPropaIceWrapper": [[54, "radiopropaicewrapper"]], "Available models in NuRadioMC": [[54, "available-models-in-nuradiomc"]], "Simple ice models": [[54, "simple-ice-models"]], "Simple Ice Models": [[54, "id1"]], "RadioPropa ice models": [[54, "radiopropa-ice-models"]], "Attenuation model": [[54, "attenuation-model"]], "Using specific models": [[54, "using-specific-models"]], "Example script": [[54, "example-script"]], "Running on a cluster": [[55, "running-on-a-cluster"]], "1. Generate input files": [[55, "generate-input-files"]], "2. Generate job *.sh scripts": [[55, "generate-job-sh-scripts"]], "3. Submit jobs to the cluster": [[55, "submit-jobs-to-the-cluster"]], "4. Merge individual hdf5 output files": [[55, "merge-individual-hdf5-output-files"]], "Signal Generation (electric field)": [[56, "signal-generation-electric-field"]], "Frequency-domain parameterisations": [[56, "frequency-domain-parameterisations"]], "ARZ - semi-analytical model": [[56, "arz-semi-analytical-model"]], "Validity of the parameterisations and the ARZ model": [[56, "validity-of-the-parameterisations-and-the-arz-model"]], "Timing": [[56, "timing"]], "Using the same shower. Random seed": [[56, "using-the-same-shower-random-seed"]], "FFT normalisation": [[56, "fft-normalisation"]], "Signal Propagation": [[57, "signal-propagation"]], "Propagation module": [[57, "propagation-module"]], "Ray tracing": [[57, "ray-tracing"]], "Analytical ray tracer": [[57, "analytical-ray-tracer"]], "GSL speed-boost": [[57, "gsl-speed-boost"]], "RadioPropa numerical ray tracer (in development)": [[57, "radiopropa-numerical-ray-tracer-in-development"]], "Example scripts": [[57, "example-scripts"]], "How to calculate an analytic ray path": [[57, "how-to-calculate-an-analytic-ray-path"]], "How to calculate an radiopropa ray path": [[57, "how-to-calculate-an-radiopropa-ray-path"]], "Simulation and configuration": [[58, "simulation-and-configuration"]], "Steering files": [[58, "steering-files"]], "Config files": [[58, "config-files"]], "Detector description": [[58, "detector-description"]], "Detector simulation": [[58, "detector-simulation"]], "Example: Calculating effective volume": [[59, "example-calculating-effective-volume"]], "Run an effective volume simulation": [[59, "run-an-effective-volume-simulation"]], "Generating the input event list": [[59, "generating-the-input-event-list"]], "Running the simulation": [[59, "running-the-simulation"]], "More details: the detector description": [[59, "more-details-the-detector-description"]], "More details: the config file": [[59, "more-details-the-config-file"]], "Visualization of results": [[59, "visualization-of-results"]], "Code Documentation": [[60, "code-documentation"], [212, "code-documentation"]], "Manuals": [[61, "manuals"], [221, "manuals"]], "NuRadioMC Documentation": [[62, "nuradiomc-documentation"]], "NuRadioReco.detector package": [[63, "module-NuRadioReco.detector"]], "NuRadioReco.detector.ARA package": [[64, "module-NuRadioReco.detector.ARA"]], "NuRadioReco.detector.ARA.analog_components module": [[65, "module-NuRadioReco.detector.ARA.analog_components"]], "NuRadioReco.detector.ARIANNA package": [[66, "module-NuRadioReco.detector.ARIANNA"]], "NuRadioReco.detector.ARIANNA.analog_components module": [[67, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module": [[68, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "NuRadioReco.detector.RNO_G package": [[69, "module-NuRadioReco.detector.RNO_G"]], "NuRadioReco.detector.RNO_G.analog_components module": [[70, "module-NuRadioReco.detector.RNO_G.analog_components"]], "NuRadioReco.detector.RNO_G.db_mongo_read module": [[71, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "NuRadioReco.detector.RNO_G.db_mongo_write module": [[72, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "NuRadioReco.detector.RNO_G.rnog_detector module": [[73, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "NuRadioReco.detector.amp module": [[74, "module-NuRadioReco.detector.amp"]], "NuRadioReco.detector.antennapattern module": [[75, "module-NuRadioReco.detector.antennapattern"]], "NuRadioReco.detector.detector module": [[76, "module-NuRadioReco.detector.detector"]], "NuRadioReco.detector.detector_base module": [[77, "module-NuRadioReco.detector.detector_base"]], "NuRadioReco.detector.detector_sql module": [[78, "module-NuRadioReco.detector.detector_sql"]], "NuRadioReco.detector.detector_sys_uncertainties module": [[79, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "NuRadioReco.detector.filterresponse module": [[80, "module-NuRadioReco.detector.filterresponse"]], "NuRadioReco.detector.generic_detector module": [[81, "module-NuRadioReco.detector.generic_detector"]], "NuRadioReco.detector.response module": [[82, "module-NuRadioReco.detector.response"]], "NuRadioReco.detector.sql_to_json module": [[83, "module-NuRadioReco.detector.sql_to_json"]], "NuRadioReco.detector.test_detector_db module": [[84, "module-NuRadioReco.detector.test_detector_db"]], "NuRadioReco.detector.visualize_detector module": [[85, "module-NuRadioReco.detector.visualize_detector"]], "NuRadioReco.framework package": [[86, "module-NuRadioReco.framework"]], "NuRadioReco.framework.base_shower module": [[87, "module-NuRadioReco.framework.base_shower"]], "NuRadioReco.framework.base_station module": [[88, "module-NuRadioReco.framework.base_station"]], "NuRadioReco.framework.base_trace module": [[89, "module-NuRadioReco.framework.base_trace"]], "NuRadioReco.framework.channel module": [[90, "module-NuRadioReco.framework.channel"]], "NuRadioReco.framework.electric_field module": [[91, "module-NuRadioReco.framework.electric_field"]], "NuRadioReco.framework.event module": [[92, "module-NuRadioReco.framework.event"]], "NuRadioReco.framework.hybrid_information module": [[93, "module-NuRadioReco.framework.hybrid_information"]], "NuRadioReco.framework.hybrid_shower module": [[94, "module-NuRadioReco.framework.hybrid_shower"]], "NuRadioReco.framework.parameter_serialization module": [[95, "module-NuRadioReco.framework.parameter_serialization"]], "NuRadioReco.framework.parameters module": [[96, "module-NuRadioReco.framework.parameters"]], "NuRadioReco.framework.particle module": [[97, "module-NuRadioReco.framework.particle"]], "NuRadioReco.framework.radio_shower module": [[98, "module-NuRadioReco.framework.radio_shower"]], "NuRadioReco.framework.sim_channel module": [[99, "module-NuRadioReco.framework.sim_channel"]], "NuRadioReco.framework.sim_station module": [[100, "module-NuRadioReco.framework.sim_station"]], "NuRadioReco.framework.station module": [[101, "module-NuRadioReco.framework.station"]], "NuRadioReco.framework.trigger module": [[102, "module-NuRadioReco.framework.trigger"]], "NuRadioReco.modules package": [[103, "module-NuRadioReco.modules"]], "NuRadioReco.modules.ARA package": [[104, "module-NuRadioReco.modules.ARA"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator module": [[105, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.triggerSimulator module": [[106, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "NuRadioReco.modules.ARIANNA package": [[107, "module-NuRadioReco.modules.ARIANNA"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module": [[108, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G package": [[109, "module-NuRadioReco.modules.RNO_G"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module": [[110, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module": [[111, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "NuRadioReco.modules.analogToDigitalConverter module": [[112, "module-NuRadioReco.modules.analogToDigitalConverter"]], "NuRadioReco.modules.base package": [[113, "module-NuRadioReco.modules.base"]], "NuRadioReco.modules.base.module module": [[114, "module-NuRadioReco.modules.base.module"]], "NuRadioReco.modules.beamFormingDirectionFitter module": [[115, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "NuRadioReco.modules.channelAddCableDelay module": [[116, "module-NuRadioReco.modules.channelAddCableDelay"]], "NuRadioReco.modules.channelAntennaDedispersion module": [[117, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "NuRadioReco.modules.channelBandPassFilter module": [[118, "module-NuRadioReco.modules.channelBandPassFilter"]], "NuRadioReco.modules.channelGalacticNoiseAdder module": [[119, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder module": [[120, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "NuRadioReco.modules.channelLengthAdjuster module": [[121, "module-NuRadioReco.modules.channelLengthAdjuster"]], "NuRadioReco.modules.channelResampler module": [[122, "module-NuRadioReco.modules.channelResampler"]], "NuRadioReco.modules.channelSignalReconstructor module": [[123, "module-NuRadioReco.modules.channelSignalReconstructor"]], "NuRadioReco.modules.channelStopFilter module": [[124, "module-NuRadioReco.modules.channelStopFilter"]], "NuRadioReco.modules.channelTemplateCorrelation module": [[125, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "NuRadioReco.modules.channelTimeOffsetCalculator module": [[126, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeWindow module": [[127, "module-NuRadioReco.modules.channelTimeWindow"]], "NuRadioReco.modules.correlationDirectionFitter module": [[128, "module-NuRadioReco.modules.correlationDirectionFitter"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor module": [[129, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.custom package": [[130, "module-NuRadioReco.modules.custom"]], "NuRadioReco.modules.custom.deltaT package": [[131, "module-NuRadioReco.modules.custom.deltaT"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module": [[132, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.efieldAirToIcePropagator module": [[133, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction module": [[134, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "NuRadioReco.modules.efieldTimeDirectionFitter module": [[135, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldToVoltageConverter module": [[136, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield module": [[137, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.electricFieldBandPassFilter module": [[138, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldResampler module": [[139, "module-NuRadioReco.modules.electricFieldResampler"]], "NuRadioReco.modules.electricFieldSignalReconstructor module": [[140, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "NuRadioReco.modules.eventTypeIdentifier module": [[141, "module-NuRadioReco.modules.eventTypeIdentifier"]], "NuRadioReco.modules.iftElectricFieldReconstructor package": [[142, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module": [[143, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators module": [[144, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "NuRadioReco.modules.io package": [[145, "module-NuRadioReco.modules.io"]], "NuRadioReco.modules.io.NuRadioRecoio module": [[146, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "NuRadioReco.modules.io.RNO_G package": [[147, "module-NuRadioReco.modules.io.RNO_G"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module": [[148, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "NuRadioReco.modules.io.araroot package": [[149, "module-NuRadioReco.modules.io.araroot"]], "NuRadioReco.modules.io.araroot.readARAData module": [[150, "nuradioreco-modules-io-araroot-readaradata-module"]], "NuRadioReco.modules.io.coreas package": [[151, "module-NuRadioReco.modules.io.coreas"]], "NuRadioReco.modules.io.coreas.coreas module": [[152, "module-NuRadioReco.modules.io.coreas.coreas"]], "NuRadioReco.modules.io.coreas.readCoREAS module": [[153, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASShower module": [[154, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASStation module": [[155, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid module": [[156, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "NuRadioReco.modules.io.coreas.simulationSelector module": [[157, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "NuRadioReco.modules.io.eventReader module": [[158, "module-NuRadioReco.modules.io.eventReader"]], "NuRadioReco.modules.io.eventWriter module": [[159, "module-NuRadioReco.modules.io.eventWriter"]], "NuRadioReco.modules.io.event_parser_factory module": [[160, "module-NuRadioReco.modules.io.event_parser_factory"]], "NuRadioReco.modules.io.snowshovel package": [[161, "module-NuRadioReco.modules.io.snowshovel"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData module": [[162, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module": [[163, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "NuRadioReco.modules.measured_noise package": [[164, "module-NuRadioReco.modules.measured_noise"]], "NuRadioReco.modules.measured_noise.ARIANNA package": [[165, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module": [[166, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.RNO_G package": [[167, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module": [[168, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module": [[169, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "NuRadioReco.modules.neutrinoDirectionReconstructor package": [[170, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module": [[171, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"]], "NuRadioReco.modules.neutrinoVertexReconstructor package": [[172, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module": [[173, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module": [[174, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module": [[175, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "NuRadioReco.modules.phasedarray package": [[176, "module-NuRadioReco.modules.phasedarray"]], "NuRadioReco.modules.phasedarray.triggerSimulator module": [[177, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "NuRadioReco.modules.sphericalWaveFitter module": [[178, "module-NuRadioReco.modules.sphericalWaveFitter"]], "NuRadioReco.modules.templateDirectionFitter module": [[179, "module-NuRadioReco.modules.templateDirectionFitter"]], "NuRadioReco.modules.trigger package": [[180, "module-NuRadioReco.modules.trigger"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module": [[181, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "NuRadioReco.modules.trigger.envelopeTrigger module": [[182, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "NuRadioReco.modules.trigger.highLowThreshold module": [[183, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "NuRadioReco.modules.trigger.multiHighLowThreshold module": [[184, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "NuRadioReco.modules.trigger.powerIntegration module": [[185, "module-NuRadioReco.modules.trigger.powerIntegration"]], "NuRadioReco.modules.trigger.rnog_surface_trigger module": [[186, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "NuRadioReco.modules.trigger.simpleThreshold module": [[187, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "NuRadioReco.modules.triggerTimeAdjuster module": [[188, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter module": [[189, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter module": [[190, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel module": [[191, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "NuRadioReco.utilities package": [[192, "module-NuRadioReco.utilities"]], "NuRadioReco.utilities.analytic_pulse module": [[193, "module-NuRadioReco.utilities.analytic_pulse"]], "NuRadioReco.utilities.bandpass_filter module": [[194, "module-NuRadioReco.utilities.bandpass_filter"]], "NuRadioReco.utilities.cr_flux module": [[195, "module-NuRadioReco.utilities.cr_flux"]], "NuRadioReco.utilities.diodeSimulator module": [[196, "module-NuRadioReco.utilities.diodeSimulator"]], "NuRadioReco.utilities.fft module": [[197, "module-NuRadioReco.utilities.fft"]], "NuRadioReco.utilities.geometryUtilities module": [[198, "module-NuRadioReco.utilities.geometryUtilities"]], "NuRadioReco.utilities.ice module": [[199, "module-NuRadioReco.utilities.ice"]], "NuRadioReco.utilities.interferometry module": [[200, "module-NuRadioReco.utilities.interferometry"]], "NuRadioReco.utilities.io_utilities module": [[201, "module-NuRadioReco.utilities.io_utilities"]], "NuRadioReco.utilities.logging module": [[202, "module-NuRadioReco.utilities.logging"]], "NuRadioReco.utilities.metaclasses module": [[203, "module-NuRadioReco.utilities.metaclasses"]], "NuRadioReco.utilities.noise module": [[204, "module-NuRadioReco.utilities.noise"]], "NuRadioReco.utilities.particle_names module": [[205, "module-NuRadioReco.utilities.particle_names"]], "NuRadioReco.utilities.templates module": [[206, "module-NuRadioReco.utilities.templates"]], "NuRadioReco.utilities.timing module": [[207, "module-NuRadioReco.utilities.timing"]], "NuRadioReco.utilities.traceWindows module": [[208, "module-NuRadioReco.utilities.traceWindows"]], "NuRadioReco.utilities.trace_utilities module": [[209, "module-NuRadioReco.utilities.trace_utilities"]], "NuRadioReco.utilities.units module": [[210, "module-NuRadioReco.utilities.units"]], "standard system of units": [[210, "standard-system-of-units"]], "The base units are:": [[210, "the-base-units-are"]], "NuRadioReco.utilities.version module": [[211, "module-NuRadioReco.utilities.version"]], "Antenna Models": [[213, "antenna-models"]], "Overview of available Antenna Models": [[213, "overview-of-available-antenna-models"]], "bicone_v8_InfAir": [[213, "bicone-v8-infair"]], "bicone_v8_InfFirn": [[213, "bicone-v8-inffirn"]], "bicone_v8_inf_n1.32": [[213, "bicone-v8-inf-n1-32"]], "bicone_v8_inf_n1.4": [[213, "bicone-v8-inf-n1-4"]], "bicone_v8_inf_n1.78": [[213, "bicone-v8-inf-n1-78"]], "createLPDA_100MHz_InfFirn": [[213, "createlpda-100mhz-inffirn"]], "createLPDA_InfFirn_n1.4": [[213, "createlpda-inffirn-n1-4"]], "createLPDA_100MHz_z1cm_InFirn_RG": [[213, "createlpda-100mhz-z1cm-infirn-rg"]], "createLPDA_100MHz_z1cm_InFirn_BoresightToBoundary": [[213, "createlpda-100mhz-z1cm-infirn-boresighttoboundary"]], "createLPDA_100MHz_z10cm_InFirn_RG": [[213, "createlpda-100mhz-z10cm-infirn-rg"]], "createLPDA_100MHz_z1m_InFirn_RG": [[213, "createlpda-100mhz-z1m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_RG": [[213, "createlpda-100mhz-z2m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_Backlobe_NoRG": [[213, "createlpda-100mhz-z2m-infirn-backlobe-norg"]], "createLPDA_100MHz_z3m_InAir_RG": [[213, "createlpda-100mhz-z3m-inair-rg"]], "createLPDA_100MHz_z3m_InFirn_BoresightToBoundary": [[213, "createlpda-100mhz-z3m-infirn-boresighttoboundary"]], "createLPDA_100MHz_z3mAndLPDALen_InFirn_BoresightToBoundary": [[213, "createlpda-100mhz-z3mandlpdalen-infirn-boresighttoboundary"]], "createLPDA_100MHz_z5m_InFirn_RG": [[213, "createlpda-100mhz-z5m-infirn-rg"]], "createLPDA_100MHz_z10m_InFirn_RG": [[213, "createlpda-100mhz-z10m-infirn-rg"]], "createLPDA_100MHz_z100m_InFirn_RG": [[213, "createlpda-100mhz-z100m-infirn-rg"]], "createLPDA_100MHz_z200m_InFirn_RG": [[213, "createlpda-100mhz-z200m-infirn-rg"]], "createLPDA_100MHz_InfAir": [[213, "createlpda-100mhz-infair"]], "createLPDA_100MHz_z1cm_InAir_RG": [[213, "createlpda-100mhz-z1cm-inair-rg"]], "createLPDA_100MHz_z1m_InFirn_RG_v2": [[213, "createlpda-100mhz-z1m-infirn-rg-v2"]], "dip7cm_hpol_infFirn": [[213, "dip7cm-hpol-inffirn"]], "dip7cm_z260mm_InFirn_RG": [[213, "dip7cm-z260mm-infirn-rg"]], "dip7cm_z1m_InFirn_RG": [[213, "dip7cm-z1m-infirn-rg"]], "dip7cm_z2m_InFirn_RG": [[213, "dip7cm-z2m-infirn-rg"]], "dip7cm_z3m_InFirn_RG_NearHorizontalHD": [[213, "dip7cm-z3m-infirn-rg-nearhorizontalhd"]], "dip7cm_z5m_InFirn_RG": [[213, "dip7cm-z5m-infirn-rg"]], "dip7cm_z10m_InFirn_RG": [[213, "dip7cm-z10m-infirn-rg"]], "dip7cm_z200m_InFirn_RG": [[213, "dip7cm-z200m-infirn-rg"]], "dip7cm_z100m_InFirn_RG": [[213, "dip7cm-z100m-infirn-rg"]], "dip7cm_infAir_s12": [[213, "dip7cm-infair-s12"]], "dip7cm_z270mm_InAir": [[213, "dip7cm-z270mm-inair"]], "dip7cm_z1m_InAir": [[213, "dip7cm-z1m-inair"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD": [[213, "dip7cm-z1m-inair-rg-nearhorizontalhd"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD2": [[213, "dip7cm-z1m-inair-rg-nearhorizontalhd2"]], "dip7cm_z2m_InAir": [[213, "dip7cm-z2m-inair"]], "dip7cm_z5m_InAir": [[213, "dip7cm-z5m-inair"]], "RNOG_vpol_4inch_center_n1.73": [[213, "rnog-vpol-4inch-center-n1-73"]], "RNOG_vpol_4inch_half_n1.73": [[213, "rnog-vpol-4inch-half-n1-73"]], "RNOG_vpol_4inch_wall_n1.73": [[213, "rnog-vpol-4inch-wall-n1-73"]], "RNOG_quadslot_v1_n1.74": [[213, "rnog-quadslot-v1-n1-74"]], "RNOG_quadslot_v2_n1.74": [[213, "rnog-quadslot-v2-n1-74"]], "RNOG_quadslot_v2_rescaled_fineFreq": [[213, "rnog-quadslot-v2-rescaled-finefreq"]], "RNOG_quadslot_v3_air_rescaled_to_n1.74": [[213, "rnog-quadslot-v3-air-rescaled-to-n1-74"]], "SKALA_InfFirn": [[213, "skala-inffirn"]], "Additional Models": [[213, "additional-models"]], "RNOG_vpol_v1_n1.4": [[213, "rnog-vpol-v1-n1-4"]], "RNOG_vpol_v1_n1.73": [[213, "rnog-vpol-v1-n1-73"]], "fourslot_InfFirn": [[213, "fourslot-inffirn"]], "greenland_vpol_InfFirn": [[213, "greenland-vpol-inffirn"]], "trislot_RNOG": [[213, "trislot-rnog"]], "dipole_ARA_bicone_infinitefirn": [[213, "dipole-ara-bicone-infinitefirn"]], "XFDTD_Hpol_150mmHole_n1.78": [[213, "xfdtd-hpol-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78": [[213, "xfdtd-vpol-crossfeed-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78_InfFirn": [[213, "xfdtd-vpol-crossfeed-150mmhole-n1-78-inffirn"]], "Detector Description": [[214, "detector-description"], [217, "detector-description"]], "The Detector Class": [[214, "the-detector-class"]], "Detector Description Formats": [[214, "detector-description-formats"]], "DataBase": [[214, "database"]], "JSON": [[214, "json"]], "Dictionary": [[214, "dictionary"]], "Signal Chain Responses": [[214, "signal-chain-responses"]], "GenericDetector": [[214, "genericdetector"]], "Event-Specific Changes": [[214, "event-specific-changes"]], "Detector Description in Event Files": [[214, "detector-description-in-event-files"]], "Writing the Detector": [[214, "writing-the-detector"]], "Reading the Detector": [[214, "reading-the-detector"]], "Detector Viewer": [[214, "detector-viewer"]], "Properties of Detector Description": [[215, "properties-of-detector-description"]], "Antenna Table": [[215, "antenna-table"]], "Further Discussion on Antenna Coordinates": [[215, "further-discussion-on-antenna-coordinates"]], "ADC Table": [[215, "adc-table"]], "The RNO-G detector class and database interface": [[216, "the-rno-g-detector-class-and-database-interface"]], "Detector time and database time": [[216, "detector-time-and-database-time"]], "Database data structure": [[216, "database-data-structure"]], "Detector class": [[216, "detector-class"]], "Event Display": [[218, "event-display"]], "Data Structure": [[219, "data-structure"]], ".nur Files and How to Use Them": [[219, "nur-files-and-how-to-use-them"]], "Philosophy and Basic Structure": [[219, "philosophy-and-basic-structure"]], "Reading and Writing .nur Files": [[219, "reading-and-writing-nur-files"]], "Parameter Storage": [[219, "parameter-storage"]], "For Developers": [[219, null]], "List of Data Classes": [[219, "list-of-data-classes"]], "Event": [[219, "event"]], "Radio Shower": [[219, "radio-shower"]], "SimShower": [[219, "simshower"]], "Particle": [[219, "particle"]], "Station": [[219, "station"]], "Trigger": [[219, "trigger"]], "SimStation": [[219, "simstation"]], "BaseTrace": [[219, "basetrace"]], "Electric Field": [[219, "electric-field"]], "Channel": [[219, "channel"]], "Hybrid Information": [[219, "hybrid-information"]], "Hybrid Shower": [[219, "hybrid-shower"]], "Hybrid Detector": [[219, "hybrid-detector"]], "Use the Vertex Reconstruction Modules": [[220, "use-the-vertex-reconstruction-modules"]], "Creating Lookup Tables": [[220, "creating-lookup-tables"]], "Creating Electric Field Templates": [[220, "creating-electric-field-templates"]], "2D vs. 3D Vertex Reconstructor": [[220, "d-vs-3d-vertex-reconstructor"]], "Modules": [[222, "modules"]], "Basic Module Structure": [[222, "basic-module-structure"]], "Logging": [[222, "logging"]], "Utilities": [[223, "utilities"]], "Unit System": [[223, "unit-system"]], "Fourier Transformation": [[223, "fourier-transformation"]], "Metaclasses": [[223, "metaclasses"]], "Singleton": [[223, "singleton"]], "NuRadioReco Documentation": [[224, "nuradioreco-documentation"]], "Welcome to NuRadio\u2019s documentation!": [[225, "welcome-to-nuradio-s-documentation"]], "Contents:": [[225, null]], "Indices and tables": [[225, "indices-and-tables"]]}, "indexentries": {"nuradiomc.evtgen": [[5, "module-NuRadioMC.EvtGen"]], "module": [[5, "module-NuRadioMC.EvtGen"], [6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"], [7, "module-NuRadioMC.EvtGen.NuRadioProposal"], [8, "module-NuRadioMC.EvtGen.create_tau_tab"], [9, "module-NuRadioMC.EvtGen.generate_cylinder"], [10, "module-NuRadioMC.EvtGen.generate_unforced"], [11, "module-NuRadioMC.EvtGen.generator"], [12, "module-NuRadioMC.EvtGen.generator_ASCII"], [13, "module-NuRadioMC.EvtGen.generator_skeleton"], [14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"], [15, "module-NuRadioMC.EvtGen.proposal_table_manager"], [16, "module-NuRadioMC.EvtGen.readARAEventList"], [17, "module-NuRadioMC.EvtGen.readEventList_ASCII"], [18, "module-NuRadioMC.SignalGen"], [19, "module-NuRadioMC.SignalGen.ARZ"], [20, "module-NuRadioMC.SignalGen.ARZ.ARZ"], [21, "module-NuRadioMC.SignalGen.HCRB2017"], [22, "module-NuRadioMC.SignalGen.askaryan"], [23, "module-NuRadioMC.SignalGen.emitter"], [24, "module-NuRadioMC.SignalGen.parametrizations"], [25, "module-NuRadioMC.SignalProp"], [26, "module-NuRadioMC.SignalProp.analyticraytracing"], [27, "module-NuRadioMC.SignalProp.directRayTracing"], [28, "module-NuRadioMC.SignalProp.propagation"], [29, "module-NuRadioMC.SignalProp.propagation_base_class"], [30, "module-NuRadioMC.SignalProp.radioproparaytracing"], [31, "module-NuRadioMC.simulation"], [32, "module-NuRadioMC.simulation.simulation"], [33, "module-NuRadioMC.utilities"], [34, "module-NuRadioMC.utilities.Veff"], [35, "module-NuRadioMC.utilities.attenuation"], [36, "module-NuRadioMC.utilities.cross_sections"], [37, "module-NuRadioMC.utilities.dump_hdf5"], [38, "module-NuRadioMC.utilities.earth_attenuation"], [39, "module-NuRadioMC.utilities.fluxes"], [40, "module-NuRadioMC.utilities.inelasticities"], [41, "module-NuRadioMC.utilities.medium"], [42, "module-NuRadioMC.utilities.medium_base"], [43, "module-NuRadioMC.utilities.merge_hdf5"], [45, "module-NuRadioMC.utilities.plotting"], [46, "module-NuRadioMC.utilities.runner"], [47, "module-NuRadioMC.utilities.runner_example"], [48, "module-NuRadioMC.utilities.split_hdf5"], [63, "module-NuRadioReco.detector"], [64, "module-NuRadioReco.detector.ARA"], [65, "module-NuRadioReco.detector.ARA.analog_components"], [66, "module-NuRadioReco.detector.ARIANNA"], [67, "module-NuRadioReco.detector.ARIANNA.analog_components"], [68, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"], [69, "module-NuRadioReco.detector.RNO_G"], [70, "module-NuRadioReco.detector.RNO_G.analog_components"], [71, "module-NuRadioReco.detector.RNO_G.db_mongo_read"], [72, "module-NuRadioReco.detector.RNO_G.db_mongo_write"], [73, "module-NuRadioReco.detector.RNO_G.rnog_detector"], [74, "module-NuRadioReco.detector.amp"], [75, "module-NuRadioReco.detector.antennapattern"], [76, "module-NuRadioReco.detector.detector"], [77, "module-NuRadioReco.detector.detector_base"], [78, "module-NuRadioReco.detector.detector_sql"], [79, "module-NuRadioReco.detector.detector_sys_uncertainties"], [80, "module-NuRadioReco.detector.filterresponse"], [81, "module-NuRadioReco.detector.generic_detector"], [82, "module-NuRadioReco.detector.response"], [83, "module-NuRadioReco.detector.sql_to_json"], [84, "module-NuRadioReco.detector.test_detector_db"], [85, "module-NuRadioReco.detector.visualize_detector"], [86, "module-NuRadioReco.framework"], [87, "module-NuRadioReco.framework.base_shower"], [88, "module-NuRadioReco.framework.base_station"], [89, "module-NuRadioReco.framework.base_trace"], [90, "module-NuRadioReco.framework.channel"], [91, "module-NuRadioReco.framework.electric_field"], [92, "module-NuRadioReco.framework.event"], [93, "module-NuRadioReco.framework.hybrid_information"], [94, "module-NuRadioReco.framework.hybrid_shower"], [95, "module-NuRadioReco.framework.parameter_serialization"], [96, "module-NuRadioReco.framework.parameters"], [97, "module-NuRadioReco.framework.particle"], [98, "module-NuRadioReco.framework.radio_shower"], [99, "module-NuRadioReco.framework.sim_channel"], [100, "module-NuRadioReco.framework.sim_station"], [101, "module-NuRadioReco.framework.station"], [102, "module-NuRadioReco.framework.trigger"], [103, "module-NuRadioReco.modules"], [104, "module-NuRadioReco.modules.ARA"], [105, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"], [106, "module-NuRadioReco.modules.ARA.triggerSimulator"], [107, "module-NuRadioReco.modules.ARIANNA"], [108, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"], [109, "module-NuRadioReco.modules.RNO_G"], [110, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"], [111, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"], [112, "module-NuRadioReco.modules.analogToDigitalConverter"], [113, "module-NuRadioReco.modules.base"], [114, "module-NuRadioReco.modules.base.module"], [115, "module-NuRadioReco.modules.beamFormingDirectionFitter"], [116, "module-NuRadioReco.modules.channelAddCableDelay"], [117, "module-NuRadioReco.modules.channelAntennaDedispersion"], [118, "module-NuRadioReco.modules.channelBandPassFilter"], [119, "module-NuRadioReco.modules.channelGalacticNoiseAdder"], [120, "module-NuRadioReco.modules.channelGenericNoiseAdder"], [121, "module-NuRadioReco.modules.channelLengthAdjuster"], [122, "module-NuRadioReco.modules.channelResampler"], [123, "module-NuRadioReco.modules.channelSignalReconstructor"], [124, "module-NuRadioReco.modules.channelStopFilter"], [125, "module-NuRadioReco.modules.channelTemplateCorrelation"], [126, "module-NuRadioReco.modules.channelTimeOffsetCalculator"], [127, "module-NuRadioReco.modules.channelTimeWindow"], [128, "module-NuRadioReco.modules.correlationDirectionFitter"], [129, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"], [130, "module-NuRadioReco.modules.custom"], [131, "module-NuRadioReco.modules.custom.deltaT"], [132, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"], [133, "module-NuRadioReco.modules.efieldAirToIcePropagator"], [134, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"], [135, "module-NuRadioReco.modules.efieldTimeDirectionFitter"], [136, "module-NuRadioReco.modules.efieldToVoltageConverter"], [137, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"], [138, "module-NuRadioReco.modules.electricFieldBandPassFilter"], [139, "module-NuRadioReco.modules.electricFieldResampler"], [140, "module-NuRadioReco.modules.electricFieldSignalReconstructor"], [141, "module-NuRadioReco.modules.eventTypeIdentifier"], [142, "module-NuRadioReco.modules.iftElectricFieldReconstructor"], [143, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"], [144, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"], [145, "module-NuRadioReco.modules.io"], [146, "module-NuRadioReco.modules.io.NuRadioRecoio"], [147, "module-NuRadioReco.modules.io.RNO_G"], [148, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"], [149, "module-NuRadioReco.modules.io.araroot"], [151, "module-NuRadioReco.modules.io.coreas"], [152, "module-NuRadioReco.modules.io.coreas.coreas"], [153, "module-NuRadioReco.modules.io.coreas.readCoREAS"], [154, "module-NuRadioReco.modules.io.coreas.readCoREASShower"], [155, "module-NuRadioReco.modules.io.coreas.readCoREASStation"], [156, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"], [157, "module-NuRadioReco.modules.io.coreas.simulationSelector"], [158, "module-NuRadioReco.modules.io.eventReader"], [159, "module-NuRadioReco.modules.io.eventWriter"], [160, "module-NuRadioReco.modules.io.event_parser_factory"], [161, "module-NuRadioReco.modules.io.snowshovel"], [162, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"], [163, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"], [164, "module-NuRadioReco.modules.measured_noise"], [165, "module-NuRadioReco.modules.measured_noise.ARIANNA"], [166, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"], [167, "module-NuRadioReco.modules.measured_noise.RNO_G"], [168, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"], [169, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"], [170, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"], [171, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"], [172, "module-NuRadioReco.modules.neutrinoVertexReconstructor"], [173, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"], [174, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"], [175, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"], [176, "module-NuRadioReco.modules.phasedarray"], [177, "module-NuRadioReco.modules.phasedarray.triggerSimulator"], [178, "module-NuRadioReco.modules.sphericalWaveFitter"], [179, "module-NuRadioReco.modules.templateDirectionFitter"], [180, "module-NuRadioReco.modules.trigger"], [181, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"], [182, "module-NuRadioReco.modules.trigger.envelopeTrigger"], [183, "module-NuRadioReco.modules.trigger.highLowThreshold"], [184, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"], [185, "module-NuRadioReco.modules.trigger.powerIntegration"], [186, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"], [187, "module-NuRadioReco.modules.trigger.simpleThreshold"], [188, "module-NuRadioReco.modules.triggerTimeAdjuster"], [189, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"], [190, "module-NuRadioReco.modules.voltageToEfieldConverter"], [191, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"], [192, "module-NuRadioReco.utilities"], [193, "module-NuRadioReco.utilities.analytic_pulse"], [194, "module-NuRadioReco.utilities.bandpass_filter"], [195, "module-NuRadioReco.utilities.cr_flux"], [196, "module-NuRadioReco.utilities.diodeSimulator"], [197, "module-NuRadioReco.utilities.fft"], [198, "module-NuRadioReco.utilities.geometryUtilities"], [199, "module-NuRadioReco.utilities.ice"], [200, "module-NuRadioReco.utilities.interferometry"], [201, "module-NuRadioReco.utilities.io_utilities"], [202, "module-NuRadioReco.utilities.logging"], [203, "module-NuRadioReco.utilities.metaclasses"], [204, "module-NuRadioReco.utilities.noise"], [205, "module-NuRadioReco.utilities.particle_names"], [206, "module-NuRadioReco.utilities.templates"], [207, "module-NuRadioReco.utilities.timing"], [208, "module-NuRadioReco.utilities.traceWindows"], [209, "module-NuRadioReco.utilities.trace_utilities"], [210, "module-NuRadioReco.utilities.units"], [211, "module-NuRadioReco.utilities.version"]], "nuradiomc.evtgen.nuradiomctoarasim": [[6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "nuradiomc.evtgen.nuradioproposal": [[7, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "proposalfunctions (class in nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions"]], "secondaryproperties (class in nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.SecondaryProperties"]], "get_decays() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_decays"]], "get_secondaries_array() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_secondaries_array"]], "is_em_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_em_primary"]], "is_had_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_had_primary"]], "is_shower_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_shower_primary"]], "particle_code() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.particle_code"]], "nuradiomc.evtgen.create_tau_tab": [[8, "module-NuRadioMC.EvtGen.create_tau_tab"]], "nuradiomc.evtgen.generate_cylinder": [[9, "module-NuRadioMC.EvtGen.generate_cylinder"]], "nuradiomc.evtgen.generate_unforced": [[10, "module-NuRadioMC.EvtGen.generate_unforced"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generate_unforced)": [[10, "NuRadioMC.EvtGen.generate_unforced.generate_eventlist_cylinder"]], "nuradiomc.evtgen.generator": [[11, "module-NuRadioMC.EvtGen.generator"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_eventlist_cylinder"]], "generate_surface_muons() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_surface_muons"]], "generate_vertex_positions() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_vertex_positions"]], "get_energies() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_energies"]], "get_energy_from_flux() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_energy_from_flux"]], "get_intersection_volume_neutrino() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_intersection_volume_neutrino"]], "get_product_position_time() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_product_position_time"]], "get_tau_95_length() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_tau_95_length"]], "ice_cube_nu_fit() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit"]], "ice_cube_nu_fit_2022() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit_2022"]], "intersection_box_ray() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.intersection_box_ray"]], "is_in_fiducial_volume() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.is_in_fiducial_volume"]], "load_input_hdf5() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.load_input_hdf5"]], "mask_arrival_azimuth() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.mask_arrival_azimuth"]], "primary_energy_from_deposited() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.primary_energy_from_deposited"]], "set_volume_attributes() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.set_volume_attributes"]], "write_events_to_hdf5() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.write_events_to_hdf5"]], "nuradiomc.evtgen.generator_ascii": [[12, "module-NuRadioMC.EvtGen.generator_ASCII"]], "generate_eventlist() (in module nuradiomc.evtgen.generator_ascii)": [[12, "NuRadioMC.EvtGen.generator_ASCII.generate_eventlist"]], "nuradiomc.evtgen.generator_skeleton": [[13, "module-NuRadioMC.EvtGen.generator_skeleton"]], "generate_my_events() (in module nuradiomc.evtgen.generator_skeleton)": [[13, "NuRadioMC.EvtGen.generator_skeleton.generate_my_events"]], "nuradiomc.evtgen.hdf5_to_ascii": [[14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "nuradiomc.evtgen.proposal_table_manager": [[15, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "download_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.download_proposal_tables"]], "get_compiler() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.get_compiler"]], "produce_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables"]], "produce_proposal_tables_tarball() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables_tarball"]], "nuradiomc.evtgen.readaraeventlist": [[16, "module-NuRadioMC.EvtGen.readARAEventList"]], "convert_to_hdf5() (in module nuradiomc.evtgen.readaraeventlist)": [[16, "NuRadioMC.EvtGen.readARAEventList.convert_to_hdf5"]], "read_ara_eventlist() (in module nuradiomc.evtgen.readaraeventlist)": [[16, "NuRadioMC.EvtGen.readARAEventList.read_ARA_eventlist"]], "nuradiomc.evtgen.readeventlist_ascii": [[17, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "read_eventlist() (in module nuradiomc.evtgen.readeventlist_ascii)": [[17, "NuRadioMC.EvtGen.readEventList_ASCII.read_eventlist"]], "nuradiomc.signalgen": [[18, "module-NuRadioMC.SignalGen"]], "nuradiomc.signalgen.arz": [[19, "module-NuRadioMC.SignalGen.ARZ"]], "arz (class in nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ"]], "arz_tabulated (class in nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated"]], "nuradiomc.signalgen.arz.arz": [[20, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "em_fraction() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.em_fraction"]], "get_last_shower_profile_id() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_last_shower_profile_id"]], "get_shower_profile() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_shower_profile"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_time_trace"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.get_time_trace"]], "get_vector_potential() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential"]], "get_vector_potential() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential"]], "get_vector_potential_fast() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential_fast"]], "get_vector_potential_numba() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential_numba"]], "set_interpolation_factor() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor"]], "set_interpolation_factor2() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor2"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_seed"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.set_seed"]], "theta_to_thetaprime() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.theta_to_thetaprime"]], "thetaprime_to_theta() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.thetaprime_to_theta"]], "nuradiomc.signalgen.hcrb2017": [[21, "module-NuRadioMC.SignalGen.HCRB2017"]], "gauss() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.gauss"]], "get_n_askdeptha() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_N_AskDepthA"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_time_trace"]], "nuradiomc.signalgen.askaryan": [[22, "module-NuRadioMC.SignalGen.askaryan"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.get_time_trace"]], "set_log_level() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.set_log_level"]], "nuradiomc.signalgen.emitter": [[23, "module-NuRadioMC.SignalGen.emitter"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.emitter)": [[23, "NuRadioMC.SignalGen.emitter.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.emitter)": [[23, "NuRadioMC.SignalGen.emitter.get_time_trace"]], "nuradiomc.signalgen.parametrizations": [[24, "module-NuRadioMC.SignalGen.parametrizations"]], "get_parametrizations() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.get_parametrizations"]], "get_time_trace() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.get_time_trace"]], "set_log_level() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.set_log_level"]], "nuradiomc.signalprop": [[25, "module-NuRadioMC.SignalProp"]], "nuradiomc.signalprop.analyticraytracing": [[26, "module-NuRadioMC.SignalProp.analyticraytracing"]], "angular_diff() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.angular_diff"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.apply_propagation_effects"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.apply_propagation_effects"]], "determine_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.determine_solution_type"]], "ds() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.ds"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.find_solutions"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.find_solutions"]], "get_c0_from_log() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C0_from_log"]], "get_c_0_from_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_0_from_angle"]], "get_c_1() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_1"]], "get_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle"]], "get_angle_from_c_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_C_0"]], "get_angle_from_logc_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_logC_0"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_attenuation"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation"]], "get_attenuation_along_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation_along_path"]], "get_c() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_c"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_config"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_config"]], "get_delta_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_delta_y"]], "get_focusing() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_focusing"]], "get_gamma() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_gamma"]], "get_launch_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_angle"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_launch_vector"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_vector"]], "get_n_steps() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_n_steps"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_output_parameters"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_output_parameters"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path_length"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length"]], "get_path_length_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length_analytic"]], "get_path_reflections() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_reflections"]], "get_path_segments() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_segments"]], "get_ray_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_ray_path"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_raytracing_output"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_raytracing_output"]], "get_receive_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_angle"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_receive_vector"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_reflection_angle"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_reflection_angle"]], "get_reflection_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_reflection_point"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_results"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_results"]], "get_segments() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_segments"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_solution_type"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_solution_type"]], "get_surf_skim_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surf_skim_angle"]], "get_surface_pulse() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surface_pulse"]], "get_tof_for_straight_line() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_tof_for_straight_line"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_travel_time"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time"]], "get_travel_time_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time_analytic"]], "get_turning_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_turning_point"]], "get_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y"]], "get_y_diff() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y_diff"]], "get_y_turn() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y_turn"]], "get_y_with_z_mirror() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y_with_z_mirror"]], "get_z_deep() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_z_deep"]], "get_z_from_n() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_from_n"]], "get_z_mirrored() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_mirrored"]], "get_z_unmirrored() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_unmirrored"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.has_solution"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.has_solution"]], "is_in_refraction_zone() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.is_in_refraction_zone"]], "n() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.n"]], "obj_delta_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.obj_delta_y"]], "obj_delta_y_square() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.obj_delta_y_square"]], "plot_result() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.plot_result"]], "ray_tracing (class in nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing"]], "ray_tracing_2d (class in nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.reset_solutions"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.reset_solutions"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_config"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_config"]], "set_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_solution"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_start_and_end_point"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_start_and_end_point"]], "speed_of_light (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.speed_of_light"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.use_optional_function"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.use_optional_function"]], "nuradiomc.signalprop.directraytracing": [[27, "module-NuRadioMC.SignalProp.directRayTracing"]], "apply_propagation_effects() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.apply_propagation_effects"]], "direct_ray_tracing (class in nuradiomc.signalprop.directraytracing)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing"]], "find_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_config"]], "get_launch_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path"]], "get_path_length() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.has_solution"]], "reset_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.use_optional_function"]], "nuradiomc.signalprop.propagation": [[28, "module-NuRadioMC.SignalProp.propagation"]], "get_propagation_module() (in module nuradiomc.signalprop.propagation)": [[28, "NuRadioMC.SignalProp.propagation.get_propagation_module"]], "nuradiomc.signalprop.propagation_base_class": [[29, "module-NuRadioMC.SignalProp.propagation_base_class"]], "apply_propagation_effects() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.apply_propagation_effects"]], "find_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_attenuation"]], "get_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_config"]], "get_launch_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_output_parameters"]], "get_path() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path"]], "get_path_length() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_results"]], "get_solution_type() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_travel_time"]], "has_solution() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.has_solution"]], "ray_tracing_base (class in nuradiomc.signalprop.propagation_base_class)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base"]], "reset_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.reset_solutions"]], "set_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.use_optional_function"]], "nuradiomc.signalprop.radioproparaytracing": [[30, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "activate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.activate_auto_step_size"]], "apply_propagation_effects() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.apply_propagation_effects"]], "deactivate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.deactivate_auto_step_size"]], "delta_theta_bottom() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_bottom"]], "delta_theta_direct() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_direct"]], "delta_theta_reflective() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_reflective"]], "find_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_config"]], "get_correction_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_path_length"]], "get_correction_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_travel_time"]], "get_focusing() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_focusing"]], "get_frequencies_for_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_frequencies_for_attenuation"]], "get_launch_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path"]], "get_path_candidate() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_candidate"]], "get_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.has_solution"]], "radiopropa_ray_tracing (class in nuradiomc.signalprop.radioproparaytracing)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing"]], "raytracer_iterative() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_iterative"]], "raytracer_minimizer() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_minimizer"]], "reset_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_config"]], "set_cut_viewing_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_cut_viewing_angle"]], "set_iterative_sphere_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_sphere_sizes"]], "set_iterative_step_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_step_sizes"]], "set_maximum_trajectory_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_maximum_trajectory_length"]], "set_minimizer_tolerance() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_minimizer_tolerance"]], "set_shower_axis() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_shower_axis"]], "set_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_solutions"]], "set_start_and_end_point() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.use_optional_function"]], "nuradiomc.simulation": [[31, "module-NuRadioMC.simulation"]], "nuradiomc.simulation.simulation": [[32, "module-NuRadioMC.simulation.simulation"]], "calculate_veff() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.calculate_Veff"]], "get_vrms() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.get_Vrms"]], "get_bandwidth() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.get_bandwidth"]], "get_sampling_rate() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.get_sampling_rate"]], "integrated_channel_response (nuradiomc.simulation.simulation.simulation property)": [[32, "NuRadioMC.simulation.simulation.simulation.integrated_channel_response"]], "merge_config() (in module nuradiomc.simulation.simulation)": [[32, "NuRadioMC.simulation.simulation.merge_config"]], "pretty_time_delta() (in module nuradiomc.simulation.simulation)": [[32, "NuRadioMC.simulation.simulation.pretty_time_delta"]], "run() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.run"]], "simulation (class in nuradiomc.simulation.simulation)": [[32, "NuRadioMC.simulation.simulation.simulation"]], "nuradiomc.utilities": [[33, "module-NuRadioMC.utilities"]], "fc_limits() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.FC_limits"]], "nuradiomc.utilities.veff": [[34, "module-NuRadioMC.utilities.Veff"]], "export() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.export"]], "get_veff_aeff() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff"]], "get_veff_aeff_array() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff_array"]], "get_veff_aeff_single() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single"]], "get_veff_aeff_single_wrapper() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single_wrapper"]], "get_veff_water_equivalent() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_water_equivalent"]], "get_index() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_index"]], "get_veff_output() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_veff_output"]], "remove_duplicate_triggers() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.remove_duplicate_triggers"]], "nuradiomc.utilities.attenuation": [[35, "module-NuRadioMC.utilities.attenuation"]], "fit_gl1() (in module nuradiomc.utilities.attenuation)": [[35, "NuRadioMC.utilities.attenuation.fit_GL1"]], "get_attenuation_length() (in module nuradiomc.utilities.attenuation)": [[35, "NuRadioMC.utilities.attenuation.get_attenuation_length"]], "get_temperature() (in module nuradiomc.utilities.attenuation)": [[35, "NuRadioMC.utilities.attenuation.get_temperature"]], "nuradiomc.utilities.cross_sections": [[36, "module-NuRadioMC.utilities.cross_sections"]], "csms() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.csms"]], "get_interaction_length() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.get_interaction_length"]], "get_nu_cross_section() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.get_nu_cross_section"]], "param() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.param"]], "nuradiomc.utilities.dump_hdf5": [[37, "module-NuRadioMC.utilities.dump_hdf5"]], "dump() (in module nuradiomc.utilities.dump_hdf5)": [[37, "NuRadioMC.utilities.dump_hdf5.dump"]], "coremantlecrustmodel (class in nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel"]], "nuradiomc.utilities.earth_attenuation": [[38, "module-NuRadioMC.utilities.earth_attenuation"]], "prem (class in nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM"]], "densities (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.densities"]], "densities (nuradiomc.utilities.earth_attenuation.prem attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.densities"]], "density() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.density"]], "density() (nuradiomc.utilities.earth_attenuation.prem method)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.density"]], "earth_radius (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.earth_radius"]], "earth_radius (nuradiomc.utilities.earth_attenuation.prem attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.earth_radius"]], "get_core_mantle_crust_weight() (in module nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.get_core_mantle_crust_weight"]], "get_simple_weight() (in module nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.get_simple_weight"]], "get_weight() (in module nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.get_weight"]], "radii (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.radii"]], "radii (nuradiomc.utilities.earth_attenuation.prem attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.radii"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.slant_depth"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.prem method)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.slant_depth"]], "nuradiomc.utilities.fluxes": [[39, "module-NuRadioMC.utilities.fluxes"]], "get_exposure() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_exposure"]], "get_fluence_limit() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_fluence_limit"]], "get_integrated_exposure() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_integrated_exposure"]], "get_limit_e1_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_e1_flux"]], "get_limit_e2_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_e2_flux"]], "get_limit_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_flux"]], "get_limit_from_aeff() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_from_aeff"]], "get_number_of_events_for_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_number_of_events_for_flux"]], "nuradiomc.utilities.inelasticities": [[40, "module-NuRadioMC.utilities.inelasticities"]], "get_ccnc() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.get_ccnc"]], "get_neutrino_inelasticity() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.get_neutrino_inelasticity"]], "inelasticity_tau_decay() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.inelasticity_tau_decay"]], "random_tau_branch() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.random_tau_branch"]], "rejection_sampling() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.rejection_sampling"]], "arasim_southpole (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole"]], "nuradiomc.utilities.medium": [[41, "module-NuRadioMC.utilities.medium"]], "add_reflective_bottom() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.add_reflective_bottom"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_average_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_gradient_of_index_of_refraction"]], "get_ice_model() (in module nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.get_ice_model"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_index_of_refraction"]], "greenland_firn (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.greenland_firn"]], "greenland_perturbation (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation"]], "greenland_simple (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.greenland_simple"]], "mooresbay_simple (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple"]], "mooresbay_simple_2 (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.set_ice_model_radiopropa"]], "southpole_2015 (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.southpole_2015"]], "southpole_simple (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.southpole_simple"]], "uniform_ice (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.uniform_ice"]], "icemodel (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.IceModel"]], "icemodelsimple (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple"]], "nuradiomc.utilities.medium_base": [[42, "module-NuRadioMC.utilities.medium_base"]], "radiopropaicewrapper (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper"]], "scalarfieldbuilder (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder"]], "add_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.add_module"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.add_reflective_bottom"]], "getgradient() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[42, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getGradient"]], "getvalue() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[42, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getValue"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_average_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_gradient_of_index_of_refraction"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_index_of_refraction"]], "get_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_module"]], "get_modules() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_modules"]], "get_scalar_field() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_scalar_field"]], "remove_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.remove_module"]], "replace_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.replace_module"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.set_ice_model_radiopropa"]], "nuradiomc.utilities.merge_hdf5": [[43, "module-NuRadioMC.utilities.merge_hdf5"]], "merge2() (in module nuradiomc.utilities.merge_hdf5)": [[43, "NuRadioMC.utilities.merge_hdf5.merge2"]], "nuradiomc.utilities.plotting": [[45, "module-NuRadioMC.utilities.plotting"]], "plot_vertex_distribution() (in module nuradiomc.utilities.plotting)": [[45, "NuRadioMC.utilities.plotting.plot_vertex_distribution"]], "nuradiomc.utilities.runner": [[46, "module-NuRadioMC.utilities.runner"]], "nuradiomcrunner (class in nuradiomc.utilities.runner)": [[46, "NuRadioMC.utilities.runner.NuRadioMCRunner"]], "get_outputfilename() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[46, "NuRadioMC.utilities.runner.NuRadioMCRunner.get_outputfilename"]], "run() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[46, "NuRadioMC.utilities.runner.NuRadioMCRunner.run"]], "nuradiomc.utilities.runner_example": [[47, "module-NuRadioMC.utilities.runner_example"]], "task() (in module nuradiomc.utilities.runner_example)": [[47, "NuRadioMC.utilities.runner_example.task"]], "nuradiomc.utilities.split_hdf5": [[48, "module-NuRadioMC.utilities.split_hdf5"]], "split_hdf5_input_file() (in module nuradiomc.utilities.split_hdf5)": [[48, "NuRadioMC.utilities.split_hdf5.split_hdf5_input_file"]], "nuradioreco.detector": [[63, "module-NuRadioReco.detector"]], "nuradioreco.detector.ara": [[64, "module-NuRadioReco.detector.ARA"]], "nuradioreco.detector.ara.analog_components": [[65, "module-NuRadioReco.detector.ARA.analog_components"]], "get_system_response() (in module nuradioreco.detector.ara.analog_components)": [[65, "NuRadioReco.detector.ARA.analog_components.get_system_response"]], "load_system_response() (in module nuradioreco.detector.ara.analog_components)": [[65, "NuRadioReco.detector.ARA.analog_components.load_system_response"]], "nuradioreco.detector.arianna": [[66, "module-NuRadioReco.detector.ARIANNA"]], "nuradioreco.detector.arianna.analog_components": [[67, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "get_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_amplifier_response"]], "get_available_amplifiers() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_available_amplifiers"]], "get_cable_response() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response"]], "get_cable_response_parametrized() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response_parametrized"]], "load_amp_measurement() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.load_amp_measurement"]], "load_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.load_amplifier_response"]], "nuradioreco.detector.arianna.preprocessampresponses": [[68, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "preprocess_300amp() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[68, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.preprocess_300Amp"]], "save_preprocessed_amps() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[68, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.save_preprocessed_Amps"]], "nuradioreco.detector.rno_g": [[69, "module-NuRadioReco.detector.RNO_G"]], "nuradioreco.detector.rno_g.analog_components": [[70, "module-NuRadioReco.detector.RNO_G.analog_components"]], "get_available_amplifiers() (in module nuradioreco.detector.rno_g.analog_components)": [[70, "NuRadioReco.detector.RNO_G.analog_components.get_available_amplifiers"]], "load_amp_response() (in module nuradioreco.detector.rno_g.analog_components)": [[70, "NuRadioReco.detector.RNO_G.analog_components.load_amp_response"]], "database (class in nuradioreco.detector.rno_g.db_mongo_read)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database"]], "nuradioreco.detector.rno_g.db_mongo_read": [[71, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "dictionarize_nested_lists() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists"]], "dictionarize_nested_lists_as_tuples() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists_as_tuples"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.query_modification_timestamps_per_station"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[71, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_detector_time"]], "database (class in nuradioreco.detector.rno_g.db_mongo_write)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database"]], "nuradioreco.detector.rno_g.db_mongo_write": [[72, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "add_entry_to_database() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_entry_to_database"]], "add_general_channel_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_channel_info_to_station"]], "add_general_device_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_device_info_to_station"]], "add_general_station_info() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_station_info"]], "add_measurement_protocol() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_measurement_protocol"]], "change_primary_antenna_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_antenna_measurement"]], "change_primary_cable_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_cable_measurement"]], "change_primary_downhole_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_downhole_measurement"]], "change_primary_drab_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_drab_measurement"]], "change_primary_iglu_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_iglu_measurement"]], "change_primary_surface_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_surface_measurement"]], "clone_collection_to_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.clone_collection_to_collection"]], "create_empty_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.create_empty_collection"]], "decommission_a_channel() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_channel"]], "decommission_a_device() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_device"]], "decommission_a_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_station"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.query_modification_timestamps_per_station"]], "rename_database_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.rename_database_collection"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_detector_time"]], "set_not_working() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_not_working"]], "update_current_primary() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.update_current_primary"]], "detector (class in nuradioreco.detector.rno_g.rnog_detector)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector"]], "nuradioreco.detector.rno_g.rnog_detector": [[73, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "export() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export"]], "export_as_string() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export_as_string"]], "get_absolute_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_absolute_position"]], "get_amplifier_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_amplifier_response"]], "get_antenna_model() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_cable_delay"]], "get_channel() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel"]], "get_channel_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_ids"]], "get_channel_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_orientation"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_signal_chain"]], "get_detector_time() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_detector_time"]], "get_devices() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_devices"]], "get_noise_temperature() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position"]], "get_relative_position_device() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position_device"]], "get_sampling_frequency() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_sampling_frequency"]], "get_signal_chain_components() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_components"]], "get_signal_chain_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_response"]], "get_site() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_site"]], "get_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station"]], "get_station_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station_ids"]], "get_time_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_time_delay"]], "has_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.is_channel_noiseless"]], "update() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[73, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.update"]], "nuradioreco.detector.amp": [[74, "module-NuRadioReco.detector.amp"]], "get_amp_response() (in module nuradioreco.detector.amp)": [[74, "NuRadioReco.detector.amp.get_amp_response"]], "antennapattern (class in nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.AntennaPattern"]], "antennapatternanalytic (class in nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic"]], "antennapatternbase (class in nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.AntennaPatternBase"]], "antennapatternprovider (class in nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.AntennaPatternProvider"]], "nuradioreco.detector.antennapattern": [[75, "module-NuRadioReco.detector.antennapattern"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapattern method)": [[75, "NuRadioReco.detector.antennapattern.AntennaPattern.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[75, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternbase method)": [[75, "NuRadioReco.detector.antennapattern.AntennaPatternBase.get_antenna_response_vectorized"]], "get_group_delay() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.get_group_delay"]], "get_pickle_antenna_response() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.get_pickle_antenna_response"]], "interpolate_linear() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.interpolate_linear"]], "interpolate_linear_vectorized() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.interpolate_linear_vectorized"]], "load_antenna_pattern() (nuradioreco.detector.antennapattern.antennapatternprovider method)": [[75, "NuRadioReco.detector.antennapattern.AntennaPatternProvider.load_antenna_pattern"]], "parametric_phase() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[75, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.parametric_phase"]], "parse_aera_xml_file() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.parse_AERA_XML_file"]], "parse_ara_file() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.parse_ARA_file"]], "parse_hfss_file() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.parse_HFSS_file"]], "parse_rnog_xfdtd_file() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.parse_RNOG_XFDTD_file"]], "parse_wipld_file() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.parse_WIPLD_file"]], "preprocess_aera() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.preprocess_AERA"]], "preprocess_ara() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.preprocess_ARA"]], "preprocess_hfss() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.preprocess_HFSS"]], "preprocess_rnog_xfdtd() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.preprocess_RNOG_XFDTD"]], "preprocess_wipld() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.preprocess_WIPLD"]], "preprocess_wipld_old() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.preprocess_WIPLD_old"]], "preprocess_xfdtd() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.preprocess_XFDTD"]], "save_preprocessed_wipld() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD"]], "save_preprocessed_wipld_forara() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_forARA"]], "save_preprocessed_wipld_old() (in module nuradioreco.detector.antennapattern)": [[75, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_old"]], "detector() (in module nuradioreco.detector.detector)": [[76, "NuRadioReco.detector.detector.Detector"]], "nuradioreco.detector.detector": [[76, "module-NuRadioReco.detector.detector"]], "find_path() (in module nuradioreco.detector.detector)": [[76, "NuRadioReco.detector.detector.find_path"]], "find_reference_entry() (in module nuradioreco.detector.detector)": [[76, "NuRadioReco.detector.detector.find_reference_entry"]], "datetimeserializer (class in nuradioreco.detector.detector_base)": [[77, "NuRadioReco.detector.detector_base.DateTimeSerializer"]], "detectorbase (class in nuradioreco.detector.detector_base)": [[77, "NuRadioReco.detector.detector_base.DetectorBase"]], "nuradioreco.detector.detector_base": [[77, "module-NuRadioReco.detector.detector_base"]], "obj_class (nuradioreco.detector.detector_base.datetimeserializer attribute)": [[77, "NuRadioReco.detector.detector_base.DateTimeSerializer.OBJ_CLASS"]], "buffer_db() (in module nuradioreco.detector.detector_base)": [[77, "NuRadioReco.detector.detector_base.buffer_db"]], "decode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[77, "NuRadioReco.detector.detector_base.DateTimeSerializer.decode"]], "encode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[77, "NuRadioReco.detector.detector_base.DateTimeSerializer.encode"]], "get_absolute_position() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_channel"]], "get_channel_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_detector_time"]], "get_device() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_device"]], "get_device_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_station"]], "get_station_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.is_channel_noiseless"]], "update() (nuradioreco.detector.detector_base.detectorbase method)": [[77, "NuRadioReco.detector.detector_base.DetectorBase.update"]], "detector (class in nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.Detector"]], "nuradioreco.detector.detector_sql": [[78, "module-NuRadioReco.detector.detector_sql"]], "get_absolute_position_site() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_absolute_position_site"]], "get_amplifier_type() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_amplifier_type"]], "get_amplifier_type() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_antenna_model"]], "get_antenna_model_file() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_antenna_model_file"]], "get_antenna_orientation() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_antenna_type"]], "get_antenna_type() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_cable_delay"]], "get_cable_delays() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_cable_delays"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_cable_type_and_length"]], "get_everything() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_everything"]], "get_everything_channels() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_everything_channels"]], "get_everything_positions() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_everything_positions"]], "get_everything_stations() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_everything_stations"]], "get_number_of_channels() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_number_of_channels"]], "get_number_of_channels() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_relative_position"]], "get_relative_position() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_relative_position"]], "get_relative_positions() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_relative_positions"]], "get_relative_positions() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_relative_positions"]], "get_sampling_frequency() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.get_site"]], "get_station_type() (in module nuradioreco.detector.detector_sql)": [[78, "NuRadioReco.detector.detector_sql.get_station_type"]], "update() (nuradioreco.detector.detector_sql.detector method)": [[78, "NuRadioReco.detector.detector_sql.Detector.update"]], "detectorsysuncertainties (class in nuradioreco.detector.detector_sys_uncertainties)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties"]], "nuradioreco.detector.detector_sys_uncertainties": [[79, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "get_absolute_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel"]], "get_channel_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_detector_time"]], "get_device() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device"]], "get_device_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station"]], "get_station_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.is_channel_noiseless"]], "reset_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_orientation_offsets"]], "reset_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_position_offsets"]], "set_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_orientation_offsets"]], "set_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_position_offsets"]], "update() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[79, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.update"]], "nuradioreco.detector.filterresponse": [[80, "module-NuRadioReco.detector.filterresponse"]], "get_filter_response() (in module nuradioreco.detector.filterresponse)": [[80, "NuRadioReco.detector.filterresponse.get_filter_response"]], "get_filter_response_mini_circuits() (in module nuradioreco.detector.filterresponse)": [[80, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits"]], "get_filter_response_mini_circuits2() (in module nuradioreco.detector.filterresponse)": [[80, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits2"]], "genericdetector (class in nuradioreco.detector.generic_detector)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector"]], "nuradioreco.detector.generic_detector": [[81, "module-NuRadioReco.detector.generic_detector"]], "add_generic_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.add_generic_station"]], "add_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.add_station_properties_for_event"]], "get_absolute_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel"]], "get_channel_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel_ids"]], "get_default_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel"]], "get_default_channel_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel_id"]], "get_default_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station"]], "get_default_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station_id"]], "get_detector_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_detector_time"]], "get_device() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_device"]], "get_device_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_parallel_channels"]], "get_raw_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_channel"]], "get_raw_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_station"]], "get_reference_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station"]], "get_reference_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_id"]], "get_reference_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_ids"]], "get_reference_stations() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_stations"]], "get_relative_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_site"]], "get_site_coordinates() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_site_coordinates"]], "get_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_station"]], "get_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_ids"]], "get_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_properties_for_event"]], "get_unique_time_periods() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.get_unique_time_periods"]], "has_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.is_channel_noiseless"]], "set_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.set_event"]], "update() (nuradioreco.detector.generic_detector.genericdetector method)": [[81, "NuRadioReco.detector.generic_detector.GenericDetector.update"]], "nuradioreco.detector.response": [[82, "module-NuRadioReco.detector.response"]], "response (class in nuradioreco.detector.response)": [[82, "NuRadioReco.detector.response.Response"]], "get_names() (nuradioreco.detector.response.response method)": [[82, "NuRadioReco.detector.response.Response.get_names"]], "get_time_delay() (nuradioreco.detector.response.response method)": [[82, "NuRadioReco.detector.response.Response.get_time_delay"]], "plot() (nuradioreco.detector.response.response method)": [[82, "NuRadioReco.detector.response.Response.plot"]], "subtract_time_delay_from_response() (in module nuradioreco.detector.response)": [[82, "NuRadioReco.detector.response.subtract_time_delay_from_response"]], "nuradioreco.detector.sql_to_json": [[83, "module-NuRadioReco.detector.sql_to_json"]], "nuradioreco.detector.test_detector_db": [[84, "module-NuRadioReco.detector.test_detector_db"]], "nuradioreco.detector.visualize_detector": [[85, "module-NuRadioReco.detector.visualize_detector"]], "nuradioreco.framework": [[86, "module-NuRadioReco.framework"]], "baseshower (class in nuradioreco.framework.base_shower)": [[87, "NuRadioReco.framework.base_shower.BaseShower"]], "nuradioreco.framework.base_shower": [[87, "module-NuRadioReco.framework.base_shower"]], "deserialize() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.deserialize"]], "get_axis() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.get_id"]], "get_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.get_parameter"]], "has_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.has_parameter"]], "serialize() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.serialize"]], "set_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[87, "NuRadioReco.framework.base_shower.BaseShower.set_parameter"]], "basestation (class in nuradioreco.framework.base_station)": [[88, "NuRadioReco.framework.base_station.BaseStation"]], "nuradioreco.framework.base_station": [[88, "module-NuRadioReco.framework.base_station"]], "add_electric_field() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.add_electric_field"]], "deserialize() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameters"]], "get_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields_for_channels"]], "get_id() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_id"]], "get_parameter() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_parameters"]], "get_station_time() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_trigger"]], "get_triggers() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.has_parameter"]], "has_trigger() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.has_trigger"]], "has_triggered() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.is_neutrino"]], "remove_parameter() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.remove_triggers"]], "serialize() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_parameter_error"]], "set_station_time() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_station_time"]], "set_trigger() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_trigger"]], "set_triggered() (nuradioreco.framework.base_station.basestation method)": [[88, "NuRadioReco.framework.base_station.BaseStation.set_triggered"]], "basetrace (class in nuradioreco.framework.base_trace)": [[89, "NuRadioReco.framework.base_trace.BaseTrace"]], "nuradioreco.framework.base_trace": [[89, "module-NuRadioReco.framework.base_trace"]], "add_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.apply_time_shift"]], "deserialize() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.deserialize"]], "get_filtered_trace() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_number_of_samples"]], "get_sampling_rate() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_sampling_rate"]], "get_times() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_times"]], "get_trace() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_trace"]], "get_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.get_trace_start_time"]], "resample() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.resample"]], "serialize() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.set_frequency_spectrum"]], "set_trace() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.set_trace"]], "set_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[89, "NuRadioReco.framework.base_trace.BaseTrace.set_trace_start_time"]], "channel (class in nuradioreco.framework.channel)": [[90, "NuRadioReco.framework.channel.Channel"]], "nuradioreco.framework.channel": [[90, "module-NuRadioReco.framework.channel"]], "add_trace_start_time() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.apply_time_shift"]], "deserialize() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_id"]], "get_number_of_samples() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_parameter"]], "get_parameters() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_parameters"]], "get_sampling_rate() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_sampling_rate"]], "get_times() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_times"]], "get_trace() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.get_trace_start_time"]], "has_parameter() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.has_parameter"]], "resample() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.resample"]], "serialize() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.set_parameter"]], "set_trace() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.channel.channel method)": [[90, "NuRadioReco.framework.channel.Channel.set_trace_start_time"]], "electricfield (class in nuradioreco.framework.electric_field)": [[91, "NuRadioReco.framework.electric_field.ElectricField"]], "nuradioreco.framework.electric_field": [[91, "module-NuRadioReco.framework.electric_field"]], "add_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.apply_time_shift"]], "deserialize() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.deserialize"]], "get_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_channel_ids"]], "get_filtered_trace() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_parameter"]], "get_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_parameter_error"]], "get_parameters() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_parameters"]], "get_position() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_position"]], "get_ray_tracing_solution_id() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_shower_id"]], "get_times() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_times"]], "get_trace() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_trace"]], "get_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.get_unique_identifier"]], "has_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.has_channel_ids"]], "has_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.has_parameter"]], "has_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.has_parameter_error"]], "resample() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.resample"]], "serialize() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.serialize"]], "set_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.set_channel_ids"]], "set_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.set_parameter"]], "set_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.set_parameter_error"]], "set_position() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.set_position"]], "set_trace() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.set_trace"]], "set_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[91, "NuRadioReco.framework.electric_field.ElectricField.set_trace_start_time"]], "event (class in nuradioreco.framework.event)": [[92, "NuRadioReco.framework.event.Event"]], "nuradioreco.framework.event": [[92, "module-NuRadioReco.framework.event"]], "add_particle() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.add_particle"]], "add_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.add_shower"]], "add_sim_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.add_sim_shower"]], "deserialize() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.deserialize"]], "get_first_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_first_shower"]], "get_first_sim_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_first_sim_shower"]], "get_generator_info() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_generator_info"]], "get_hybrid_information() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_hybrid_information"]], "get_id() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_id"]], "get_interaction_products() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_interaction_products"]], "get_parameter() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_parameter"]], "get_parent() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_parent"]], "get_particle() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_particle"]], "get_particles() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_particles"]], "get_primary() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_primary"]], "get_run_number() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_run_number"]], "get_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_shower"]], "get_showers() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_showers"]], "get_sim_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_sim_shower"]], "get_sim_showers() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_sim_showers"]], "get_station() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_station"]], "get_station_ids() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_station_ids"]], "get_stations() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.get_stations"]], "has_generator_info() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.has_generator_info"]], "has_parameter() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.has_parameter"]], "has_particle() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.has_particle"]], "has_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.has_shower"]], "has_sim_shower() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.has_sim_shower"]], "has_triggered() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.has_triggered"]], "iter_modules() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.iter_modules"]], "register_module_event() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.register_module_event"]], "register_module_station() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.register_module_station"]], "serialize() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.serialize"]], "set_generator_info() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.set_generator_info"]], "set_id() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.set_id"]], "set_parameter() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.set_parameter"]], "set_station() (nuradioreco.framework.event.event method)": [[92, "NuRadioReco.framework.event.Event.set_station"]], "hybridinformation (class in nuradioreco.framework.hybrid_information)": [[93, "NuRadioReco.framework.hybrid_information.HybridInformation"]], "nuradioreco.framework.hybrid_information": [[93, "module-NuRadioReco.framework.hybrid_information"]], "add_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[93, "NuRadioReco.framework.hybrid_information.HybridInformation.add_hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[93, "NuRadioReco.framework.hybrid_information.HybridInformation.deserialize"]], "get_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[93, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_shower"]], "get_hybrid_showers() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[93, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_showers"]], "serialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[93, "NuRadioReco.framework.hybrid_information.HybridInformation.serialize"]], "hybridshower (class in nuradioreco.framework.hybrid_shower)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower"]], "nuradioreco.framework.hybrid_shower": [[94, "module-NuRadioReco.framework.hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.deserialize"]], "get_axis() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.get_coordinatesystem"]], "get_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.get_hybrid_detector"]], "get_id() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.get_id"]], "get_name() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.get_name"]], "get_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.get_parameter"]], "has_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.has_parameter"]], "serialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.serialize"]], "set_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.set_hybrid_detector"]], "set_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[94, "NuRadioReco.framework.hybrid_shower.HybridShower.set_parameter"]], "nuradioreco.framework.parameter_serialization": [[95, "module-NuRadioReco.framework.parameter_serialization"]], "deserialize() (in module nuradioreco.framework.parameter_serialization)": [[95, "NuRadioReco.framework.parameter_serialization.deserialize"]], "deserialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[95, "NuRadioReco.framework.parameter_serialization.deserialize_covariances"]], "serialize() (in module nuradioreco.framework.parameter_serialization)": [[95, "NuRadioReco.framework.parameter_serialization.serialize"]], "serialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[95, "NuRadioReco.framework.parameter_serialization.serialize_covariances"]], "ariannaparameters (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters"]], "emax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.Emax"]], "emin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.Emin"]], "nuradiomc_evtgen_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version"]], "nuradiomc_evtgen_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version_hash"]], "nuradiomc_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version"]], "nuradiomc_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version_hash"]], "nuradioreco.framework.parameters": [[96, "module-NuRadioReco.framework.parameters"]], "p2p_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.P2P_amplitude"]], "snr (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.SNR"]], "area (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.area"]], "atmospheric_model (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.atmospheric_model"]], "azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.azimuth"]], "block_offsets (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.block_offsets"]], "ccnc (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.ccnc"]], "channelparameters (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.channelParameters"]], "channels_max_amplitude (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.channels_max_amplitude"]], "charge_excess_profile_id (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.charge_excess_profile_id"]], "chi2_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.chi2_efield_time_direction_fit"]], "comm_duration (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_duration"]], "comm_period (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_period"]], "core (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.core"]], "cr_azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.cr_azimuth"]], "cr_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.cr_azimuth"]], "cr_energy (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.cr_energy"]], "cr_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.cr_energy"]], "cr_energy_em (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.cr_energy_em"]], "cr_energy_em (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.cr_energy_em"]], "cr_spectrum_quadratic_term (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_quadratic_term"]], "cr_spectrum_slope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_slope"]], "cr_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.cr_xcorrelations"]], "cr_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.cr_xcorrelations"]], "cr_xmax (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.cr_xmax"]], "cr_zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.cr_zenith"]], "cr_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.cr_zenith"]], "deposited (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.deposited"]], "distance_correlations (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.distance_correlations"]], "distance_shower_maximum_geometric (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_geometric"]], "distance_shower_maximum_grammage (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_grammage"]], "dt (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.dt"]], "electricfieldparameters (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters"]], "electromagnetic_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_energy"]], "electromagnetic_radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_radiation_energy"]], "energy (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.energy"]], "energy (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.energy"]], "energy_fluence_ratios (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.energy_fluence_ratios"]], "eventparameters (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.eventParameters"]], "fiducial_rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmax"]], "fiducial_rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmin"]], "fiducial_xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmax"]], "fiducial_xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmin"]], "fiducial_ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymax"]], "fiducial_ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymin"]], "fiducial_zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmax"]], "fiducial_zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmin"]], "flavor (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.flavor"]], "flavor (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.flavor"]], "flavors (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.flavors"]], "generatorattributes (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.generatorAttributes"]], "hash_nuradiomc (nuradioreco.framework.parameters.eventparameters attribute)": [[96, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioMC"]], "hash_nuradioreco (nuradioreco.framework.parameters.eventparameters attribute)": [[96, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioReco"]], "inelasticity (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.inelasticity"]], "inelasticity (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.inelasticity"]], "interaction_type (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.interaction_type"]], "interaction_type (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.interaction_type"]], "interferometric_core (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.interferometric_core"]], "interferometric_shower_axis (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_axis"]], "interferometric_shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_maximum"]], "internal_clock_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.internal_clock_time"]], "k_l (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.k_L"]], "l1_supression_value (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.l1_supression_value"]], "magnetic_field_rotation (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_rotation"]], "magnetic_field_vector (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_vector"]], "max_amp_antenna (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna"]], "max_amp_antenna_envelope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna_envelope"]], "maximum_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude"]], "maximum_amplitude_envelope (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude_envelope"]], "n_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.n_events"]], "n_interaction (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.n_interaction"]], "n_samples (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.n_samples"]], "ndf_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.ndf_efield_time_direction_fit"]], "noise_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.noise_regions"]], "noise_rms (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.noise_rms"]], "nu_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.nu_azimuth"]], "nu_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.nu_energy"]], "nu_flavor (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.nu_flavor"]], "nu_inttype (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.nu_inttype"]], "nu_vertex (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.nu_vertex"]], "nu_vertex_distance (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.nu_vertex_distance"]], "nu_viewing_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.nu_viewing_angle"]], "nu_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.nu_xcorrelations"]], "nu_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.nu_xcorrelations"]], "nu_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.nu_zenith"]], "observation_level (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.observation_level"]], "parent_id (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.parent_id"]], "parent_id (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.parent_id"]], "particleparameters (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.particleParameters"]], "phimax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.phimax"]], "phimin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.phimin"]], "polarization_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle"]], "polarization_angle_expectation (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle_expectation"]], "primary_particle (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.primary_particle"]], "radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.radiation_energy"]], "ray_path_type (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.ray_path_type"]], "reflection_coefficient_phi (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_phi"]], "reflection_coefficient_theta (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_theta"]], "refractive_index_at_ground (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.refractive_index_at_ground"]], "rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.rmax"]], "rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.rmin"]], "seq_num (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_num"]], "seq_start_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_start_time"]], "seq_stop_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_stop_time"]], "showerparameters (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.showerParameters"]], "shower_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.shower_energy"]], "shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.shower_maximum"]], "signal_energy_fluence (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.signal_energy_fluence"]], "signal_ray_type (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.signal_ray_type"]], "signal_receiving_azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_azimuth"]], "signal_receiving_zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_zenith"]], "signal_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.signal_regions"]], "signal_time (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.signal_time"]], "signal_time (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.signal_time"]], "signal_time_offset (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.signal_time_offset"]], "sim_config (nuradioreco.framework.parameters.eventparameters attribute)": [[96, "NuRadioReco.framework.parameters.eventParameters.sim_config"]], "start_event_id (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.start_event_id"]], "stationparameters (class in nuradioreco.framework.parameters)": [[96, "NuRadioReco.framework.parameters.stationParameters"]], "station_time (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.station_time"]], "thetamax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.thetamax"]], "thetamin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.thetamin"]], "total_number_of_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.total_number_of_events"]], "trigger_thresholds (nuradioreco.framework.parameters.ariannaparameters attribute)": [[96, "NuRadioReco.framework.parameters.ARIANNAParameters.trigger_thresholds"]], "triggered (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.triggered"]], "type (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.type"]], "vertex (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.vertex"]], "vertex (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.vertex"]], "vertex_2d_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.vertex_2D_fit"]], "vertex_time (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.vertex_time"]], "vertex_time (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.vertex_time"]], "viewing_angles (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.viewing_angles"]], "volume (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.volume"]], "weight (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.weight"]], "xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.xmax"]], "xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.xmin"]], "ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.ymax"]], "ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.ymin"]], "zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[96, "NuRadioReco.framework.parameters.channelParameters.zenith"]], "zenith (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[96, "NuRadioReco.framework.parameters.electricFieldParameters.zenith"]], "zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[96, "NuRadioReco.framework.parameters.particleParameters.zenith"]], "zenith (nuradioreco.framework.parameters.showerparameters attribute)": [[96, "NuRadioReco.framework.parameters.showerParameters.zenith"]], "zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.zenith"]], "zenith_cr_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.zenith_cr_templatefit"]], "zenith_nu_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[96, "NuRadioReco.framework.parameters.stationParameters.zenith_nu_templatefit"]], "zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.zmax"]], "zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[96, "NuRadioReco.framework.parameters.generatorAttributes.zmin"]], "nuradioreco.framework.particle": [[97, "module-NuRadioReco.framework.particle"]], "particle (class in nuradioreco.framework.particle)": [[97, "NuRadioReco.framework.particle.Particle"]], "as_hdf5_dict() (nuradioreco.framework.particle.particle method)": [[97, "NuRadioReco.framework.particle.Particle.as_hdf5_dict"]], "deserialize() (nuradioreco.framework.particle.particle method)": [[97, "NuRadioReco.framework.particle.Particle.deserialize"]], "get_id() (nuradioreco.framework.particle.particle method)": [[97, "NuRadioReco.framework.particle.Particle.get_id"]], "get_parameter() (nuradioreco.framework.particle.particle method)": [[97, "NuRadioReco.framework.particle.Particle.get_parameter"]], "has_parameter() (nuradioreco.framework.particle.particle method)": [[97, "NuRadioReco.framework.particle.Particle.has_parameter"]], "serialize() (nuradioreco.framework.particle.particle method)": [[97, "NuRadioReco.framework.particle.Particle.serialize"]], "set_parameter() (nuradioreco.framework.particle.particle method)": [[97, "NuRadioReco.framework.particle.Particle.set_parameter"]], "nuradioreco.framework.radio_shower": [[98, "module-NuRadioReco.framework.radio_shower"]], "radioshower (class in nuradioreco.framework.radio_shower)": [[98, "NuRadioReco.framework.radio_shower.RadioShower"]], "deserialize() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.deserialize"]], "get_axis() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.get_id"]], "get_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.get_parameter"]], "get_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.get_station_ids"]], "has_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.has_parameter"]], "has_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.has_station_ids"]], "serialize() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.serialize"]], "set_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[98, "NuRadioReco.framework.radio_shower.RadioShower.set_parameter"]], "nuradioreco.framework.sim_channel": [[99, "module-NuRadioReco.framework.sim_channel"]], "simchannel (class in nuradioreco.framework.sim_channel)": [[99, "NuRadioReco.framework.sim_channel.SimChannel"]], "add_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.apply_time_shift"]], "deserialize() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_id"]], "get_number_of_samples() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_parameter"]], "get_parameters() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_parameters"]], "get_ray_tracing_solution_id() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_shower_id"]], "get_times() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_times"]], "get_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.get_unique_identifier"]], "has_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.has_parameter"]], "resample() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.resample"]], "serialize() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.set_parameter"]], "set_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[99, "NuRadioReco.framework.sim_channel.SimChannel.set_trace_start_time"]], "nuradioreco.framework.sim_station": [[100, "module-NuRadioReco.framework.sim_station"]], "simstation (class in nuradioreco.framework.sim_station)": [[100, "NuRadioReco.framework.sim_station.SimStation"]], "add_channel() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.add_channel"]], "add_electric_field() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.add_electric_field"]], "deserialize() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_channel"]], "get_channel_ids() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_channel_ids"]], "get_channels_by_channel_id() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_channel_id"]], "get_channels_by_ray_tracing_id() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_ray_tracing_id"]], "get_channels_by_shower_id() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_shower_id"]], "get_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields_for_channels"]], "get_id() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_magnetic_field_vector"]], "get_parameter() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_parameters"]], "get_ray_tracing_ids() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_ray_tracing_ids"]], "get_shower_ids() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_shower_ids"]], "get_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_simulation_weight"]], "get_station_time() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_trigger"]], "get_triggers() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.has_parameter"]], "has_trigger() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.has_trigger"]], "has_triggered() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.is_neutrino"]], "iter_channels() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.iter_channels"]], "remove_parameter() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.remove_triggers"]], "serialize() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_is_neutrino"]], "set_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_magnetic_field_vector"]], "set_parameter() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_parameter_error"]], "set_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_simulation_weight"]], "set_station_time() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_station_time"]], "set_trigger() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_trigger"]], "set_triggered() (nuradioreco.framework.sim_station.simstation method)": [[100, "NuRadioReco.framework.sim_station.SimStation.set_triggered"]], "nuradioreco.framework.station": [[101, "module-NuRadioReco.framework.station"]], "station (class in nuradioreco.framework.station)": [[101, "NuRadioReco.framework.station.Station"]], "add_channel() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.add_channel"]], "add_electric_field() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.add_electric_field"]], "deserialize() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_channel"]], "get_channel_ids() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_channel_ids"]], "get_electric_fields() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_electric_fields_for_channels"]], "get_id() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_magnetic_field_vector"]], "get_number_of_channels() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_number_of_channels"]], "get_parameter() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_parameter"]], "get_parameter_error() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_parameter_error"]], "get_parameters() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_parameters"]], "get_reference_direction() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_reference_direction"]], "get_reference_reconstruction() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_reference_reconstruction"]], "get_sim_station() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_sim_station"]], "get_station_time() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_trigger"]], "get_triggers() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.has_parameter"]], "has_sim_station() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.has_sim_station"]], "has_trigger() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.has_trigger"]], "has_triggered() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.is_neutrino"]], "iter_channels() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.iter_channels"]], "remove_parameter() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.remove_parameter"]], "remove_triggers() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.remove_triggers"]], "serialize() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.serialize"]], "set_arianna_parameter() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_parameter"]], "set_parameter_error() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_parameter_error"]], "set_reference_reconstruction() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_reference_reconstruction"]], "set_sim_station() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_sim_station"]], "set_station_time() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_station_time"]], "set_trigger() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_trigger"]], "set_triggered() (nuradioreco.framework.station.station method)": [[101, "NuRadioReco.framework.station.Station.set_triggered"]], "envelopephasedtrigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger"]], "envelopetrigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger"]], "highlowtrigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger"]], "integratedpowertrigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger"]], "nuradioreco.framework.trigger": [[102, "module-NuRadioReco.framework.trigger"]], "rnogsurfacetrigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger"]], "simplephasedtrigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger"]], "simplethresholdtrigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger"]], "trigger (class in nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.Trigger"]], "deserialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.deserialize"]], "deserialize() (in module nuradioreco.framework.trigger)": [[102, "NuRadioReco.framework.trigger.deserialize"]], "get_name() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.get_name"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.get_pre_trigger_times"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.get_trigger_settings"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.get_trigger_time"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.get_trigger_times"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.get_triggered_channels"]], "get_type() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.get_type"]], "has_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.has_triggered"]], "serialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.serialize"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.set_pre_trigger_times"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.set_trigger_time"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.set_trigger_times"]], "set_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.set_triggered"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[102, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[102, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[102, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[102, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[102, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[102, "NuRadioReco.framework.trigger.Trigger.set_triggered_channels"]], "units (nuradioreco.framework.trigger.rnogsurfacetrigger attribute)": [[102, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.units"]], "nuradioreco.modules": [[103, "module-NuRadioReco.modules"]], "nuradioreco.modules.ara": [[104, "module-NuRadioReco.modules.ARA"]], "nuradioreco.modules.ara.hardwareresponseincorporator": [[105, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[105, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[105, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "hardwareresponseincorporator (class in nuradioreco.modules.ara.hardwareresponseincorporator)": [[105, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[105, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.ara.triggersimulator": [[106, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "end() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[106, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.end"]], "has_triggered() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[106, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.has_triggered"]], "run() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[106, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.ara.triggersimulator)": [[106, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.arianna": [[107, "module-NuRadioReco.modules.ARIANNA"]], "nuradioreco.modules.arianna.hardwareresponseincorporator": [[108, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[108, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[108, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[108, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[108, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[108, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.arianna.hardwareresponseincorporator)": [[108, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[108, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.rno_g": [[109, "module-NuRadioReco.modules.RNO_G"]], "nuradioreco.modules.rno_g.channelblockoffsetfitter": [[110, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "add_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[110, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.add_offsets"]], "channelblockoffsets (class in nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[110, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets"]], "fit_block_offsets() (in module nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[110, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.fit_block_offsets"]], "remove_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[110, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.remove_offsets"]], "nuradioreco.modules.rno_g.hardwareresponseincorporator": [[111, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.rno_g.hardwareresponseincorporator)": [[111, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.analogtodigitalconverter": [[112, "module-NuRadioReco.modules.analogToDigitalConverter"]], "analogtodigitalconverter (class in nuradioreco.modules.analogtodigitalconverter)": [[112, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter"]], "apply_saturation() (in module nuradioreco.modules.analogtodigitalconverter)": [[112, "NuRadioReco.modules.analogToDigitalConverter.apply_saturation"]], "end() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[112, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.end"]], "get_digital_trace() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[112, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.get_digital_trace"]], "perfect_ceiling_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[112, "NuRadioReco.modules.analogToDigitalConverter.perfect_ceiling_comparator"]], "perfect_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[112, "NuRadioReco.modules.analogToDigitalConverter.perfect_comparator"]], "perfect_floor_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[112, "NuRadioReco.modules.analogToDigitalConverter.perfect_floor_comparator"]], "round_to_int() (in module nuradioreco.modules.analogtodigitalconverter)": [[112, "NuRadioReco.modules.analogToDigitalConverter.round_to_int"]], "run() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[112, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.run"]], "nuradioreco.modules.base": [[113, "module-NuRadioReco.modules.base"]], "nuradioreco.modules.base.module": [[114, "module-NuRadioReco.modules.base.module"]], "register_run() (in module nuradioreco.modules.base.module)": [[114, "NuRadioReco.modules.base.module.register_run"]], "setup_logger() (in module nuradioreco.modules.base.module)": [[114, "NuRadioReco.modules.base.module.setup_logger"]], "nuradioreco.modules.beamformingdirectionfitter": [[115, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "beamformingdirectionfitter (class in nuradioreco.modules.beamformingdirectionfitter)": [[115, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter"]], "begin() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[115, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.begin"]], "end() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[115, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.end"]], "get_array_of_channels() (in module nuradioreco.modules.beamformingdirectionfitter)": [[115, "NuRadioReco.modules.beamFormingDirectionFitter.get_array_of_channels"]], "run() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[115, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.run"]], "nuradioreco.modules.channeladdcabledelay": [[116, "module-NuRadioReco.modules.channelAddCableDelay"]], "channeladdcabledelay (class in nuradioreco.modules.channeladdcabledelay)": [[116, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay"]], "run() (nuradioreco.modules.channeladdcabledelay.channeladdcabledelay method)": [[116, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay.run"]], "nuradioreco.modules.channelantennadedispersion": [[117, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "channelantennadedispersion (class in nuradioreco.modules.channelantennadedispersion)": [[117, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion"]], "end() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[117, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.end"]], "run() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[117, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.run"]], "nuradioreco.modules.channelbandpassfilter": [[118, "module-NuRadioReco.modules.channelBandPassFilter"]], "begin() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[118, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.begin"]], "channelbandpassfilter (class in nuradioreco.modules.channelbandpassfilter)": [[118, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter"]], "end() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[118, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.end"]], "get_filter() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[118, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter"]], "get_filter_arguments() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[118, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter_arguments"]], "run() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[118, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.run"]], "nuradioreco.modules.channelgalacticnoiseadder": [[119, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "begin() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[119, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.begin"]], "channelgalacticnoiseadder (class in nuradioreco.modules.channelgalacticnoiseadder)": [[119, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder"]], "run() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[119, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.run"]], "nuradioreco.modules.channelgenericnoiseadder": [[120, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "add_random_phases() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.add_random_phases"]], "bandlimited_noise() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise"]], "bandlimited_noise_from_precalculated_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise_from_precalculated_parameters"]], "begin() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.begin"]], "channelgenericnoiseadder (class in nuradioreco.modules.channelgenericnoiseadder)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder"]], "end() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.end"]], "fftnoise_fullfft() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.fftnoise_fullfft"]], "precalculate_bandlimited_noise_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.precalculate_bandlimited_noise_parameters"]], "run() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[120, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.run"]], "nuradioreco.modules.channellengthadjuster": [[121, "module-NuRadioReco.modules.channelLengthAdjuster"]], "begin() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[121, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.begin"]], "channellengthadjuster (class in nuradioreco.modules.channellengthadjuster)": [[121, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster"]], "end() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[121, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.end"]], "run() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[121, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.run"]], "nuradioreco.modules.channelresampler": [[122, "module-NuRadioReco.modules.channelResampler"]], "begin() (nuradioreco.modules.channelresampler.channelresampler method)": [[122, "NuRadioReco.modules.channelResampler.channelResampler.begin"]], "channelresampler (class in nuradioreco.modules.channelresampler)": [[122, "NuRadioReco.modules.channelResampler.channelResampler"]], "end() (nuradioreco.modules.channelresampler.channelresampler method)": [[122, "NuRadioReco.modules.channelResampler.channelResampler.end"]], "run() (nuradioreco.modules.channelresampler.channelresampler method)": [[122, "NuRadioReco.modules.channelResampler.channelResampler.run"]], "nuradioreco.modules.channelsignalreconstructor": [[123, "module-NuRadioReco.modules.channelSignalReconstructor"]], "begin() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[123, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.begin"]], "channelsignalreconstructor (class in nuradioreco.modules.channelsignalreconstructor)": [[123, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor"]], "end() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[123, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.end"]], "get_snr() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[123, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.get_SNR"]], "run() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[123, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.run"]], "nuradioreco.modules.channelstopfilter": [[124, "module-NuRadioReco.modules.channelStopFilter"]], "begin() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[124, "NuRadioReco.modules.channelStopFilter.channelStopFilter.begin"]], "channelstopfilter (class in nuradioreco.modules.channelstopfilter)": [[124, "NuRadioReco.modules.channelStopFilter.channelStopFilter"]], "end() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[124, "NuRadioReco.modules.channelStopFilter.channelStopFilter.end"]], "run() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[124, "NuRadioReco.modules.channelStopFilter.channelStopFilter.run"]], "nuradioreco.modules.channeltemplatecorrelation": [[125, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "begin() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[125, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.begin"]], "channeltemplatecorrelation (class in nuradioreco.modules.channeltemplatecorrelation)": [[125, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation"]], "end() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[125, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.end"]], "match_sampling() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[125, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.match_sampling"]], "run() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[125, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.run"]], "nuradioreco.modules.channeltimeoffsetcalculator": [[126, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "begin() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[126, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.begin"]], "channeltimeoffsetcalculator (class in nuradioreco.modules.channeltimeoffsetcalculator)": [[126, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator"]], "run() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[126, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.run"]], "nuradioreco.modules.channeltimewindow": [[127, "module-NuRadioReco.modules.channelTimeWindow"]], "begin() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[127, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.begin"]], "channeltimewindow (class in nuradioreco.modules.channeltimewindow)": [[127, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow"]], "end() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[127, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.end"]], "run() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[127, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.run"]], "nuradioreco.modules.correlationdirectionfitter": [[128, "module-NuRadioReco.modules.correlationDirectionFitter"]], "begin() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[128, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.begin"]], "correlationdirectionfitter (class in nuradioreco.modules.correlationdirectionfitter)": [[128, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter"]], "end() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[128, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.end"]], "run() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[128, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.run"]], "nuradioreco.modules.cosmicrayenergyreconstructor": [[129, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "begin() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[129, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.begin"]], "cosmicrayenergyreconstructor (class in nuradioreco.modules.cosmicrayenergyreconstructor)": [[129, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor"]], "run() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[129, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.run"]], "nuradioreco.modules.custom": [[130, "module-NuRadioReco.modules.custom"]], "nuradioreco.modules.custom.deltat": [[131, "module-NuRadioReco.modules.custom.deltaT"]], "nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution": [[132, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "begin() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[132, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.begin"]], "calculateamplitudeperraysolution (class in nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution)": [[132, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution"]], "end() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[132, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.end"]], "run() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[132, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.run"]], "nuradioreco.modules.efieldairtoicepropagator": [[133, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "begin() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[133, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.begin"]], "efieldairtoicepropagator (class in nuradioreco.modules.efieldairtoicepropagator)": [[133, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator"]], "end() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[133, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.end"]], "run() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[133, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.run"]], "nuradioreco.modules.efieldradiointerferometricreconstruction": [[134, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.begin"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.begin"]], "efieldinterferometricaxisreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco"]], "efieldinterferometricdepthreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.end"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.end"]], "find_maximum_in_plane() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.find_maximum_in_plane"]], "get_geometry_and_transformation() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_geometry_and_transformation"]], "get_station_data() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_station_data"]], "logger (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.logger"]], "plot_lateral_cross_section() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.plot_lateral_cross_section"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_interferometric_depth"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.reconstruct_interferometric_depth"]], "reconstruct_shower_axis() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_shower_axis"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.run"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.run"]], "sample_lateral_cross_section() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_lateral_cross_section"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_longitudinal_profile"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.sample_longitudinal_profile"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.update_atmospheric_model_and_refractivity_table"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[134, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.update_atmospheric_model_and_refractivity_table"]], "nuradioreco.modules.efieldtimedirectionfitter": [[135, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "begin() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[135, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.begin"]], "efieldtimedirectionfitter (class in nuradioreco.modules.efieldtimedirectionfitter)": [[135, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter"]], "end() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[135, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.end"]], "run() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[135, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.run"]], "nuradioreco.modules.efieldtovoltageconverter": [[136, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "begin() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[136, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.begin"]], "efieldtovoltageconverter (class in nuradioreco.modules.efieldtovoltageconverter)": [[136, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter"]], "end() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[136, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.end"]], "run() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[136, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.run"]], "nuradioreco.modules.efieldtovoltageconverterperefield": [[137, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "efieldtovoltageconverterperefield (class in nuradioreco.modules.efieldtovoltageconverterperefield)": [[137, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield"]], "end() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[137, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.end"]], "run() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[137, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.run"]], "nuradioreco.modules.electricfieldbandpassfilter": [[138, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "begin() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[138, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.begin"]], "electricfieldbandpassfilter (class in nuradioreco.modules.electricfieldbandpassfilter)": [[138, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter"]], "end() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[138, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.end"]], "run() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[138, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.run"]], "nuradioreco.modules.electricfieldresampler": [[139, "module-NuRadioReco.modules.electricFieldResampler"]], "begin() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[139, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.begin"]], "electricfieldresampler (class in nuradioreco.modules.electricfieldresampler)": [[139, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler"]], "end() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[139, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.end"]], "run() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[139, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.run"]], "nuradioreco.modules.electricfieldsignalreconstructor": [[140, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "begin() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[140, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.begin"]], "electricfieldsignalreconstructor (class in nuradioreco.modules.electricfieldsignalreconstructor)": [[140, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor"]], "end() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[140, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.end"]], "run() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[140, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.run"]], "nuradioreco.modules.eventtypeidentifier": [[141, "module-NuRadioReco.modules.eventTypeIdentifier"]], "begin() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[141, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.begin"]], "eventtypeidentifier (class in nuradioreco.modules.eventtypeidentifier)": [[141, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier"]], "run() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[141, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.run"]], "nuradioreco.modules.iftelectricfieldreconstructor": [[142, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "iftelectricfieldreconstructor (class in nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor)": [[143, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor"]], "nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor": [[143, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "begin() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[143, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.begin"]], "make_priors_plot() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[143, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.make_priors_plot"]], "run() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[143, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.run"]], "domainflipper (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper"]], "inserter (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter"]], "linearslopeoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator"]], "nuradioreco.modules.iftelectricfieldreconstructor.operators": [[144, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "slopespectrumoperator() (in module nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SlopeSpectrumOperator"]], "symmetrizingoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.domainflipper method)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.inserter method)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.linearslopeoperator method)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.symmetrizingoperator method)": [[144, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator.apply"]], "nuradioreco.modules.io": [[145, "module-NuRadioReco.modules.io"]], "nuradioreco.modules.io.nuradiorecoio": [[146, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "nuradiorecoio (class in nuradioreco.modules.io.nuradiorecoio)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio"]], "close_files() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.close_files"]], "get_detector() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_detector"]], "get_event() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event"]], "get_event_i() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_i"]], "get_event_ids() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_ids"]], "get_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_events"]], "get_filenames() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_filenames"]], "get_header() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_header"]], "get_n_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_n_events"]], "openfile() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[146, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.openFile"]], "nuradioreco.modules.io.rno_g": [[147, "module-NuRadioReco.modules.io.RNO_G"]], "nuradioreco.modules.io.rno_g.readrnogdatamattak": [[148, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "begin() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.begin"]], "end() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.end"]], "get_event() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event"]], "get_event_by_index() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event_by_index"]], "get_events_information() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_events_information"]], "get_time_offset() (in module nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.get_time_offset"]], "readrnogdata (class in nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData"]], "run() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.run"]], "set_selectors() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[148, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.set_selectors"]], "nuradioreco.modules.io.araroot": [[149, "module-NuRadioReco.modules.io.araroot"]], "nuradioreco.modules.io.coreas": [[151, "module-NuRadioReco.modules.io.coreas"]], "nuradioreco.modules.io.coreas.coreas": [[152, "module-NuRadioReco.modules.io.coreas.coreas"]], "calculate_simulation_weights() (in module nuradioreco.modules.io.coreas.coreas)": [[152, "NuRadioReco.modules.io.coreas.coreas.calculate_simulation_weights"]], "get_angles() (in module nuradioreco.modules.io.coreas.coreas)": [[152, "NuRadioReco.modules.io.coreas.coreas.get_angles"]], "make_sim_shower() (in module nuradioreco.modules.io.coreas.coreas)": [[152, "NuRadioReco.modules.io.coreas.coreas.make_sim_shower"]], "make_sim_station() (in module nuradioreco.modules.io.coreas.coreas)": [[152, "NuRadioReco.modules.io.coreas.coreas.make_sim_station"]], "nuradioreco.modules.io.coreas.readcoreas": [[153, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "begin() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[153, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[153, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreas)": [[153, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[153, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.run"]], "nuradioreco.modules.io.coreas.readcoreasshower": [[154, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "antenna_id() (in module nuradioreco.modules.io.coreas.readcoreasshower)": [[154, "NuRadioReco.modules.io.coreas.readCoREASShower.antenna_id"]], "begin() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[154, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[154, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.end"]], "readcoreasshower (class in nuradioreco.modules.io.coreas.readcoreasshower)": [[154, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower"]], "run() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[154, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.run"]], "nuradioreco.modules.io.coreas.readcoreasstation": [[155, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[155, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[155, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.end"]], "readcoreasstation (class in nuradioreco.modules.io.coreas.readcoreasstation)": [[155, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation"]], "run() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[155, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.run"]], "nuradioreco.modules.io.coreas.readcoreasstationgrid": [[156, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[156, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[156, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreasstationgrid)": [[156, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[156, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.run"]], "nuradioreco.modules.io.coreas.simulationselector": [[157, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "begin() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[157, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.begin"]], "end() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[157, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.end"]], "run() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[157, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.run"]], "simulationselector (class in nuradioreco.modules.io.coreas.simulationselector)": [[157, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector"]], "nuradioreco.modules.io.eventreader": [[158, "module-NuRadioReco.modules.io.eventReader"]], "begin() (nuradioreco.modules.io.eventreader.eventreader method)": [[158, "NuRadioReco.modules.io.eventReader.eventReader.begin"]], "end() (nuradioreco.modules.io.eventreader.eventreader method)": [[158, "NuRadioReco.modules.io.eventReader.eventReader.end"]], "eventreader (class in nuradioreco.modules.io.eventreader)": [[158, "NuRadioReco.modules.io.eventReader.eventReader"]], "get_detector() (nuradioreco.modules.io.eventreader.eventreader method)": [[158, "NuRadioReco.modules.io.eventReader.eventReader.get_detector"]], "get_header() (nuradioreco.modules.io.eventreader.eventreader method)": [[158, "NuRadioReco.modules.io.eventReader.eventReader.get_header"]], "run() (nuradioreco.modules.io.eventreader.eventreader method)": [[158, "NuRadioReco.modules.io.eventReader.eventReader.run"]], "nuradioreco.modules.io.eventwriter": [[159, "module-NuRadioReco.modules.io.eventWriter"]], "begin() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[159, "NuRadioReco.modules.io.eventWriter.eventWriter.begin"]], "end() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[159, "NuRadioReco.modules.io.eventWriter.eventWriter.end"]], "eventwriter (class in nuradioreco.modules.io.eventwriter)": [[159, "NuRadioReco.modules.io.eventWriter.eventWriter"]], "get_header() (in module nuradioreco.modules.io.eventwriter)": [[159, "NuRadioReco.modules.io.eventWriter.get_header"]], "run() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[159, "NuRadioReco.modules.io.eventWriter.eventWriter.run"]], "nuradioreco.modules.io.event_parser_factory": [[160, "module-NuRadioReco.modules.io.event_parser_factory"]], "iter_events_function() (in module nuradioreco.modules.io.event_parser_factory)": [[160, "NuRadioReco.modules.io.event_parser_factory.iter_events_function"]], "scan_files_function() (in module nuradioreco.modules.io.event_parser_factory)": [[160, "NuRadioReco.modules.io.event_parser_factory.scan_files_function"]], "nuradioreco.modules.io.snowshovel": [[161, "module-NuRadioReco.modules.io.snowshovel"]], "nuradioreco.modules.io.snowshovel.readariannadata": [[162, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[162, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[162, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadata)": [[162, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[162, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.run"]], "nuradioreco.modules.io.snowshovel.readariannadatacalib": [[163, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[163, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[163, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadatacalib)": [[163, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[163, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.run"]], "nuradioreco.modules.measured_noise": [[164, "module-NuRadioReco.modules.measured_noise"]], "nuradioreco.modules.measured_noise.arianna": [[165, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "nuradioreco.modules.measured_noise.arianna.noiseimporterroot": [[166, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "begin() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[166, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[166, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.arianna.noiseimporterroot)": [[166, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[166, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.run"]], "nuradioreco.modules.measured_noise.rno_g": [[167, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "nuradioreco.modules.measured_noise.rno_g.noiseimporter": [[168, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "begin() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[168, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[168, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.rno_g.noiseimporter)": [[168, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[168, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.run"]], "nuradioreco.modules.measured_noise.channelmeasurednoiseadder": [[169, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "begin() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[169, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.begin"]], "channelmeasurednoiseadder (class in nuradioreco.modules.measured_noise.channelmeasurednoiseadder)": [[169, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder"]], "end() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[169, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.end"]], "get_noise_station() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[169, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.get_noise_station"]], "run() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[169, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.run"]], "nuradioreco.modules.neutrinodirectionreconstructor": [[170, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos": [[171, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"]], "begin() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[171, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.begin"]], "end() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[171, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.end"]], "run() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[171, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.run"]], "voltagetoanalyticefieldconverterneutrinos (class in nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos)": [[171, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos"]], "nuradioreco.modules.neutrinovertexreconstructor": [[172, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "nuradioreco.modules.neutrinovertexreconstructor.create_lookup_table": [[173, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor": [[174, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.begin"]], "find_ray_type() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_ray_type"]], "find_receiving_zenith() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_receiving_zenith"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_signal_travel_time"]], "neutrino2dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[174, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.run"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor": [[175, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[175, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.begin"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[175, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_array_3d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[175, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_3d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[175, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[175, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_signal_travel_time"]], "neutrino3dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor)": [[175, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[175, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.run"]], "nuradioreco.modules.phasedarray": [[176, "module-NuRadioReco.modules.phasedarray"]], "nuradioreco.modules.phasedarray.triggersimulator": [[177, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "begin() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.begin"]], "calculate_time_delays() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.calculate_time_delays"]], "check_vertical_string() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.check_vertical_string"]], "end() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.end"]], "get_antenna_positions() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_antenna_positions"]], "get_channel_trace_start_time() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_channel_trace_start_time"]], "phase_signals() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phase_signals"]], "phased_trigger() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phased_trigger"]], "power_sum() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.power_sum"]], "run() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.phasedarray.triggersimulator)": [[177, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.sphericalwavefitter": [[178, "module-NuRadioReco.modules.sphericalWaveFitter"]], "begin() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[178, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.begin"]], "end() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[178, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.end"]], "run() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[178, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.run"]], "sphericalwavefitter (class in nuradioreco.modules.sphericalwavefitter)": [[178, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter"]], "nuradioreco.modules.templatedirectionfitter": [[179, "module-NuRadioReco.modules.templateDirectionFitter"]], "begin() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[179, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.begin"]], "end() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[179, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.end"]], "run() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[179, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.run"]], "templatedirectionfitter (class in nuradioreco.modules.templatedirectionfitter)": [[179, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter"]], "nuradioreco.modules.trigger": [[180, "module-NuRadioReco.modules.trigger"]], "nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[181, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "linear_fit() (in module nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger)": [[181, "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.linear_fit"]], "nuradioreco.modules.trigger.envelopetrigger": [[182, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "begin() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[182, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[182, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.end"]], "get_envelope_triggers() (in module nuradioreco.modules.trigger.envelopetrigger)": [[182, "NuRadioReco.modules.trigger.envelopeTrigger.get_envelope_triggers"]], "run() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[182, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.envelopetrigger)": [[182, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator"]], "nuradioreco.modules.trigger.highlowthreshold": [[183, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "begin() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[183, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[183, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.end"]], "get_high_low_triggers() (in module nuradioreco.modules.trigger.highlowthreshold)": [[183, "NuRadioReco.modules.trigger.highLowThreshold.get_high_low_triggers"]], "get_majority_logic() (in module nuradioreco.modules.trigger.highlowthreshold)": [[183, "NuRadioReco.modules.trigger.highLowThreshold.get_majority_logic"]], "run() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[183, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.highlowthreshold)": [[183, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.multihighlowthreshold": [[184, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "begin() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[184, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[184, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.end"]], "get_high_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[184, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_high_triggers"]], "get_low_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[184, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_low_triggers"]], "get_multiple_high_low_trigger() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[184, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_multiple_high_low_trigger"]], "run() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[184, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.multihighlowthreshold)": [[184, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.powerintegration": [[185, "module-NuRadioReco.modules.trigger.powerIntegration"]], "begin() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[185, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[185, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.end"]], "get_power_int_triggers() (in module nuradioreco.modules.trigger.powerintegration)": [[185, "NuRadioReco.modules.trigger.powerIntegration.get_power_int_triggers"]], "run() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[185, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.powerintegration)": [[185, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator"]], "nuradioreco.modules.trigger.rnog_surface_trigger": [[186, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "begin() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[186, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[186, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.end"]], "run() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[186, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.run"]], "schottky_diode() (in module nuradioreco.modules.trigger.rnog_surface_trigger)": [[186, "NuRadioReco.modules.trigger.rnog_surface_trigger.schottky_diode"]], "triggersimulator (class in nuradioreco.modules.trigger.rnog_surface_trigger)": [[186, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator"]], "nuradioreco.modules.trigger.simplethreshold": [[187, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "begin() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[187, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[187, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.end"]], "get_threshold_triggers() (in module nuradioreco.modules.trigger.simplethreshold)": [[187, "NuRadioReco.modules.trigger.simpleThreshold.get_threshold_triggers"]], "run() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[187, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.simplethreshold)": [[187, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator"]], "nuradioreco.modules.triggertimeadjuster": [[188, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "begin() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[188, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.begin"]], "run() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[188, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.run"]], "triggertimeadjuster (class in nuradioreco.modules.triggertimeadjuster)": [[188, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster"]], "nuradioreco.modules.voltagetoanalyticefieldconverter": [[189, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[189, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.begin"]], "covariance() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[189, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.covariance"]], "end() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[189, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.end"]], "run() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[189, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[189, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.stacked_lstsq"]], "voltagetoanalyticefieldconverter (class in nuradioreco.modules.voltagetoanalyticefieldconverter)": [[189, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverter": [[190, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[190, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[190, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.end"]], "get_array_of_channels() (in module nuradioreco.modules.voltagetoefieldconverter)": [[190, "NuRadioReco.modules.voltageToEfieldConverter.get_array_of_channels"]], "run() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[190, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoefieldconverter)": [[190, "NuRadioReco.modules.voltageToEfieldConverter.stacked_lstsq"]], "voltagetoefieldconverter (class in nuradioreco.modules.voltagetoefieldconverter)": [[190, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverterperchannel": [[191, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "begin() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[191, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[191, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.end"]], "run() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[191, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.run"]], "voltagetoefieldconverterperchannel (class in nuradioreco.modules.voltagetoefieldconverterperchannel)": [[191, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel"]], "nuradioreco.utilities": [[192, "module-NuRadioReco.utilities"]], "nuradioreco.utilities.analytic_pulse": [[193, "module-NuRadioReco.utilities.analytic_pulse"]], "amp_from_energy() (in module nuradioreco.utilities.analytic_pulse)": [[193, "NuRadioReco.utilities.analytic_pulse.amp_from_energy"]], "get_analytic_pulse() (in module nuradioreco.utilities.analytic_pulse)": [[193, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse"]], "get_analytic_pulse_freq() (in module nuradioreco.utilities.analytic_pulse)": [[193, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse_freq"]], "nuradioreco.utilities.bandpass_filter": [[194, "module-NuRadioReco.utilities.bandpass_filter"]], "get_filter_response() (in module nuradioreco.utilities.bandpass_filter)": [[194, "NuRadioReco.utilities.bandpass_filter.get_filter_response"]], "nuradioreco.utilities.cr_flux": [[195, "module-NuRadioReco.utilities.cr_flux"]], "get_analytic_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[195, "NuRadioReco.utilities.cr_flux.get_analytic_cr_flux"]], "get_cr_event_rate() (in module nuradioreco.utilities.cr_flux)": [[195, "NuRadioReco.utilities.cr_flux.get_cr_event_rate"]], "get_flux_per_energy_bin() (in module nuradioreco.utilities.cr_flux)": [[195, "NuRadioReco.utilities.cr_flux.get_flux_per_energy_bin"]], "get_interpolated_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[195, "NuRadioReco.utilities.cr_flux.get_interpolated_cr_flux"]], "get_measured_data() (in module nuradioreco.utilities.cr_flux)": [[195, "NuRadioReco.utilities.cr_flux.get_measured_data"]], "plot_measured_spectrum() (in module nuradioreco.utilities.cr_flux)": [[195, "NuRadioReco.utilities.cr_flux.plot_measured_spectrum"]], "nuradioreco.utilities.diodesimulator": [[196, "module-NuRadioReco.utilities.diodeSimulator"]], "calculate_noise_parameters() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[196, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.calculate_noise_parameters"]], "diodesimulator (class in nuradioreco.utilities.diodesimulator)": [[196, "NuRadioReco.utilities.diodeSimulator.diodeSimulator"]], "end() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[196, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.end"]], "tunnel_diode() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[196, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.tunnel_diode"]], "nuradioreco.utilities.fft": [[197, "module-NuRadioReco.utilities.fft"]], "freq2time() (in module nuradioreco.utilities.fft)": [[197, "NuRadioReco.utilities.fft.freq2time"]], "time2freq() (in module nuradioreco.utilities.fft)": [[197, "NuRadioReco.utilities.fft.time2freq"]], "nuradioreco.utilities.geometryutilities": [[198, "module-NuRadioReco.utilities.geometryUtilities"]], "get_efield_in_spherical_coords() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.get_efield_in_spherical_coords"]], "get_fresnel_angle() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.get_fresnel_angle"]], "get_fresnel_r_p() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_p"]], "get_fresnel_r_s() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_s"]], "get_fresnel_t_p() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_p"]], "get_fresnel_t_s() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_s"]], "get_time_delay_from_direction() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.get_time_delay_from_direction"]], "rot_x() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.rot_x"]], "rot_y() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.rot_y"]], "rot_z() (in module nuradioreco.utilities.geometryutilities)": [[198, "NuRadioReco.utilities.geometryUtilities.rot_z"]], "nuradioreco.utilities.ice": [[199, "module-NuRadioReco.utilities.ice"]], "get_refractive_index() (in module nuradioreco.utilities.ice)": [[199, "NuRadioReco.utilities.ice.get_refractive_index"]], "nuradioreco.utilities.interferometry": [[200, "module-NuRadioReco.utilities.interferometry"]], "fit_axis() (in module nuradioreco.utilities.interferometry)": [[200, "NuRadioReco.utilities.interferometry.fit_axis"]], "get_intersection_between_line_and_plane() (in module nuradioreco.utilities.interferometry)": [[200, "NuRadioReco.utilities.interferometry.get_intersection_between_line_and_plane"]], "get_signal() (in module nuradioreco.utilities.interferometry)": [[200, "NuRadioReco.utilities.interferometry.get_signal"]], "get_time_shifts() (in module nuradioreco.utilities.interferometry)": [[200, "NuRadioReco.utilities.interferometry.get_time_shifts"]], "interfere_traces_interpolation() (in module nuradioreco.utilities.interferometry)": [[200, "NuRadioReco.utilities.interferometry.interfere_traces_interpolation"]], "nuradioreco.utilities.io_utilities": [[201, "module-NuRadioReco.utilities.io_utilities"]], "read_pickle() (in module nuradioreco.utilities.io_utilities)": [[201, "NuRadioReco.utilities.io_utilities.read_pickle"]], "nuradioreco.utilities.logging": [[202, "module-NuRadioReco.utilities.logging"]], "addlogginglevel() (in module nuradioreco.utilities.logging)": [[202, "NuRadioReco.utilities.logging.addLoggingLevel"]], "setup_logger() (in module nuradioreco.utilities.logging)": [[202, "NuRadioReco.utilities.logging.setup_logger"]], "nuradioreco.utilities.metaclasses": [[203, "module-NuRadioReco.utilities.metaclasses"]], "singleton (class in nuradioreco.utilities.metaclasses)": [[203, "NuRadioReco.utilities.metaclasses.Singleton"]], "mro() (nuradioreco.utilities.metaclasses.singleton method)": [[203, "NuRadioReco.utilities.metaclasses.Singleton.mro"]], "nuradioreco.utilities.noise": [[204, "module-NuRadioReco.utilities.noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegenerator method)": [[204, "NuRadioReco.utilities.noise.thermalNoiseGenerator.generate_noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[204, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise"]], "generate_noise2() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[204, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise2"]], "rolled_sum_roll() (in module nuradioreco.utilities.noise)": [[204, "NuRadioReco.utilities.noise.rolled_sum_roll"]], "rolled_sum_slicing() (in module nuradioreco.utilities.noise)": [[204, "NuRadioReco.utilities.noise.rolled_sum_slicing"]], "rolled_sum_take() (in module nuradioreco.utilities.noise)": [[204, "NuRadioReco.utilities.noise.rolled_sum_take"]], "rolling_indices() (in module nuradioreco.utilities.noise)": [[204, "NuRadioReco.utilities.noise.rolling_indices"]], "thermalnoisegenerator (class in nuradioreco.utilities.noise)": [[204, "NuRadioReco.utilities.noise.thermalNoiseGenerator"]], "thermalnoisegeneratorphasedarray (class in nuradioreco.utilities.noise)": [[204, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray"]], "nuradioreco.utilities.particle_names": [[205, "module-NuRadioReco.utilities.particle_names"]], "particle_id() (in module nuradioreco.utilities.particle_names)": [[205, "NuRadioReco.utilities.particle_names.particle_id"]], "particle_name() (in module nuradioreco.utilities.particle_names)": [[205, "NuRadioReco.utilities.particle_names.particle_name"]], "nuradioreco.utilities.templates": [[206, "module-NuRadioReco.utilities.templates"]], "templates (class in nuradioreco.utilities.templates)": [[206, "NuRadioReco.utilities.templates.Templates"]], "get_cr_ref_template() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.get_cr_ref_template"]], "get_cr_ref_templates() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.get_cr_ref_templates"]], "get_nu_ref_template() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.get_nu_ref_template"]], "get_nu_ref_templates() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.get_nu_ref_templates"]], "get_set_of_cr_templates() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates"]], "get_set_of_cr_templates_full() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates_full"]], "get_set_of_nu_templates() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.get_set_of_nu_templates"]], "set_template_directory() (nuradioreco.utilities.templates.templates method)": [[206, "NuRadioReco.utilities.templates.Templates.set_template_directory"]], "nuradioreco.utilities.timing": [[207, "module-NuRadioReco.utilities.timing"]], "analyze_timing() (in module nuradioreco.utilities.timing)": [[207, "NuRadioReco.utilities.timing.analyze_timing"]], "nuradioreco.utilities.tracewindows": [[208, "module-NuRadioReco.utilities.traceWindows"]], "get_window_around_maximum() (in module nuradioreco.utilities.tracewindows)": [[208, "NuRadioReco.utilities.traceWindows.get_window_around_maximum"]], "nuradioreco.utilities.trace_utilities": [[209, "module-NuRadioReco.utilities.trace_utilities"]], "apply_butterworth() (in module nuradioreco.utilities.trace_utilities)": [[209, "NuRadioReco.utilities.trace_utilities.apply_butterworth"]], "butterworth_filter_trace() (in module nuradioreco.utilities.trace_utilities)": [[209, "NuRadioReco.utilities.trace_utilities.butterworth_filter_trace"]], "delay_trace() (in module nuradioreco.utilities.trace_utilities)": [[209, "NuRadioReco.utilities.trace_utilities.delay_trace"]], "get_channel_voltage_from_efield() (in module nuradioreco.utilities.trace_utilities)": [[209, "NuRadioReco.utilities.trace_utilities.get_channel_voltage_from_efield"]], "get_efield_antenna_factor() (in module nuradioreco.utilities.trace_utilities)": [[209, "NuRadioReco.utilities.trace_utilities.get_efield_antenna_factor"]], "get_electric_field_energy_fluence() (in module nuradioreco.utilities.trace_utilities)": [[209, "NuRadioReco.utilities.trace_utilities.get_electric_field_energy_fluence"]], "upsampling_fir() (in module nuradioreco.utilities.trace_utilities)": [[209, "NuRadioReco.utilities.trace_utilities.upsampling_fir"]], "nuradioreco.utilities.units": [[210, "module-NuRadioReco.utilities.units"]], "nuradioreco.utilities.version": [[211, "module-NuRadioReco.utilities.version"]], "get_nuradiomc_commit_hash() (in module nuradioreco.utilities.version)": [[211, "NuRadioReco.utilities.version.get_NuRadioMC_commit_hash"]], "get_nuradioreco_commit_hash() (in module nuradioreco.utilities.version)": [[211, "NuRadioReco.utilities.version.get_NuRadioReco_commit_hash"]], "get_git_commit_hash() (in module nuradioreco.utilities.version)": [[211, "NuRadioReco.utilities.version.get_git_commit_hash"]]}})