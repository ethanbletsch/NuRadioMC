Search.setIndex({"docnames": ["Introduction/pages/contributing", "Introduction/pages/conventions", "Introduction/pages/installation", "Introduction/pages/introduction", "Introduction/pages/welcome_page", "NuRadioMC/apidoc/NuRadioMC.EvtGen", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII", "NuRadioMC/apidoc/NuRadioMC.SignalGen", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations", "NuRadioMC/apidoc/NuRadioMC.SignalProp", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing", "NuRadioMC/apidoc/NuRadioMC.simulation", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation", "NuRadioMC/apidoc/NuRadioMC.utilities", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities", "NuRadioMC/apidoc/NuRadioMC.utilities.medium", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting", "NuRadioMC/apidoc/NuRadioMC.utilities.runner", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5", "NuRadioMC/pages/HDF5_structure", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2", "NuRadioMC/pages/Manuals/event_generation", "NuRadioMC/pages/Manuals/example-multi_station_coincidences", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial", "NuRadioMC/pages/Manuals/icemodels", "NuRadioMC/pages/Manuals/running_on_a_cluster", "NuRadioMC/pages/Manuals/signal_generation", "NuRadioMC/pages/Manuals/signal_propagation", "NuRadioMC/pages/Manuals/simulation_configuration", "NuRadioMC/pages/Manuals/veff_tutorial", "NuRadioMC/pages/code_documentation", "NuRadioMC/pages/manuals", "NuRadioMC/pages/welcome_page", "NuRadioReco/apidoc/NuRadioReco.detector", "NuRadioReco/apidoc/NuRadioReco.detector.ARA", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses", "NuRadioReco/apidoc/NuRadioReco.detector.LOFAR", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector", "NuRadioReco/apidoc/NuRadioReco.detector.amp", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern", "NuRadioReco/apidoc/NuRadioReco.detector.detector", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector", "NuRadioReco/apidoc/NuRadioReco.detector.response", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector", "NuRadioReco/apidoc/NuRadioReco.framework", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower", "NuRadioReco/apidoc/NuRadioReco.framework.base_station", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace", "NuRadioReco/apidoc/NuRadioReco.framework.channel", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field", "NuRadioReco/apidoc/NuRadioReco.framework.event", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization", "NuRadioReco/apidoc/NuRadioReco.framework.parameters", "NuRadioReco/apidoc/NuRadioReco.framework.particle", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station", "NuRadioReco/apidoc/NuRadioReco.framework.station", "NuRadioReco/apidoc/NuRadioReco.framework.trigger", "NuRadioReco/apidoc/NuRadioReco.modules", "NuRadioReco/apidoc/NuRadioReco.modules.ARA", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamforming_utilities", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationGalacticCalibrator", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationPulseFinder", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationRFIFilter", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter", "NuRadioReco/apidoc/NuRadioReco.modules.base", "NuRadioReco/apidoc/NuRadioReco.modules.base.module", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.custom", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators", "NuRadioReco/apidoc/NuRadioReco.modules.io", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_metadata", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_utilities", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.readLOFARData", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot.readARAData", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel", "NuRadioReco/apidoc/NuRadioReco.utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator", "NuRadioReco/apidoc/NuRadioReco.utilities.fft", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities", "NuRadioReco/apidoc/NuRadioReco.utilities.ice", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.logging", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses", "NuRadioReco/apidoc/NuRadioReco.utilities.noise", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names", "NuRadioReco/apidoc/NuRadioReco.utilities.signal_processing", "NuRadioReco/apidoc/NuRadioReco.utilities.templates", "NuRadioReco/apidoc/NuRadioReco.utilities.timing", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.units", "NuRadioReco/apidoc/NuRadioReco.utilities.version", "NuRadioReco/pages/code_documentation", "NuRadioReco/pages/detector/antennamodels", "NuRadioReco/pages/detector/detector", "NuRadioReco/pages/detector/detector_database_fields", "NuRadioReco/pages/detector/rnog", "NuRadioReco/pages/detector_tree", "NuRadioReco/pages/event_display", "NuRadioReco/pages/event_structure", "NuRadioReco/pages/how_to/vertex_reconstruction", "NuRadioReco/pages/howto_documentation", "NuRadioReco/pages/nur_modules", "NuRadioReco/pages/utilities", "NuRadioReco/pages/welcome_page", "main"], "filenames": ["Introduction/pages/contributing.rst", "Introduction/pages/conventions.rst", "Introduction/pages/installation.rst", "Introduction/pages/introduction.rst", "Introduction/pages/welcome_page.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5.rst", "NuRadioMC/pages/HDF5_structure.rst", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2.rst", "NuRadioMC/pages/Manuals/event_generation.rst", "NuRadioMC/pages/Manuals/example-multi_station_coincidences.rst", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial.rst", "NuRadioMC/pages/Manuals/icemodels.rst", "NuRadioMC/pages/Manuals/running_on_a_cluster.rst", "NuRadioMC/pages/Manuals/signal_generation.rst", "NuRadioMC/pages/Manuals/signal_propagation.rst", "NuRadioMC/pages/Manuals/simulation_configuration.rst", "NuRadioMC/pages/Manuals/veff_tutorial.rst", "NuRadioMC/pages/code_documentation.rst", "NuRadioMC/pages/manuals.rst", "NuRadioMC/pages/welcome_page.rst", "NuRadioReco/apidoc/NuRadioReco.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses.rst", "NuRadioReco/apidoc/NuRadioReco.detector.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.amp.rst", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties.rst", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse.rst", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.response.rst", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json.rst", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db.rst", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector.rst", "NuRadioReco/apidoc/NuRadioReco.framework.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace.rst", "NuRadioReco/apidoc/NuRadioReco.framework.channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field.rst", "NuRadioReco/apidoc/NuRadioReco.framework.event.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameters.rst", "NuRadioReco/apidoc/NuRadioReco.framework.particle.rst", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamforming_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationGalacticCalibrator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationPulseFinder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationRFIFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.module.rst", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow.rst", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.readLOFARData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.araroot.readARAData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.fft.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.ice.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.logging.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.noise.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.signal_processing.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.templates.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.timing.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.units.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.version.rst", "NuRadioReco/pages/code_documentation.rst", "NuRadioReco/pages/detector/antennamodels.rst", "NuRadioReco/pages/detector/detector.rst", "NuRadioReco/pages/detector/detector_database_fields.rst", "NuRadioReco/pages/detector/rnog.rst", "NuRadioReco/pages/detector_tree.rst", "NuRadioReco/pages/event_display.rst", "NuRadioReco/pages/event_structure.rst", "NuRadioReco/pages/how_to/vertex_reconstruction.rst", "NuRadioReco/pages/howto_documentation.rst", "NuRadioReco/pages/nur_modules.rst", "NuRadioReco/pages/utilities.rst", "NuRadioReco/pages/welcome_page.rst", "main.rst"], "titles": ["Contributing to NuRadioMC", "Some notes on conventions", "Installing NuRadioMC / NuRadioReco", "Introduction", "Introduction", "NuRadioMC.EvtGen package", "NuRadioMC.EvtGen.NuRadioMCtoAraSim module", "NuRadioMC.EvtGen.NuRadioProposal module", "NuRadioMC.EvtGen.create_tau_tab module", "NuRadioMC.EvtGen.generate_cylinder module", "NuRadioMC.EvtGen.generate_unforced module", "NuRadioMC.EvtGen.generator module", "NuRadioMC.EvtGen.generator_ASCII module", "NuRadioMC.EvtGen.generator_skeleton module", "NuRadioMC.EvtGen.hdf5_to_ASCII module", "NuRadioMC.EvtGen.proposal_table_manager module", "NuRadioMC.EvtGen.readARAEventList module", "NuRadioMC.EvtGen.readEventList_ASCII module", "NuRadioMC.SignalGen package", "NuRadioMC.SignalGen.ARZ package", "NuRadioMC.SignalGen.ARZ.ARZ module", "NuRadioMC.SignalGen.HCRB2017 module", "NuRadioMC.SignalGen.askaryan module", "NuRadioMC.SignalGen.emitter module", "NuRadioMC.SignalGen.parametrizations module", "NuRadioMC.SignalProp package", "NuRadioMC.SignalProp.analyticraytracing module", "NuRadioMC.SignalProp.directRayTracing module", "NuRadioMC.SignalProp.propagation module", "NuRadioMC.SignalProp.propagation_base_class module", "NuRadioMC.SignalProp.radioproparaytracing module", "NuRadioMC.simulation package", "NuRadioMC.simulation.simulation module", "NuRadioMC.utilities package", "NuRadioMC.utilities.Veff module", "NuRadioMC.utilities.attenuation module", "NuRadioMC.utilities.cross_sections module", "NuRadioMC.utilities.dump_hdf5 module", "NuRadioMC.utilities.earth_attenuation module", "NuRadioMC.utilities.fluxes module", "NuRadioMC.utilities.inelasticities module", "NuRadioMC.utilities.medium module", "NuRadioMC.utilities.medium_base module", "NuRadioMC.utilities.merge_hdf5 module", "NuRadioMC.utilities.muon_flux module", "NuRadioMC.utilities.plotting module", "NuRadioMC.utilities.runner module", "NuRadioMC.utilities.runner_example module", "NuRadioMC.utilities.split_hdf5 module", "HDF5 output structure", "HDF5 output structure (v2.2)", "Event Generation", "Example: Multi-station coincidences", "Example: Calculating expected sensitivities", "Ice and attenuation models", "Running on a cluster", "Signal Generation (electric field)", "Signal Propagation", "Simulation and configuration", "Example: Calculating effective volume", "Code Documentation", "Manuals", "NuRadioMC Documentation", "NuRadioReco.detector package", "NuRadioReco.detector.ARA package", "NuRadioReco.detector.ARA.analog_components module", "NuRadioReco.detector.ARIANNA package", "NuRadioReco.detector.ARIANNA.analog_components module", "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module", "NuRadioReco.detector.LOFAR package", "NuRadioReco.detector.RNO_G package", "NuRadioReco.detector.RNO_G.analog_components module", "NuRadioReco.detector.RNO_G.db_mongo_read module", "NuRadioReco.detector.RNO_G.db_mongo_write module", "NuRadioReco.detector.RNO_G.rnog_detector module", "NuRadioReco.detector.amp module", "NuRadioReco.detector.antennapattern module", "NuRadioReco.detector.detector module", "NuRadioReco.detector.detector_base module", "NuRadioReco.detector.detector_sql module", "NuRadioReco.detector.detector_sys_uncertainties module", "NuRadioReco.detector.filterresponse module", "NuRadioReco.detector.generic_detector module", "NuRadioReco.detector.response module", "NuRadioReco.detector.sql_to_json module", "NuRadioReco.detector.test_detector_db module", "NuRadioReco.detector.visualize_detector module", "NuRadioReco.framework package", "NuRadioReco.framework.base_shower module", "NuRadioReco.framework.base_station module", "NuRadioReco.framework.base_trace module", "NuRadioReco.framework.channel module", "NuRadioReco.framework.electric_field module", "NuRadioReco.framework.event module", "NuRadioReco.framework.hybrid_information module", "NuRadioReco.framework.hybrid_shower module", "NuRadioReco.framework.parameter_serialization module", "NuRadioReco.framework.parameters module", "NuRadioReco.framework.particle module", "NuRadioReco.framework.radio_shower module", "NuRadioReco.framework.sim_channel module", "NuRadioReco.framework.sim_station module", "NuRadioReco.framework.station module", "NuRadioReco.framework.trigger module", "NuRadioReco.modules package", "NuRadioReco.modules.ARA package", "NuRadioReco.modules.ARA.hardwareResponseIncorporator module", "NuRadioReco.modules.ARA.triggerSimulator module", "NuRadioReco.modules.ARIANNA package", "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module", "NuRadioReco.modules.LOFAR package", "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR module", "NuRadioReco.modules.LOFAR.beamforming_utilities module", "NuRadioReco.modules.LOFAR.stationGalacticCalibrator module", "NuRadioReco.modules.LOFAR.stationPulseFinder module", "NuRadioReco.modules.LOFAR.stationRFIFilter module", "NuRadioReco.modules.RNO_G package", "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module", "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module", "NuRadioReco.modules.analogToDigitalConverter module", "NuRadioReco.modules.base package", "NuRadioReco.modules.base.module module", "NuRadioReco.modules.beamFormingDirectionFitter module", "NuRadioReco.modules.channelAddCableDelay module", "NuRadioReco.modules.channelAntennaDedispersion module", "NuRadioReco.modules.channelBandPassFilter module", "NuRadioReco.modules.channelGalacticNoiseAdder module", "NuRadioReco.modules.channelGenericNoiseAdder module", "NuRadioReco.modules.channelLengthAdjuster module", "NuRadioReco.modules.channelResampler module", "NuRadioReco.modules.channelSignalReconstructor module", "NuRadioReco.modules.channelStopFilter module", "NuRadioReco.modules.channelTemplateCorrelation module", "NuRadioReco.modules.channelTimeOffsetCalculator module", "NuRadioReco.modules.channelTimeWindow module", "NuRadioReco.modules.correlationDirectionFitter module", "NuRadioReco.modules.cosmicRayEnergyReconstructor module", "NuRadioReco.modules.custom package", "NuRadioReco.modules.custom.deltaT package", "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module", "NuRadioReco.modules.efieldAirToIcePropagator module", "NuRadioReco.modules.efieldRadioInterferometricReconstruction module", "NuRadioReco.modules.efieldTimeDirectionFitter module", "NuRadioReco.modules.efieldToVoltageConverter module", "NuRadioReco.modules.efieldToVoltageConverterPerEfield module", "NuRadioReco.modules.electricFieldBandPassFilter module", "NuRadioReco.modules.electricFieldResampler module", "NuRadioReco.modules.electricFieldSignalReconstructor module", "NuRadioReco.modules.eventTypeIdentifier module", "NuRadioReco.modules.iftElectricFieldReconstructor package", "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module", "NuRadioReco.modules.iftElectricFieldReconstructor.operators module", "NuRadioReco.modules.io package", "NuRadioReco.modules.io.LOFAR package", "NuRadioReco.modules.io.LOFAR.rawTBBio module", "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata module", "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities module", "NuRadioReco.modules.io.LOFAR.readLOFARData module", "NuRadioReco.modules.io.NuRadioRecoio module", "NuRadioReco.modules.io.RNO_G package", "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module", "NuRadioReco.modules.io.araroot package", "NuRadioReco.modules.io.araroot.readARAData module", "NuRadioReco.modules.io.coreas package", "NuRadioReco.modules.io.coreas.coreas module", "NuRadioReco.modules.io.coreas.readCoREAS module", "NuRadioReco.modules.io.coreas.readCoREASShower module", "NuRadioReco.modules.io.coreas.readCoREASStation module", "NuRadioReco.modules.io.coreas.readCoREASStationGrid module", "NuRadioReco.modules.io.coreas.simulationSelector module", "NuRadioReco.modules.io.eventReader module", "NuRadioReco.modules.io.eventWriter module", "NuRadioReco.modules.io.event_parser_factory module", "NuRadioReco.modules.io.snowshovel package", "NuRadioReco.modules.io.snowshovel.readARIANNAData module", "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module", "NuRadioReco.modules.measured_noise package", "NuRadioReco.modules.measured_noise.ARIANNA package", "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module", "NuRadioReco.modules.measured_noise.RNO_G package", "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module", "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module", "NuRadioReco.modules.neutrinoDirectionReconstructor package", "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module", "NuRadioReco.modules.neutrinoVertexReconstructor package", "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module", "NuRadioReco.modules.phasedarray package", "NuRadioReco.modules.phasedarray.triggerSimulator module", "NuRadioReco.modules.sphericalWaveFitter module", "NuRadioReco.modules.templateDirectionFitter module", "NuRadioReco.modules.trigger package", "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module", "NuRadioReco.modules.trigger.envelopeTrigger module", "NuRadioReco.modules.trigger.highLowThreshold module", "NuRadioReco.modules.trigger.multiHighLowThreshold module", "NuRadioReco.modules.trigger.powerIntegration module", "NuRadioReco.modules.trigger.rnog_surface_trigger module", "NuRadioReco.modules.trigger.simpleThreshold module", "NuRadioReco.modules.triggerTimeAdjuster module", "NuRadioReco.modules.voltageToAnalyticEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverterPerChannel module", "NuRadioReco.utilities package", "NuRadioReco.utilities.analytic_pulse module", "NuRadioReco.utilities.bandpass_filter module", "NuRadioReco.utilities.cr_flux module", "NuRadioReco.utilities.diodeSimulator module", "NuRadioReco.utilities.fft module", "NuRadioReco.utilities.geometryUtilities module", "NuRadioReco.utilities.ice module", "NuRadioReco.utilities.interferometry module", "NuRadioReco.utilities.io_utilities module", "NuRadioReco.utilities.logging module", "NuRadioReco.utilities.metaclasses module", "NuRadioReco.utilities.noise module", "NuRadioReco.utilities.particle_names module", "NuRadioReco.utilities.signal_processing module", "NuRadioReco.utilities.templates module", "NuRadioReco.utilities.timing module", "NuRadioReco.utilities.traceWindows module", "NuRadioReco.utilities.trace_utilities module", "NuRadioReco.utilities.units module", "NuRadioReco.utilities.version module", "Code Documentation", "Antenna Models", "Detector Description", "Properties of Detector Description", "The RNO-G detector class and database interface", "Detector Description", "Event Display", "Data Structure", "Use the Vertex Reconstruction Modules", "Manuals", "Modules", "Utilities", "NuRadioReco Documentation", "Welcome to NuRadio\u2019s documentation!"], "terms": {"thank": [0, 56, 232, 233], "you": [0, 2, 3, 11, 26, 49, 50, 54, 57, 59, 71, 72, 73, 78, 80, 82, 89, 90, 91, 92, 93, 100, 101, 102, 141, 155, 169, 223, 226, 229, 231, 233, 235, 236], "consid": [0, 2, 11, 26, 27, 29, 30, 34, 38, 51, 52, 56, 58, 74, 97, 111, 114, 115, 183, 200], "i": [0, 1, 2, 3, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 107, 109, 113, 114, 115, 117, 118, 119, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 141, 143, 148, 150, 151, 154, 155, 157, 158, 160, 164, 165, 166, 168, 170, 171, 172, 175, 178, 180, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 221, 222, 223, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237], "intend": 0, "commun": [0, 56, 97], "base": [0, 1, 7, 11, 20, 22, 24, 26, 27, 29, 30, 32, 38, 41, 42, 46, 55, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 157, 158, 160, 165, 166, 167, 168, 169, 170, 171, 174, 175, 178, 180, 181, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 214, 215, 216, 219, 235], "simul": [0, 3, 10, 11, 22, 24, 26, 27, 29, 30, 34, 41, 42, 46, 49, 50, 51, 53, 55, 56, 60, 61, 62, 74, 76, 78, 80, 82, 92, 93, 97, 100, 106, 107, 109, 117, 118, 119, 126, 133, 143, 164, 165, 166, 167, 168, 169, 181, 183, 189, 194, 195, 196, 197, 199, 200, 201, 202, 226, 227, 229, 232, 235], "reconstruct": [0, 3, 39, 56, 58, 59, 71, 78, 80, 82, 97, 109, 111, 117, 118, 122, 133, 135, 136, 141, 142, 147, 150, 171, 175, 183, 186, 187, 201, 202, 223, 227, 229, 232, 234, 235, 237], "softwar": [0, 55, 59, 154], "radio": [0, 2, 3, 11, 21, 22, 24, 30, 49, 51, 53, 56, 57, 59, 88, 93, 95, 97, 99, 126, 136, 141, 150, 160, 167, 201, 222, 227], "neutrino": [0, 1, 3, 10, 11, 21, 22, 24, 30, 32, 36, 38, 39, 49, 51, 52, 55, 56, 58, 59, 89, 92, 97, 101, 102, 132, 148, 183, 219, 232, 233], "detector": [0, 2, 3, 21, 22, 24, 26, 27, 29, 30, 32, 38, 39, 49, 50, 51, 55, 56, 91, 93, 100, 107, 109, 111, 114, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 145, 146, 147, 150, 157, 158, 164, 165, 166, 167, 168, 169, 170, 171, 181, 186, 187, 189, 191, 194, 195, 196, 197, 198, 199, 200, 203, 206, 207, 216, 221, 222, 225, 226, 233, 235, 236, 237, 238], "everyon": 0, "invit": 0, "us": [0, 1, 3, 7, 10, 11, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 46, 49, 50, 52, 53, 55, 57, 58, 59, 72, 73, 74, 77, 78, 80, 82, 83, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 107, 109, 111, 113, 114, 115, 117, 118, 119, 121, 122, 125, 126, 127, 128, 132, 133, 135, 141, 142, 143, 148, 150, 154, 155, 157, 160, 166, 169, 170, 171, 178, 180, 181, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 210, 213, 214, 216, 221, 222, 223, 226, 227, 228, 229, 231, 234, 235, 236], "experi": [0, 51, 56, 113, 115, 119, 227, 232, 235], "If": [0, 2, 3, 7, 10, 11, 20, 21, 24, 26, 27, 29, 30, 32, 41, 42, 49, 50, 51, 52, 56, 58, 59, 71, 72, 73, 74, 76, 77, 82, 83, 89, 90, 91, 92, 93, 100, 101, 102, 103, 107, 109, 115, 117, 118, 119, 125, 127, 128, 130, 133, 141, 150, 154, 155, 157, 158, 160, 165, 166, 168, 170, 171, 180, 181, 186, 189, 200, 201, 208, 213, 214, 216, 218, 221, 226, 227, 228, 231, 232, 236], "significantli": [0, 57], "pleas": [0, 1, 2, 3, 21, 49, 51, 57, 59, 208, 226, 235], "contact": 0, "anel": 0, "cg": 0, "laser": [0, 73], "github": [0, 2, 30, 51, 53, 57, 59, 65, 126, 160], "so": [0, 2, 20, 26, 27, 29, 40, 46, 49, 51, 54, 55, 56, 57, 58, 59, 74, 78, 79, 80, 82, 119, 126, 148, 154, 157, 181, 201, 222, 223, 226, 227, 228, 231, 232, 233, 236], "we": [0, 2, 11, 22, 23, 24, 26, 34, 49, 51, 52, 54, 55, 56, 57, 58, 59, 74, 76, 92, 114, 133, 154, 180, 181, 226, 227, 228, 229, 233, 236], "ar": [0, 1, 2, 3, 7, 10, 11, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 90, 91, 92, 93, 97, 100, 103, 107, 109, 112, 113, 115, 117, 118, 119, 125, 126, 127, 128, 130, 131, 132, 133, 141, 148, 150, 154, 157, 158, 160, 164, 165, 166, 168, 170, 171, 175, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 202, 204, 207, 216, 222, 226, 227, 228, 229, 231, 232, 233, 235, 236], "inform": [0, 7, 11, 22, 23, 24, 26, 27, 29, 30, 38, 49, 50, 51, 54, 56, 57, 58, 59, 72, 73, 74, 76, 93, 115, 119, 127, 150, 158, 160, 170, 189, 221, 226, 227, 229, 235], "about": [0, 22, 23, 24, 26, 27, 29, 30, 34, 49, 50, 58, 59, 72, 73, 93, 117, 227, 232, 236], "ongo": 0, "activ": [0, 10, 21, 26, 32, 73, 131, 231, 236], "both": [0, 2, 20, 24, 51, 52, 54, 56, 57, 76, 83, 113, 150, 154, 166, 171, 189, 202, 214, 226, 227, 228, 232, 233, 235], "also": [0, 2, 11, 20, 26, 27, 29, 30, 34, 41, 42, 49, 51, 54, 56, 57, 58, 59, 62, 74, 78, 80, 82, 91, 100, 102, 113, 114, 119, 121, 126, 141, 150, 154, 155, 157, 181, 187, 201, 214, 221, 223, 227, 229, 232, 233, 235, 237], "abl": [0, 2, 41, 42, 55, 56, 157, 227], "provid": [0, 1, 2, 11, 24, 26, 32, 40, 49, 50, 51, 54, 56, 57, 58, 59, 62, 74, 76, 78, 83, 93, 97, 115, 126, 129, 141, 157, 160, 201, 203, 213, 226, 227, 232, 233, 235, 236, 237], "commit": [0, 56, 97, 224], "access": [0, 2, 41, 42, 49, 50, 51, 54, 56, 72, 73, 76, 78, 97, 158, 160, 227, 232], "repositori": [0, 2, 59, 97, 224, 232], "find": [0, 3, 26, 27, 29, 30, 49, 51, 54, 57, 72, 73, 114, 115, 141, 150, 157, 166, 189, 203, 212, 233], "an": [0, 1, 2, 7, 10, 11, 20, 23, 26, 28, 30, 34, 38, 41, 42, 48, 49, 50, 51, 53, 54, 56, 58, 73, 74, 76, 78, 80, 82, 83, 90, 91, 92, 93, 97, 100, 103, 107, 112, 114, 115, 117, 119, 121, 122, 133, 136, 141, 150, 154, 157, 160, 164, 166, 171, 181, 183, 186, 187, 189, 195, 196, 201, 202, 207, 209, 210, 212, 214, 216, 221, 222, 226, 227, 228, 229, 232, 233, 235, 236], "issu": [0, 51, 56, 189, 194, 198, 199], "bug": 0, "creat": [0, 2, 7, 11, 26, 49, 50, 51, 52, 53, 55, 56, 57, 58, 73, 74, 78, 97, 154, 155, 157, 164, 165, 168, 186, 189, 213, 221, 226, 227, 228, 235, 236], "want": [0, 2, 11, 26, 51, 52, 54, 56, 57, 58, 59, 71, 72, 73, 74, 78, 80, 82, 93, 119, 155, 228, 229, 231, 232, 233, 235, 236], "your": [0, 2, 26, 27, 29, 30, 41, 42, 55, 59, 71, 72, 73, 90, 91, 92, 100, 141, 154, 223, 229, 231, 235], "new": [0, 7, 11, 20, 23, 24, 26, 27, 29, 30, 40, 42, 46, 51, 54, 56, 57, 58, 73, 78, 80, 82, 92, 121, 129, 146, 148, 154, 155, 167, 178, 180, 181, 214, 226, 227, 229, 232, 236], "branch": [0, 40, 51, 235], "make": [0, 11, 26, 51, 52, 56, 58, 59, 109, 113, 118, 141, 160, 169, 218, 227, 231, 232, 233, 235, 236], "pull": [0, 51, 76, 157, 160], "request": [0, 20, 24, 41, 42, 51, 56, 58, 72, 73, 74, 76, 82, 165, 168, 189, 206, 226, 227], "loos": 0, "follow": [0, 2, 11, 26, 29, 34, 40, 41, 49, 50, 51, 52, 54, 55, 57, 58, 59, 73, 77, 93, 115, 119, 136, 171, 201, 226, 227, 228, 235], "git": [0, 2, 97, 224], "flow": 0, "model": [0, 11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 35, 36, 38, 41, 42, 51, 57, 58, 59, 61, 74, 76, 78, 79, 80, 82, 97, 126, 141, 150, 183, 208, 211, 221, 230, 233, 235], "A": [0, 1, 10, 11, 21, 22, 24, 36, 38, 49, 50, 51, 54, 55, 56, 57, 58, 59, 72, 73, 74, 76, 79, 93, 97, 115, 119, 141, 150, 154, 157, 160, 165, 166, 178, 187, 201, 227, 228, 232, 233, 235], "detail": [0, 1, 2, 7, 11, 22, 23, 24, 26, 36, 49, 50, 51, 55, 56, 57, 73, 78, 113, 160, 232], "tutori": [0, 3, 52, 59, 62, 237], "given": [0, 1, 3, 7, 11, 22, 23, 24, 26, 27, 29, 30, 38, 40, 51, 52, 53, 54, 56, 57, 58, 72, 73, 78, 80, 82, 93, 97, 101, 107, 112, 114, 115, 119, 127, 141, 143, 154, 155, 157, 158, 164, 166, 167, 170, 172, 186, 187, 189, 196, 200, 207, 208, 210, 212, 227, 228, 232, 235], "here": [0, 1, 2, 3, 26, 27, 29, 30, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 74, 76, 113, 115, 125, 127, 141, 154, 183, 201, 223, 227, 228, 236], "short": [0, 23, 56, 58], "summari": 0, "below": [0, 1, 2, 7, 11, 21, 26, 38, 49, 51, 53, 54, 56, 57, 58, 74, 80, 119, 125, 150, 154, 160, 189, 194, 198, 199, 206, 226, 235], "The": [0, 1, 2, 7, 10, 11, 20, 24, 26, 27, 28, 29, 30, 34, 38, 40, 41, 42, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 71, 72, 73, 74, 76, 77, 78, 80, 82, 83, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 107, 109, 111, 113, 114, 115, 117, 118, 119, 121, 122, 125, 126, 127, 128, 131, 132, 133, 135, 141, 142, 143, 154, 155, 157, 160, 164, 166, 171, 175, 178, 180, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 212, 214, 216, 218, 222, 226, 228, 230, 231, 232, 233, 235, 236], "master": [0, 51, 53, 58, 65], "reserv": [0, 46], "stabl": [0, 115], "releas": 0, "user": [0, 2, 7, 11, 22, 23, 24, 26, 32, 41, 42, 51, 55, 56, 57, 58, 78, 80, 82, 115, 119, 154, 168, 226, 228, 236], "can": [0, 2, 3, 7, 11, 22, 23, 24, 26, 27, 29, 30, 32, 34, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 72, 73, 76, 78, 80, 82, 88, 91, 95, 97, 99, 100, 103, 109, 115, 117, 118, 119, 125, 127, 128, 133, 141, 148, 150, 154, 155, 157, 158, 160, 166, 169, 171, 175, 181, 183, 189, 194, 195, 196, 197, 198, 199, 200, 201, 215, 216, 221, 223, 226, 227, 228, 231, 232, 233, 235, 236, 237], "alwai": [0, 24, 41, 42, 56, 154, 227, 232, 236], "check": [0, 3, 7, 26, 27, 29, 30, 49, 50, 51, 52, 55, 74, 77, 78, 80, 81, 82, 89, 93, 101, 102, 107, 157, 181, 186, 189, 227, 232, 236], "out": [0, 3, 30, 51, 52, 55, 58, 67, 71, 72, 73, 117, 133, 154, 155, 160, 208, 227, 232], "get": [0, 2, 11, 20, 24, 26, 30, 35, 40, 41, 42, 52, 54, 56, 57, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 92, 93, 103, 109, 118, 119, 133, 143, 154, 155, 157, 170, 181, 207, 208, 210, 219, 227, 232], "latest": [0, 49, 154, 227], "all": [0, 1, 2, 7, 10, 11, 15, 24, 26, 27, 28, 29, 30, 32, 34, 36, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 73, 74, 76, 78, 80, 82, 83, 93, 97, 101, 103, 111, 113, 114, 115, 117, 119, 121, 122, 128, 132, 133, 135, 141, 154, 155, 157, 158, 160, 166, 167, 170, 171, 175, 181, 183, 189, 194, 195, 196, 197, 198, 199, 200, 214, 216, 219, 223, 226, 227, 231, 232, 233, 235, 236], "develop": [0, 20, 226], "happen": [0, 38, 49, 50, 51, 56, 58, 72, 73, 119, 216], "featur": [0, 2, 51, 54, 55, 57, 62, 91, 100, 154, 227, 235, 237], "merg": [0, 49, 50, 51, 52, 58], "after": [0, 46, 51, 58, 78, 80, 82, 90, 91, 92, 97, 100, 103, 115, 119, 143, 157, 171, 189, 208, 216, 227, 232, 235], "review": [0, 22, 24], "sure": [0, 26, 27, 29, 30, 56, 58, 90, 91, 92, 100, 113, 141, 155, 231, 233], "specifi": [0, 1, 7, 10, 11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 49, 50, 51, 54, 55, 56, 57, 58, 59, 72, 73, 74, 76, 78, 80, 82, 83, 89, 91, 100, 101, 102, 109, 117, 118, 119, 125, 126, 127, 128, 131, 134, 135, 143, 145, 148, 150, 154, 155, 160, 168, 171, 172, 175, 181, 183, 186, 189, 194, 195, 196, 197, 198, 199, 200, 206, 212, 214, 216, 226, 227, 228, 229, 235], "when": [0, 11, 26, 30, 32, 42, 49, 51, 54, 56, 57, 58, 72, 73, 74, 77, 82, 89, 93, 101, 102, 109, 118, 133, 141, 154, 155, 160, 171, 181, 183, 201, 210, 216, 227, 228, 229, 233, 235, 236], "allow": [0, 2, 20, 30, 32, 34, 41, 42, 51, 52, 53, 56, 57, 58, 59, 72, 73, 74, 78, 80, 82, 83, 91, 100, 114, 115, 119, 121, 125, 160, 181, 206, 216, 219, 227, 229, 232, 235], "hotfix": 0, "These": [0, 2, 49, 50, 51, 54, 56, 58, 115, 154, 229, 235], "well": [0, 2, 22, 23, 24, 49, 50, 51, 54, 56, 57, 58, 97, 113, 114, 115, 155, 157, 171, 180, 227, 229, 232, 233], "where": [0, 1, 7, 11, 20, 21, 23, 26, 34, 38, 49, 50, 51, 52, 54, 55, 56, 57, 58, 68, 76, 78, 80, 82, 97, 103, 109, 114, 117, 118, 125, 127, 131, 134, 154, 157, 180, 181, 186, 194, 195, 196, 197, 198, 199, 208, 221, 227, 229, 232, 233], "tag": [0, 157], "made": [0, 56, 71, 141], "changelog": 0, "correct": [0, 1, 2, 30, 34, 55, 56, 57, 58, 71, 77, 78, 79, 80, 82, 83, 97, 133, 148, 154, 155, 160, 186, 187, 209, 227, 236], "To": [0, 1, 2, 34, 50, 52, 54, 55, 56, 57, 58, 59, 62, 74, 78, 214, 227, 229, 232, 233, 235, 236, 237], "start": [0, 7, 20, 26, 27, 29, 30, 38, 46, 49, 50, 51, 52, 56, 57, 58, 72, 73, 97, 103, 114, 115, 119, 130, 150, 154, 157, 160, 189, 200, 227, 231, 232], "first": [0, 2, 7, 10, 11, 26, 27, 29, 30, 49, 50, 51, 52, 54, 56, 58, 74, 76, 78, 80, 82, 83, 93, 97, 115, 117, 131, 132, 141, 143, 154, 160, 172, 181, 183, 187, 189, 213, 219, 226, 227, 228, 229, 231, 233], "checkout": 0, "b": [0, 26, 49, 57, 125, 193, 201, 202], "my_new_featur": 0, "which": [0, 1, 2, 7, 10, 11, 20, 23, 26, 27, 28, 29, 30, 32, 34, 38, 41, 42, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 72, 73, 74, 76, 78, 80, 82, 83, 89, 90, 91, 92, 97, 100, 101, 102, 103, 107, 109, 113, 114, 115, 118, 119, 121, 122, 125, 126, 127, 128, 130, 132, 133, 134, 141, 148, 150, 151, 154, 155, 157, 160, 164, 165, 168, 171, 175, 180, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 201, 207, 210, 212, 214, 216, 222, 227, 228, 229, 232, 235, 236], "should": [0, 2, 7, 11, 26, 27, 29, 30, 34, 41, 42, 51, 54, 55, 56, 57, 58, 59, 72, 73, 76, 78, 80, 82, 90, 91, 92, 93, 100, 102, 103, 109, 111, 114, 115, 117, 118, 119, 121, 125, 127, 128, 133, 134, 143, 148, 150, 154, 155, 158, 160, 181, 186, 187, 194, 200, 212, 214, 216, 218, 222, 223, 227, 231, 232, 233, 235], "replac": [0, 20, 42, 82, 109, 118, 121, 125, 155, 227, 235], "line": [0, 3, 20, 21, 22, 24, 26, 28, 34, 51, 55, 56, 59, 125, 141, 145, 187, 189, 206, 212, 235], "now": [0, 2, 56, 57, 58, 74, 154, 174], "written": [0, 11, 32, 51, 56, 57, 58, 72, 73, 154, 171, 223, 227, 232], "fix": [0, 26, 46, 51, 52, 56, 119, 155, 168, 180, 183, 208, 228], "push": 0, "normal": [0, 22, 23, 24, 34, 51, 83, 109, 118, 205, 209, 210, 212, 227], "except": [0, 1, 51, 171, 232], "need": [0, 2, 11, 15, 20, 22, 23, 24, 26, 29, 39, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 76, 78, 80, 82, 103, 107, 115, 119, 125, 128, 141, 154, 166, 169, 178, 181, 187, 189, 194, 195, 196, 197, 198, 199, 201, 202, 208, 216, 222, 223, 226, 227, 228, 229, 232, 233, 236], "includ": [0, 1, 2, 3, 26, 27, 29, 30, 39, 49, 50, 56, 57, 59, 74, 78, 80, 82, 93, 117, 125, 127, 141, 150, 154, 155, 181, 183, 186, 235], "set": [0, 2, 7, 10, 11, 20, 21, 24, 26, 27, 29, 30, 41, 42, 52, 55, 56, 57, 58, 59, 72, 73, 74, 78, 80, 82, 89, 90, 91, 92, 93, 97, 100, 101, 102, 103, 111, 113, 114, 115, 119, 121, 126, 130, 132, 134, 139, 141, 143, 147, 148, 150, 154, 155, 157, 158, 160, 165, 166, 168, 170, 171, 181, 186, 187, 189, 191, 195, 196, 201, 214, 216, 218, 219, 227, 228, 229, 232, 233, 235], "upstream": 0, "initi": [0, 11, 26, 32, 40, 41, 51, 78, 80, 82, 92, 97, 100, 103, 141, 158, 160, 165, 166, 167, 168, 183, 186, 201, 229, 232, 235], "onli": [0, 2, 7, 11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 36, 38, 41, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 67, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 89, 90, 91, 92, 93, 100, 101, 102, 103, 109, 114, 117, 118, 119, 125, 127, 133, 141, 148, 150, 154, 155, 157, 160, 165, 168, 175, 180, 181, 183, 200, 201, 202, 208, 215, 222, 227, 229, 232, 233, 235, 236], "exist": [0, 7, 10, 11, 26, 27, 29, 30, 32, 42, 48, 49, 51, 55, 56, 57, 58, 72, 73, 78, 82, 93, 200, 214, 215, 229, 236], "local": [0, 1, 2, 56, 59, 76, 77, 78, 97, 154, 164], "machin": [0, 57], "origin": [0, 1, 11, 20, 22, 23, 24, 26, 30, 82, 88, 95, 97, 99, 109, 118, 119, 141, 155, 189, 222], "onc": [0, 2, 51, 56, 57, 74, 76, 160, 227, 229, 233], "readi": 0, "befor": [0, 26, 30, 51, 56, 71, 90, 91, 92, 100, 109, 115, 118, 128, 143, 154, 160, 180, 183, 186, 187, 189, 194, 200, 201, 216, 235], "introduc": [0, 41, 42, 58, 236], "more": [0, 1, 7, 11, 20, 22, 26, 27, 29, 30, 34, 41, 42, 49, 50, 51, 55, 56, 57, 58, 78, 97, 115, 117, 127, 150, 157, 160, 171, 226, 227, 228, 229, 232, 235], "them": [0, 26, 27, 29, 46, 51, 56, 58, 74, 76, 83, 117, 119, 157, 160, 180, 181, 229], "clearli": 0, "function": [0, 1, 7, 11, 20, 26, 27, 28, 29, 30, 34, 35, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 56, 57, 58, 67, 71, 72, 73, 74, 76, 77, 78, 82, 83, 89, 93, 101, 102, 103, 109, 113, 114, 115, 117, 118, 119, 125, 130, 134, 150, 154, 155, 157, 158, 160, 165, 166, 168, 170, 172, 181, 183, 200, 201, 202, 206, 207, 210, 214, 221, 222, 227, 232, 233, 235, 236], "have": [0, 1, 2, 3, 7, 10, 11, 20, 30, 36, 41, 42, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 67, 71, 72, 73, 74, 78, 80, 82, 89, 90, 91, 92, 100, 101, 102, 103, 111, 113, 114, 115, 119, 125, 126, 133, 154, 157, 160, 169, 171, 175, 180, 181, 187, 189, 194, 216, 222, 223, 227, 228, 229, 232, 233, 235, 236, 237], "correctli": [0, 22, 23, 24, 49, 50, 51, 115, 228, 231], "comment": [0, 58, 232], "appropri": [0, 26, 51, 155, 200, 227], "reflect": [0, 26, 27, 29, 30, 34, 41, 42, 49, 54, 56, 57, 58, 97, 186, 187, 210, 222, 227], "It": [0, 2, 7, 11, 26, 27, 29, 34, 42, 51, 54, 55, 56, 58, 59, 74, 76, 77, 82, 109, 114, 118, 121, 126, 128, 133, 141, 143, 154, 157, 166, 181, 183, 189, 222, 227, 229, 232, 233, 235], "succesfulli": [0, 2], "complet": [0, 26, 54, 56, 57, 58, 59, 62, 74, 78, 82, 154, 216, 227, 228, 237], "test": [0, 52, 72, 73, 107, 125, 154, 233], "run": [0, 2, 11, 26, 27, 29, 30, 31, 32, 33, 42, 46, 49, 50, 51, 58, 61, 74, 78, 80, 82, 93, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 227, 229, 231, 232, 233, 235], "automat": [0, 2, 11, 26, 30, 42, 54, 55, 56, 57, 58, 78, 80, 82, 90, 91, 92, 100, 148, 154, 189, 226, 227, 232], "each": [0, 3, 7, 20, 22, 23, 24, 26, 27, 29, 30, 34, 38, 49, 50, 51, 52, 55, 56, 58, 72, 73, 74, 92, 103, 113, 115, 117, 121, 127, 133, 139, 141, 144, 154, 155, 160, 165, 167, 168, 183, 186, 189, 198, 200, 201, 202, 203, 208, 212, 216, 227, 228, 229, 232, 233, 235], "time": [0, 7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 39, 46, 49, 50, 51, 52, 57, 58, 72, 73, 74, 76, 78, 79, 80, 82, 83, 89, 90, 91, 92, 97, 100, 101, 102, 103, 107, 114, 115, 119, 121, 122, 125, 126, 127, 129, 130, 131, 133, 134, 141, 143, 150, 154, 155, 157, 160, 175, 178, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 212, 215, 216, 221, 222, 226, 227, 228, 232, 233, 235, 236], "implement": [0, 22, 23, 24, 26, 27, 29, 41, 42, 53, 56, 57, 58, 59, 67, 71, 74, 76, 107, 125, 127, 141, 150, 154, 155, 206, 211, 216, 232, 235], "doe": [0, 2, 22, 24, 26, 27, 29, 30, 42, 49, 51, 56, 58, 72, 73, 82, 90, 91, 92, 100, 119, 125, 154, 157, 181, 186, 187, 200, 227, 232, 233, 236], "break": 0, "anyth": 0, "still": [0, 76, 119, 154, 175, 227, 235], "built": [0, 232, 235], "One": [0, 26, 34, 49, 50, 51, 55, 56, 57, 58, 59, 227], "core": [0, 10, 11, 34, 38, 46, 51, 55, 58, 87, 97, 141, 154, 164, 165, 168], "ha": [0, 7, 11, 20, 26, 49, 51, 52, 54, 55, 56, 57, 58, 59, 74, 78, 80, 82, 83, 89, 93, 100, 101, 102, 103, 126, 127, 150, 154, 157, 160, 169, 181, 201, 206, 208, 209, 222, 226, 227, 229, 232, 233, 235], "approv": [0, 51, 58], "wait": 0, "least": [0, 58, 82, 93, 119, 143, 181, 201, 202, 216], "24": [0, 83, 97], "hour": [0, 55, 236], "even": [0, 52, 56, 58, 72, 73, 113, 127, 154, 155, 157, 233, 235, 236], "been": [0, 11, 20, 26, 51, 56, 57, 58, 67, 71, 82, 93, 103, 113, 115, 119, 154, 171, 208, 226, 227, 233, 235], "other": [0, 26, 27, 29, 30, 51, 54, 56, 57, 59, 74, 82, 83, 113, 115, 117, 125, 133, 141, 148, 154, 160, 166, 175, 180, 181, 186, 202, 216, 227, 229, 232, 235], "mai": [0, 2, 26, 27, 29, 30, 49, 50, 54, 141, 201, 227, 232, 233, 235], "look": [0, 3, 26, 56, 62, 114, 141, 154, 160, 181, 200, 227, 237], "thei": [0, 7, 41, 42, 49, 50, 51, 52, 56, 58, 74, 82, 119, 154, 157, 227, 229, 232, 233, 236], "might": [0, 11, 20, 26, 49, 52, 74, 90, 91, 92, 97, 100, 127, 141, 160, 178, 180, 227, 229], "someth": [0, 59], "miss": [0, 2, 58, 82, 154, 227], "In": [0, 2, 11, 22, 23, 24, 26, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 109, 115, 118, 125, 129, 154, 155, 160, 181, 201, 202, 206, 227, 228, 232, 235], "gener": [0, 1, 2, 5, 10, 13, 15, 23, 24, 26, 27, 29, 30, 40, 42, 48, 49, 50, 58, 61, 82, 93, 97, 107, 125, 127, 139, 143, 154, 165, 168, 180, 181, 186, 187, 216, 232, 235], "try": [0, 158, 160, 213], "industri": 0, "explicitli": [0, 26, 125, 201, 227], "mention": 0, "resort": [0, 56], "best": [0, 51, 56, 150, 229, 235], "practic": [0, 22, 51, 56, 58, 119, 233], "tri": [0, 2, 166, 189], "pep": 0, "8": [0, 34, 38, 56, 58, 97, 141, 155, 169, 208, 216, 222], "extens": [0, 1, 56], "especi": [0, 90, 91, 92, 100], "physic": [0, 1, 22, 24, 38, 51, 56, 113, 122, 154, 160], "behind": 0, "come": [0, 1, 51, 55, 56, 122, 126, 160, 208, 222, 232, 233], "variabl": [0, 2, 21, 41, 42, 51, 56, 57, 72, 73, 115, 157, 160, 166, 229], "defin": [0, 1, 10, 11, 22, 23, 24, 26, 30, 32, 36, 41, 42, 46, 49, 51, 52, 54, 55, 56, 57, 58, 59, 74, 77, 82, 83, 97, 109, 114, 118, 119, 121, 128, 134, 141, 143, 150, 155, 167, 168, 189, 200, 205, 212, 214, 221, 223, 227, 228, 229, 232, 233, 235, 236], "repres": [0, 23, 38, 51, 54, 154, 164], "unit": [0, 7, 11, 20, 22, 23, 24, 26, 27, 29, 30, 34, 35, 36, 38, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 73, 76, 81, 83, 87, 103, 111, 113, 119, 125, 129, 130, 134, 135, 141, 145, 154, 157, 164, 189, 197, 201, 204, 207, 232, 233], "must": [0, 7, 11, 26, 32, 39, 51, 56, 57, 58, 73, 119, 125, 189, 200, 222, 228], "util": [0, 7, 26, 51, 53, 54, 55, 56, 57, 58, 60, 76, 103, 113, 121, 133, 150, 154, 225, 232, 233, 235, 237, 238], "avoid": [0, 7, 26, 27, 29, 157, 166, 214, 227, 232], "ad": [0, 30, 41, 42, 51, 54, 56, 73, 93, 115, 117, 119, 121, 125, 126, 127, 133, 143, 148, 166, 181, 214, 221, 227, 232], "without": [0, 41, 42, 49, 50, 51, 56, 57, 58, 77, 82, 117, 119, 154, 170, 207, 227, 228], "clear": [0, 56, 121, 214], "thi": [0, 2, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 73, 74, 76, 77, 78, 80, 82, 83, 90, 91, 92, 93, 97, 100, 103, 107, 109, 113, 114, 115, 117, 118, 119, 121, 125, 126, 127, 131, 133, 134, 141, 144, 148, 150, 154, 155, 157, 158, 160, 166, 168, 170, 178, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 210, 212, 213, 214, 216, 218, 221, 222, 223, 226, 227, 228, 229, 232, 233, 235, 236], "part": [0, 26, 27, 29, 30, 51, 52, 55, 56, 76, 82, 119, 130, 216, 227, 228, 232], "sourc": [0, 7, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 56, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 180, 181, 183, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227], "python": [0, 2, 3, 20, 28, 42, 52, 55, 57, 58, 59, 72, 73, 154, 212, 213, 216, 227, 231, 235], "human": [0, 34, 59], "readabl": [0, 34, 59, 76], "sphinx": [0, 2], "numpi": [0, 2, 20, 41, 42, 56, 57, 58, 115, 117, 154, 155, 236], "syntax": [0, 78, 80], "briefli": 0, "mean": [0, 10, 11, 26, 34, 38, 51, 52, 56, 74, 78, 80, 82, 83, 90, 91, 92, 97, 100, 103, 107, 119, 141, 160, 175, 181, 208, 226, 229, 231, 233, 235], "like": [0, 2, 34, 42, 54, 56, 57, 58, 59, 82, 97, 115, 157, 186, 201, 227, 232, 233], "def": [0, 51, 52, 54, 58, 141, 201, 235], "example_funct": 0, "x": [0, 1, 11, 21, 26, 30, 39, 40, 45, 46, 51, 52, 56, 57, 58, 76, 79, 80, 97, 113, 141, 143, 151, 154, 155, 168, 186, 187, 190, 193, 201, 202, 210, 212, 226, 228], "y": [0, 1, 11, 20, 26, 30, 45, 51, 52, 55, 56, 57, 58, 73, 76, 80, 83, 97, 141, 143, 154, 155, 168, 187, 190, 212, 226, 228, 233], "mode": [0, 30, 32, 38, 49, 50, 58, 78, 82, 93, 102, 109, 117, 118, 119, 123, 143, 148, 151, 171, 200, 232], "quickli": [0, 52], "one": [0, 2, 10, 11, 15, 20, 26, 34, 36, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 71, 72, 73, 74, 76, 77, 78, 80, 82, 83, 89, 92, 93, 101, 102, 107, 115, 117, 119, 132, 133, 141, 143, 154, 155, 158, 164, 166, 167, 170, 181, 189, 215, 216, 219, 222, 227, 232, 235, 236], "descript": [0, 22, 32, 38, 49, 50, 52, 55, 56, 57, 74, 77, 78, 80, 82, 107, 109, 118, 119, 122, 126, 128, 131, 132, 133, 135, 141, 142, 150, 157, 158, 165, 166, 167, 168, 170, 171, 181, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 216, 226, 229, 232, 237, 238], "method": [0, 7, 20, 22, 24, 26, 27, 29, 30, 32, 34, 38, 41, 42, 46, 56, 57, 58, 72, 73, 74, 76, 78, 79, 80, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 157, 158, 160, 165, 166, 167, 168, 169, 170, 171, 174, 175, 178, 180, 181, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 214, 215, 216, 219, 222, 227, 232, 233, 235, 236], "space": [0, 39, 54, 56, 57, 58, 97, 117, 141, 151, 183, 201, 203, 209, 232, 233], "option": [0, 7, 11, 26, 27, 28, 29, 30, 34, 35, 36, 38, 48, 49, 50, 51, 58, 72, 73, 74, 77, 82, 83, 90, 91, 92, 97, 100, 109, 118, 119, 123, 125, 127, 134, 141, 143, 145, 148, 150, 155, 160, 171, 175, 180, 181, 186, 187, 198, 232, 235], "longer": [0, 97, 119, 233], "while": [0, 51, 56, 83, 221, 227, 232], "current": [0, 2, 10, 11, 22, 26, 27, 29, 30, 36, 38, 40, 50, 51, 59, 67, 71, 72, 73, 75, 78, 80, 82, 97, 115, 143, 148, 155, 160, 165, 168, 189, 214, 224, 227, 232], "enforc": [0, 236], "contain": [0, 3, 7, 11, 22, 24, 26, 30, 32, 34, 49, 50, 51, 54, 55, 56, 58, 59, 65, 72, 73, 74, 76, 78, 80, 82, 97, 115, 117, 119, 126, 128, 132, 150, 154, 155, 157, 158, 160, 166, 167, 171, 180, 181, 210, 216, 221, 222, 227, 228, 229, 231, 232, 233], "multipl": [0, 10, 11, 26, 46, 48, 49, 50, 51, 52, 58, 89, 93, 101, 102, 115, 125, 132, 154, 157, 196, 227, 232, 233, 235], "paragraph": 0, "separ": [0, 26, 27, 29, 30, 49, 50, 52, 55, 59, 92, 113, 114, 227, 232], "newlin": 0, "paramet": [0, 7, 10, 11, 13, 15, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 49, 50, 54, 56, 57, 58, 59, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 87, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 107, 109, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 171, 175, 180, 181, 183, 186, 187, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 218, 221, 222, 227, 235, 236], "float": [0, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 51, 57, 71, 74, 76, 78, 79, 80, 82, 83, 89, 90, 91, 92, 97, 100, 101, 102, 103, 107, 109, 111, 114, 117, 118, 119, 122, 125, 126, 127, 129, 130, 131, 133, 134, 135, 141, 143, 146, 150, 154, 157, 160, 168, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 216, 218, 221, 222], "e": [0, 1, 10, 11, 20, 21, 22, 23, 24, 26, 32, 34, 38, 39, 40, 46, 49, 50, 51, 52, 56, 58, 59, 72, 73, 74, 76, 78, 79, 80, 82, 89, 90, 91, 92, 97, 100, 101, 102, 103, 109, 115, 118, 125, 131, 133, 141, 154, 155, 157, 160, 169, 175, 203, 207, 216, 222, 226, 227, 228, 229, 232, 235, 236], "g": [0, 1, 2, 26, 36, 38, 40, 49, 51, 59, 72, 73, 74, 78, 79, 80, 82, 83, 89, 97, 101, 102, 103, 117, 118, 125, 133, 141, 154, 155, 160, 169, 226, 227, 230, 232, 233, 235, 236], "distanc": [0, 7, 20, 21, 22, 24, 26, 27, 29, 30, 49, 50, 51, 52, 56, 58, 97, 115, 141, 165, 168, 186, 187, 233], "metr": [0, 51, 56, 58], "int": [0, 7, 10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 39, 40, 48, 51, 56, 57, 68, 72, 73, 74, 76, 78, 80, 82, 83, 90, 91, 92, 93, 100, 102, 103, 107, 109, 111, 113, 114, 115, 117, 118, 119, 121, 122, 125, 126, 127, 128, 130, 132, 133, 141, 142, 145, 151, 154, 155, 157, 158, 160, 165, 168, 169, 171, 175, 180, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 201, 202, 206, 208, 209, 214, 216, 218, 222], "str": [0, 26, 27, 29, 30, 36, 39, 52, 58, 72, 73, 74, 76, 78, 80, 82, 83, 89, 90, 91, 92, 100, 101, 102, 113, 115, 121, 123, 141, 155, 157, 160, 180, 181, 202, 212, 214], "default": [0, 7, 10, 11, 15, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 35, 36, 38, 40, 41, 42, 48, 51, 55, 56, 57, 58, 59, 65, 68, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 89, 90, 91, 92, 93, 100, 101, 102, 103, 109, 111, 113, 114, 115, 117, 118, 119, 121, 122, 125, 126, 127, 131, 132, 133, 135, 141, 142, 143, 145, 151, 154, 155, 157, 158, 160, 165, 166, 168, 171, 175, 180, 181, 186, 189, 191, 195, 196, 197, 200, 201, 202, 205, 206, 207, 210, 214, 215, 216, 218, 227, 229, 233, 235], "some": [0, 2, 3, 4, 26, 49, 50, 51, 54, 56, 57, 59, 74, 115, 125, 127, 133, 141, 154, 157, 160, 222, 227, 229, 233, 235, 236, 238], "limit": [0, 7, 26, 30, 34, 39, 53, 56, 122, 127, 135, 229, 233], "from": [0, 1, 2, 3, 7, 11, 15, 20, 21, 22, 24, 26, 27, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 74, 76, 78, 79, 80, 82, 83, 97, 100, 102, 103, 106, 107, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 125, 126, 127, 130, 133, 134, 136, 139, 140, 141, 145, 148, 150, 154, 155, 157, 160, 164, 165, 166, 168, 170, 178, 180, 181, 186, 187, 189, 198, 201, 202, 203, 206, 208, 210, 212, 214, 216, 218, 221, 222, 223, 226, 227, 228, 232, 233, 235, 236], "rest": [0, 51, 56, 58], "do": [0, 2, 20, 26, 30, 34, 41, 42, 51, 55, 56, 59, 76, 97, 119, 154, 160, 180, 181, 200, 212, 227, 229, 232, 233, 236], "slowli": 0, "multilin": 0, "entri": [0, 26, 27, 29, 30, 34, 72, 73, 82, 83, 97, 117, 141, 198, 227], "over": [0, 10, 11, 38, 49, 50, 51, 55, 57, 58, 93, 115, 132, 141, 154, 160, 189, 197, 207, 216, 219, 227, 228, 232, 233, 235], "don": [0, 2, 52, 56, 58, 59, 91, 100, 154, 223], "t": [0, 2, 22, 24, 26, 30, 49, 52, 55, 56, 58, 59, 73, 91, 100, 141, 154, 210, 223], "forget": [0, 154, 223], "indent": [0, 52, 74], "return": [0, 7, 11, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 54, 56, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 107, 109, 111, 114, 115, 117, 118, 119, 122, 125, 127, 130, 141, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 172, 181, 186, 187, 189, 194, 195, 196, 197, 198, 199, 201, 202, 206, 207, 208, 210, 212, 213, 214, 215, 216, 219, 221, 222, 224, 227, 232, 236], "re": [0, 49, 50, 58, 154, 232], "result": [0, 20, 26, 27, 29, 30, 34, 38, 51, 55, 56, 58, 97, 115, 126, 133, 141, 144, 150, 154, 178, 201, 202, 212, 213, 222, 232, 233], "exampl": [0, 3, 11, 26, 27, 29, 30, 34, 49, 50, 55, 56, 58, 61, 62, 67, 71, 72, 73, 74, 78, 80, 82, 83, 115, 125, 155, 160, 180, 181, 201, 223, 227, 228, 232, 233, 235, 236, 237], "block": [0, 58, 97, 115, 117, 157, 160, 235], "1": [0, 2, 7, 10, 11, 12, 20, 26, 27, 29, 30, 32, 34, 38, 39, 41, 42, 49, 51, 54, 56, 57, 58, 73, 76, 77, 83, 97, 103, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 129, 131, 132, 134, 135, 141, 142, 143, 151, 154, 155, 157, 160, 165, 168, 169, 180, 181, 183, 189, 191, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 210, 216, 223, 226, 227, 228, 231, 232, 233], "3": [0, 2, 7, 10, 11, 23, 26, 27, 29, 30, 34, 36, 38, 39, 41, 42, 49, 50, 51, 53, 56, 58, 59, 74, 77, 78, 80, 82, 88, 92, 95, 97, 99, 107, 111, 114, 115, 117, 121, 132, 135, 141, 142, 150, 154, 183, 190, 191, 201, 202, 210, 212, 226], "4": [0, 2, 34, 51, 53, 58, 59, 67, 74, 77, 97, 115, 121, 126, 155, 202, 227], "section": [0, 11, 36, 39, 49, 51, 57, 58, 115, 141, 155, 232, 235], "numpydoc": [0, 2], "most": [0, 1, 2, 11, 26, 51, 53, 54, 55, 56, 58, 117, 186, 227, 232, 233, 236], "ones": [0, 51, 57, 58, 119, 157, 218, 232], "extend": [0, 10, 11, 51, 56, 166, 232], "yield": [0, 56, 157, 160, 229], "see": [0, 2, 11, 22, 26, 35, 36, 38, 40, 49, 50, 51, 56, 57, 58, 74, 76, 77, 78, 80, 97, 119, 125, 130, 133, 141, 155, 160, 189, 202, 226, 231, 232, 235], "note": [0, 2, 4, 7, 15, 20, 21, 22, 26, 27, 29, 30, 34, 38, 41, 42, 49, 57, 58, 59, 90, 91, 92, 97, 100, 109, 113, 115, 118, 119, 125, 127, 150, 154, 155, 157, 160, 164, 201, 214, 218, 222, 235, 238], "titl": [0, 141], "underlin": 0, "same": [0, 7, 11, 20, 24, 26, 30, 41, 42, 49, 50, 51, 52, 58, 59, 74, 76, 78, 80, 82, 90, 91, 92, 100, 113, 117, 119, 125, 127, 133, 154, 155, 171, 180, 181, 189, 200, 206, 219, 226, 227, 228, 232, 233, 235], "hyphen": 0, "length": [0, 7, 11, 20, 26, 27, 29, 30, 35, 36, 39, 41, 42, 51, 54, 56, 57, 58, 74, 76, 78, 80, 82, 90, 91, 92, 97, 100, 103, 112, 117, 119, 125, 130, 141, 143, 154, 157, 183, 189, 200, 216, 218, 226, 232], "abov": [0, 1, 2, 7, 11, 26, 49, 51, 52, 54, 56, 58, 77, 115, 117, 125, 126, 127, 171, 189, 194, 198, 199, 226, 235], "restructuredtext": 0, "consult": [0, 51], "basic": [0, 11, 42, 54, 74, 115, 130, 142, 147, 174, 191], "summar": [0, 53], "publish": [0, 34, 141], "poetri": 0, "open": [0, 2, 51, 52, 55, 76, 115, 141, 157, 158, 164, 213, 227, 231], "pyproject": 0, "toml": [0, 2], "file": [0, 2, 7, 10, 11, 13, 23, 26, 27, 29, 30, 32, 34, 46, 48, 51, 52, 54, 56, 57, 65, 67, 74, 76, 77, 78, 80, 81, 82, 97, 115, 119, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 175, 178, 180, 181, 189, 201, 213, 216, 223, 231, 235], "root": [0, 2, 26, 56, 97, 160], "directori": [0, 2, 7, 15, 55, 57, 59, 68, 76, 78, 80, 81, 82, 113, 115, 154, 155, 157, 160, 180, 181, 201, 231], "under": [0, 26, 54, 57, 59, 62, 237], "tool": [0, 55, 58, 59], "name": [0, 7, 11, 26, 27, 28, 29, 30, 34, 41, 42, 46, 49, 50, 51, 54, 57, 58, 72, 73, 74, 76, 77, 78, 80, 82, 83, 89, 93, 94, 95, 97, 101, 102, 103, 107, 119, 121, 125, 141, 150, 154, 155, 157, 160, 166, 170, 171, 172, 181, 189, 194, 195, 196, 197, 198, 199, 200, 213, 214, 217, 226, 232, 235], "2": [0, 2, 7, 11, 22, 24, 26, 30, 34, 38, 39, 49, 51, 56, 57, 58, 76, 77, 97, 103, 113, 115, 117, 119, 121, 122, 125, 126, 127, 132, 135, 141, 142, 145, 155, 157, 183, 186, 187, 189, 191, 194, 195, 196, 197, 198, 201, 202, 207, 216, 222, 226, 227, 228, 232, 233], "0": [0, 1, 2, 7, 10, 11, 20, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 73, 74, 76, 77, 83, 88, 97, 99, 103, 113, 114, 117, 119, 121, 122, 125, 126, 127, 131, 132, 134, 135, 141, 142, 143, 150, 151, 154, 155, 157, 160, 165, 166, 168, 169, 183, 187, 189, 190, 191, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 212, 219, 221, 222, 226, 227, 228, 231, 232, 233, 236], "semant": 0, "major": [0, 58, 158, 195, 216], "minor": [0, 158], "patch": 0, "maintain": [0, 227], "ensur": [0, 1, 2, 56, 74, 76, 141], "agre": [0, 56], "Then": [0, 26, 49, 51, 52, 58, 107, 115, 121, 183, 214, 221, 227, 231, 235], "add": [0, 2, 41, 42, 51, 55, 56, 58, 59, 82, 83, 93, 101, 117, 123, 126, 127, 141, 148, 151, 157, 180, 181, 214, 226, 229, 231, 232, 235], "21": [0, 97, 126], "accept": [0, 11, 51, 78, 80, 82, 114, 201, 222, 232], "specif": [0, 26, 27, 29, 30, 34, 35, 38, 41, 42, 49, 50, 55, 56, 57, 74, 76, 78, 79, 80, 82, 93, 128, 154, 160, 207, 213, 222, 232, 235], "greater": [0, 20, 26, 51, 56, 119], "ani": [0, 11, 22, 24, 26, 27, 29, 42, 49, 50, 51, 52, 56, 57, 58, 82, 89, 93, 97, 101, 102, 109, 113, 117, 118, 121, 125, 151, 169, 171, 175, 178, 180, 206, 214, 227, 228, 229, 232, 235], "dev": [0, 2], "addition": [0, 228, 232], "requir": [0, 26, 27, 28, 29, 30, 52, 53, 55, 57, 74, 90, 91, 92, 100, 115, 125, 136, 157, 160, 181, 194, 195, 196, 198, 229, 232, 235], "extra": [0, 54, 56, 121, 214, 226], "order": [0, 2, 3, 7, 26, 49, 51, 52, 56, 58, 76, 90, 91, 92, 93, 97, 100, 103, 109, 113, 114, 118, 121, 125, 136, 145, 151, 157, 175, 180, 187, 189, 194, 201, 206, 208, 215, 222, 227, 235], "rtd": 0, "theme": [0, 2], "instal": [0, 3, 4, 28, 30, 41, 42, 51, 55, 57, 59, 160, 231, 238], "apidoc": 0, "ext": 0, "autodoc": [0, 2], "modul": [0, 1, 2, 3, 5, 18, 19, 25, 31, 33, 49, 50, 54, 55, 56, 58, 59, 63, 64, 66, 70, 87, 204, 225, 227, 232, 234, 237, 238], "therefor": [0, 2, 41, 49, 50, 51, 55, 56, 82, 115, 133, 164, 178, 227, 228, 233], "input": [0, 7, 11, 26, 30, 34, 48, 52, 56, 58, 72, 73, 76, 81, 117, 119, 132, 143, 155, 158, 165, 166, 167, 168, 170, 175, 183, 198, 203, 207, 208, 222, 227, 232, 236], "howev": [0, 11, 26, 49, 51, 52, 54, 56, 57, 58, 141, 154, 228, 229], "mani": [0, 26, 27, 29, 30, 34, 49, 50, 51, 52, 55, 56, 59, 115, 128, 201, 216, 232], "case": [0, 2, 10, 11, 26, 27, 29, 30, 41, 42, 49, 51, 52, 55, 56, 57, 58, 78, 79, 80, 82, 91, 93, 100, 119, 125, 154, 181, 202, 206, 227, 228, 232, 235], "extrem": [0, 22, 24, 51], "help": [0, 54, 58], "avail": [0, 2, 7, 11, 22, 23, 24, 26, 51, 52, 56, 57, 58, 62, 72, 73, 81, 119, 155, 160, 175, 228, 237], "take": [0, 7, 20, 49, 51, 55, 56, 57, 58, 59, 74, 76, 83, 97, 115, 119, 122, 141, 154, 181, 186, 216, 227, 233, 235], "differ": [0, 20, 26, 27, 29, 30, 34, 35, 38, 41, 42, 49, 50, 51, 52, 54, 56, 58, 59, 62, 71, 72, 73, 76, 97, 103, 119, 125, 127, 132, 133, 143, 148, 150, 154, 157, 158, 170, 175, 178, 186, 187, 194, 195, 196, 197, 198, 199, 200, 212, 213, 216, 218, 219, 227, 228, 229, 232, 233, 235, 237], "form": [0, 20, 26, 27, 28, 29, 30, 38, 56, 57, 59, 97, 111, 122, 141, 189, 212, 233], "annot": [0, 62, 237], "script": [0, 2, 3, 7, 52, 53, 59, 75, 228, 233, 235], "modifi": [0, 2, 26, 27, 29, 30, 34, 58, 90, 91, 92, 100, 119, 154, 155, 200, 223, 227], "grip": 0, "place": [0, 15, 20, 52, 56, 57, 58, 59, 115, 226, 227], "nuradioreco": [0, 1, 3, 4, 7, 32, 51, 53, 54, 55, 56, 57, 58, 59, 225, 226, 227, 228, 231, 232, 233, 235, 236, 238], "folder": [0, 2, 34, 51, 55, 56, 57, 58, 76, 77, 78, 80, 121, 180, 181, 186, 187, 227, 231, 232], "insid": [0, 2, 114, 232], "confus": [0, 26, 27, 29, 56, 232], "manual": [0, 1, 21, 58, 62, 74, 115, 227, 237, 238], "onlin": [0, 2], "websit": [0, 2], "overview": [0, 1, 57, 59, 113, 170], "page": [0, 49, 50, 53, 55, 58, 228, 229, 232, 238], "found": [0, 2, 3, 26, 27, 29, 30, 41, 54, 56, 57, 58, 59, 62, 74, 115, 141, 150, 154, 181, 227, 232, 236, 237], "templat": [0, 2, 97, 128, 132, 133, 150, 186, 187, 191, 204], "done": [0, 26, 51, 52, 55, 57, 76, 78, 80, 82, 186, 187, 200, 226, 229, 232, 233, 235], "make_doc": 0, "py": [0, 2, 11, 38, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 71, 74, 77, 103, 121, 154, 214, 227, 228, 231, 233, 235], "build": [0, 42, 54], "html": [0, 125], "main": [0, 51, 59, 72, 73, 74, 78, 82, 103, 125, 154, 228], "view": [0, 20, 30, 39, 56, 58, 97, 183, 219], "browser": [0, 227, 231], "symbol": [0, 51], "_": [0, 51], "long": [0, 56, 58, 90, 91, 92, 100, 119, 181, 200, 218, 226, 227, 232, 233, 236], "nest": [0, 27, 29, 97, 216], "determin": [0, 11, 20, 26, 34, 49, 52, 54, 57, 58, 76, 77, 78, 79, 80, 82, 103, 125, 128, 133, 141, 148, 150, 160, 183, 186, 187, 206, 228, 233, 235], "level": [0, 7, 11, 20, 22, 24, 26, 27, 29, 30, 32, 49, 50, 56, 58, 74, 78, 80, 82, 83, 93, 97, 111, 113, 114, 115, 121, 157, 158, 160, 166, 171, 175, 180, 181, 214, 216, 232, 235], "subhead": 0, "subsect": 0, "split": [0, 10, 11, 48, 51, 52, 55, 154, 171, 232], "commonli": [0, 57], "format": [0, 2, 34, 49, 50, 52, 55, 56, 59, 76, 89, 101, 102, 111, 141, 160, 175, 232, 236], "italic": 0, "bold": 0, "singl": [0, 34, 38, 46, 49, 51, 52, 55, 72, 73, 78, 80, 82, 91, 100, 117, 121, 154, 167, 178, 195, 196, 202, 214, 223, 232, 235], "bullet": 0, "point": [0, 2, 11, 26, 27, 29, 30, 34, 38, 41, 42, 49, 51, 54, 56, 57, 58, 59, 76, 79, 88, 95, 97, 99, 111, 115, 119, 126, 141, 154, 186, 187, 189, 207, 212, 221, 227, 228, 229, 232, 233], "enumer": [0, 52, 55, 97, 232], "second": [0, 7, 10, 11, 22, 26, 30, 32, 51, 52, 56, 59, 76, 83, 97, 115, 154, 155, 157, 197, 228, 232, 236], "anoth": [0, 56, 57, 58, 59, 119, 171, 227, 232, 235], "sub": [0, 34, 49, 50, 51, 56], "notic": 0, "its": [0, 2, 34, 49, 51, 52, 56, 57, 58, 71, 78, 80, 82, 89, 93, 97, 101, 102, 121, 136, 151, 154, 157, 160, 214, 227, 229, 232, 236], "parent": [0, 7, 49, 93, 97, 121, 214, 232, 235], "similarli": [0, 227], "continu": [0, 26, 51, 52, 115, 141], "last": [0, 20, 24, 34, 49, 56, 58, 97, 131, 158, 170, 226, 227, 235], "http": [0, 2, 11, 22, 24, 30, 35, 38, 40, 49, 51, 53, 57, 65, 111, 122, 125, 126, 150, 160, 189, 202, 212, 226, 227, 231], "url": [0, 227], "com": [0, 2, 11, 30, 51, 53, 57, 65, 126, 160, 202], "trail": 0, "underscor": [0, 7], "For": [0, 2, 7, 11, 24, 26, 41, 42, 49, 51, 52, 54, 56, 57, 58, 59, 72, 73, 74, 77, 78, 82, 92, 141, 154, 155, 157, 165, 168, 178, 223, 226, 227, 228, 233, 235, 236], "intern": [0, 20, 26, 27, 29, 30, 51, 58, 125, 127, 154, 157, 227, 232, 236], "prefer": [0, 78, 80, 82, 154], "instead": [0, 2, 10, 11, 26, 32, 51, 56, 74, 82, 103, 141, 160, 166, 183, 201, 207, 216, 223, 227, 228, 233, 236], "what": [0, 51, 56, 58, 72, 73, 114, 121, 160, 171, 212, 216, 229, 235], "being": [0, 26, 27, 29, 30, 32, 51, 74, 82, 103, 119, 222, 227, 229], "doc": [0, 53, 125], "introduct": [0, 238], "render": [0, 11], "lead": [0, 56, 59, 90, 91, 92, 100, 109, 118, 150], "path": [0, 2, 7, 11, 15, 20, 26, 27, 29, 30, 32, 38, 49, 50, 51, 55, 56, 58, 65, 67, 68, 71, 76, 78, 80, 82, 97, 115, 133, 155, 157, 160, 186, 187, 219, 224, 227, 231, 232], "ref": 0, "append": [0, 2, 11, 48, 52, 78, 80, 82, 131], "final": [0, 3, 26, 27, 29, 30, 49, 50, 51, 54, 58, 59, 62, 154, 208, 227, 228, 235, 237], "class": [0, 7, 11, 20, 26, 27, 28, 29, 30, 32, 38, 41, 42, 46, 51, 57, 58, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 157, 158, 160, 165, 166, 167, 168, 169, 170, 171, 174, 175, 178, 180, 181, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 214, 215, 216, 219, 230, 233, 235, 236], "etc": [0, 39, 49, 50, 54, 59, 125, 169, 227], "mod": 0, "func": [0, 34], "respect": [0, 1, 2, 20, 26, 28, 51, 56, 74, 78, 82, 103, 154, 167, 189, 210, 227], "logic": [0, 58, 107, 195, 196, 199, 216], "trace": [0, 2, 20, 22, 23, 24, 26, 27, 28, 29, 30, 34, 49, 50, 51, 52, 56, 58, 59, 78, 80, 82, 83, 90, 91, 92, 97, 100, 103, 113, 114, 115, 117, 119, 122, 125, 126, 128, 129, 130, 131, 134, 135, 139, 141, 143, 144, 146, 150, 157, 160, 171, 180, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 203, 205, 208, 209, 212, 216, 222, 232], "framework": [0, 3, 49, 51, 54, 117, 119, 133, 150, 160, 200, 223, 225, 232, 233], "base_trac": [0, 87, 133, 150, 233], "direct": [0, 7, 10, 11, 21, 22, 24, 26, 27, 29, 30, 38, 41, 42, 49, 50, 51, 56, 57, 58, 59, 76, 78, 79, 80, 82, 88, 95, 97, 99, 111, 112, 114, 122, 126, 132, 133, 135, 136, 141, 143, 169, 183, 186, 187, 191, 201, 202, 210, 212, 219, 222, 228, 232, 235], "languag": 0, "As": [0, 2, 46, 51, 52, 54, 56, 58, 113, 125, 155, 232, 233, 235, 236], "r": [0, 10, 11, 20, 21, 22, 24, 26, 27, 29, 30, 36, 38, 49, 50, 51, 56, 57, 58, 59, 141, 154, 186, 187, 210, 233], "5": [0, 26, 27, 29, 30, 34, 36, 49, 51, 52, 53, 54, 55, 56, 57, 58, 72, 73, 97, 107, 115, 117, 127, 131, 132, 150, 155, 169, 187, 195, 196, 198, 201, 202, 208, 216, 219, 223, 226, 232, 233, 236], "nuradiomc": [1, 3, 4, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 65, 67, 71, 76, 97, 103, 117, 133, 160, 224, 227, 232, 233, 235, 238], "cartesian": [1, 30, 49, 50, 111, 189, 210], "surfac": [1, 11, 26, 27, 29, 30, 34, 38, 41, 42, 49, 52, 56, 58, 59, 71, 73, 80, 187, 198, 210, 226], "axi": [1, 11, 20, 21, 22, 24, 26, 30, 34, 52, 56, 58, 74, 76, 78, 80, 82, 88, 95, 97, 99, 141, 207, 212, 228, 233], "toward": [1, 88, 95, 97, 99, 226], "east": [1, 49, 58, 74, 76, 78, 79, 80, 82, 210, 228], "north": [1, 58, 74, 78, 79, 80, 82, 97], "z": [1, 10, 11, 26, 30, 35, 41, 42, 45, 51, 54, 57, 58, 80, 97, 141, 143, 155, 186, 187, 190, 212, 228, 233], "upward": [1, 26, 74, 76, 78, 80, 82, 122, 228], "antenna": [1, 49, 50, 52, 56, 58, 59, 73, 74, 76, 78, 79, 80, 82, 91, 97, 100, 107, 111, 112, 113, 115, 122, 126, 133, 139, 141, 143, 144, 154, 155, 157, 166, 168, 183, 187, 189, 191, 195, 196, 201, 202, 208, 222, 227, 229, 230, 233, 235], "posit": [1, 7, 10, 11, 20, 26, 36, 38, 41, 42, 45, 49, 51, 52, 54, 56, 57, 58, 59, 72, 73, 74, 76, 77, 78, 79, 80, 82, 92, 97, 111, 112, 125, 133, 141, 143, 150, 154, 155, 157, 164, 165, 166, 168, 183, 186, 187, 189, 190, 201, 206, 210, 212, 222, 227, 228, 229, 232, 233], "typic": [1, 34, 41, 49, 52, 55, 58, 59, 92, 154, 232], "center": [1, 11, 38, 39, 52, 74, 78, 82, 155, 186, 187, 226, 233], "station": [1, 7, 11, 32, 34, 51, 58, 59, 61, 67, 72, 73, 74, 77, 78, 79, 80, 82, 83, 87, 89, 92, 93, 97, 101, 103, 106, 107, 109, 111, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 157, 160, 164, 165, 166, 167, 168, 171, 178, 180, 181, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 216, 221, 222, 227, 228, 229], "zenith": [1, 10, 11, 34, 38, 49, 50, 51, 58, 74, 76, 78, 79, 80, 82, 87, 88, 95, 97, 99, 122, 132, 135, 141, 164, 186, 202, 207, 210, 212, 219, 222, 228, 232], "theta": [1, 20, 21, 22, 24, 30, 34, 56, 58, 74, 76, 78, 79, 80, 82, 150, 210, 212, 226, 233], "deg": [1, 26, 34, 56, 83, 135, 216, 232, 233], "90deg": [1, 97, 122], "horizon": [1, 126], "180": [1, 52, 226, 228], "downward": [1, 26, 58, 59, 228], "azimuth": [1, 10, 11, 38, 49, 50, 51, 57, 58, 74, 76, 78, 79, 80, 82, 87, 88, 95, 97, 99, 122, 132, 135, 164, 187, 202, 210, 212, 219, 222, 228, 233], "phi": [1, 56, 57, 74, 76, 78, 79, 80, 82, 150, 187, 210, 212, 226], "count": [1, 26, 27, 29, 30, 34, 55, 74, 76, 78, 79, 80, 82, 119, 175, 189, 228, 232], "northward": [1, 228], "came": [1, 38], "opposit": [1, 38, 49, 154], "propag": [1, 7, 11, 25, 26, 27, 29, 30, 32, 38, 49, 50, 51, 54, 56, 58, 59, 61, 74, 97, 140, 210, 233], "through": [1, 7, 23, 38, 41, 42, 49, 50, 51, 52, 54, 56, 57, 58, 74, 76, 89, 101, 102, 107, 111, 122, 141, 157, 158, 170, 175, 183, 200, 201, 227, 228, 231, 232], "earth": [1, 7, 11, 38, 49, 51, 58, 155], "launch_vector": [1, 26, 27, 29, 30, 49, 50, 57], "askaryan": [1, 18, 20, 21, 24, 56, 59, 97, 233], "signal": [1, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 35, 39, 49, 50, 52, 58, 59, 61, 71, 72, 73, 74, 76, 78, 80, 82, 83, 97, 107, 109, 111, 114, 118, 122, 125, 128, 130, 133, 134, 135, 136, 139, 141, 142, 147, 150, 160, 169, 183, 186, 187, 189, 191, 194, 195, 196, 197, 198, 199, 208, 210, 212, 221, 222, 229, 232, 233, 236], "emit": [1, 26, 56, 57, 97], "reach": [1, 11, 26, 27, 29, 30, 38, 49, 51, 56, 58, 186, 232], "quantiti": [1, 11, 73, 97, 130, 147, 212, 223], "auger": [1, 223], "print": [1, 26, 83, 216, 223, 227, 235, 236], "plot": [1, 2, 26, 33, 34, 39, 52, 53, 57, 59, 63, 83, 126, 141, 150, 183, 186, 187, 201, 207, 216, 231, 233], "convert": [1, 20, 34, 53, 58, 72, 81, 97, 119, 143, 160, 164, 203, 223, 227, 228], "dimension": [1, 34, 52, 56, 92, 115, 223, 233], "conveni": [1, 34, 49, 50, 51, 55, 56, 89, 101, 102, 117, 206, 214], "encod": [1, 10, 11, 36, 51, 63, 76, 78, 113, 160, 213], "pdg": [1, 7, 36, 49, 50, 51, 97, 217], "relev": [1, 7, 10, 11, 15, 26, 27, 29, 30, 34, 36, 49, 51, 54, 56, 59, 78, 89, 101, 102, 119, 125, 169, 180, 181, 206, 209, 227, 228], "id": [1, 10, 11, 32, 34, 49, 50, 51, 58, 68, 72, 73, 74, 78, 80, 82, 83, 91, 92, 93, 97, 99, 100, 101, 102, 103, 107, 109, 115, 117, 118, 122, 125, 127, 130, 132, 133, 142, 143, 150, 154, 155, 157, 160, 164, 165, 166, 167, 175, 180, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 201, 202, 216, 217, 222, 227, 232], "u": [1, 10, 11, 51, 56, 57, 58, 229], "12": [1, 10, 11, 12, 20, 36, 51, 58, 97, 126], "14": [1, 10, 11, 12, 36, 51, 58, 97, 236], "16": [1, 10, 11, 12, 36, 51, 97, 103, 141, 157, 189, 198, 216], "electron": [1, 10, 11, 36, 49, 51, 97, 131, 223, 229], "muon": [1, 7, 10, 11, 34, 36, 49], "tau": [1, 7, 10, 11, 22, 36, 40, 49, 51, 232], "overal": [1, 189, 235], "minu": [1, 11, 26, 51, 58, 114], "sign": [1, 10, 11, 26, 36, 51, 150], "indic": [1, 7, 11, 41, 42, 51, 56, 73, 115, 154, 195, 222], "correspond": [1, 7, 11, 26, 27, 29, 30, 38, 40, 49, 52, 56, 76, 83, 92, 97, 100, 115, 119, 133, 141, 143, 154, 157, 164, 186, 187, 200, 201, 210, 218, 227, 228, 232, 235], "anti": [1, 10, 11, 36, 51], "tabl": [1, 7, 11, 15, 49, 51, 54, 154, 155, 160, 186, 187, 212, 227], "event": [1, 2, 7, 10, 11, 13, 21, 30, 32, 34, 39, 40, 48, 49, 50, 52, 55, 56, 58, 61, 82, 87, 89, 97, 101, 102, 103, 107, 109, 111, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 145, 146, 147, 148, 150, 154, 157, 158, 160, 165, 166, 167, 168, 169, 170, 171, 175, 178, 181, 183, 186, 187, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 221, 235, 236, 237, 238], "6": [2, 10, 11, 22, 24, 34, 38, 39, 51, 97, 107, 114, 117, 125, 132, 155], "unix": [2, 74], "oper": [2, 20, 56, 58, 73, 83, 104, 149, 232], "system": [2, 11, 20, 38, 51, 57, 65, 76, 97, 107, 155, 202, 204, 231, 233], "linux": [2, 155], "maco": 2, "window": [2, 56, 58, 97, 103, 107, 114, 125, 130, 131, 134, 141, 183, 189, 194, 195, 196, 197, 198, 199, 200, 205, 212, 216, 218, 221], "subsystem": 2, "subpackag": [2, 60, 225], "import": [2, 3, 26, 27, 29, 30, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 74, 117, 126, 160, 178, 180, 227, 229, 232, 233, 235, 236], "cannot": [2, 56, 155], "contribut": [2, 4, 49, 50, 51, 56, 238], "recent": 2, "download": [2, 15, 76, 226], "clone": 2, "nu": [2, 11, 30, 51, 53, 57, 97, 160, 183], "alreadi": [2, 7, 26, 27, 29, 30, 53, 54, 57, 73, 74, 78, 82, 113, 115, 117, 119, 133, 160, 171, 214, 222, 236], "up": [2, 10, 11, 22, 24, 26, 41, 42, 48, 49, 50, 51, 52, 55, 56, 90, 91, 92, 97, 100, 117, 121, 125, 126, 127, 133, 154, 155, 181, 183, 186, 201, 210, 214, 227, 233], "navig": [2, 7, 51], "cd": [2, 55, 59], "python3": 2, "install_dev": 2, "launch": [2, 20, 26, 27, 29, 30, 49, 50, 57, 97], "interact": [2, 7, 10, 11, 21, 22, 24, 36, 38, 39, 40, 49, 50, 51, 56, 58, 59, 93, 97, 189, 233], "highli": 2, "recommend": [2, 26, 27, 29, 51, 56, 89, 101, 102, 119, 154, 178, 181, 227, 233], "virtual": [2, 26], "environ": [2, 55, 73], "either": [2, 11, 20, 22, 24, 26, 41, 42, 56, 57, 58, 76, 78, 117, 133, 200, 203, 216], "m": [2, 7, 11, 22, 24, 30, 38, 51, 52, 54, 56, 57, 58, 97, 151, 201, 202, 207, 212, 236], "venv": 2, "name_of_venv": 2, "manag": 2, "conda": 2, "reason": [2, 51, 56, 189, 227, 229], "work": [2, 30, 42, 49, 50, 51, 54, 55, 56, 57, 59, 65, 67, 71, 72, 73, 76, 78, 80, 82, 103, 141, 150, 155, 186, 187, 201, 227, 232, 233, 235], "addit": [2, 3, 11, 22, 23, 24, 26, 27, 29, 34, 49, 50, 51, 57, 71, 72, 73, 78, 92, 114, 125, 141, 154, 227, 230, 232, 235], "instruct": [2, 49, 50, 57], "export": [2, 33, 34, 55, 57, 70, 74], "profil": [2, 20, 21, 22, 26, 27, 29, 30, 41, 42, 54, 56, 57, 97, 133, 141], "termin": [2, 227], "zprofil": 2, "bashrc": 2, "zshrc": 2, "non": [2, 34, 36, 54, 56, 160, 178], "command": [2, 3, 59, 227], "scipi": [2, 117, 125, 145, 206, 207, 218], "matplotlib": [2, 26, 53, 57, 58, 232, 233], "astropi": [2, 72, 73, 74, 78, 80, 82, 89, 101, 102, 160, 227], "tinydb": [2, 78], "serial": [2, 59, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 232], "aenum": 2, "h5py": [2, 49, 50, 52], "mysql": [2, 78, 227], "pymongo": [2, 72, 73], "dash": [2, 231], "plotli": 2, "peakutil": 2, "radiotool": [2, 55, 88, 95, 99, 141, 212], "newer": 2, "advanc": [2, 49, 56], "enum": [2, 97, 160, 170, 216, 232], "": [2, 7, 11, 26, 35, 36, 38, 51, 54, 56, 57, 58, 72, 73, 74, 76, 78, 82, 97, 103, 113, 151, 169, 180, 189, 208, 210, 212, 215, 222, 223, 227, 229, 232], "hdf5": [2, 10, 11, 13, 23, 32, 34, 48, 51, 52, 58, 59, 62, 157, 164, 165, 166, 167, 168, 232, 238], "uproot": [2, 160], "rno": [2, 56, 72, 73, 74, 83, 117, 118, 160, 226, 230, 233], "awkward": 2, "databas": [2, 63, 67, 70, 71, 72, 73, 74, 78, 80, 82, 83, 160, 230], "sql": [2, 77, 78, 80, 227], "datbas": 2, "mongodb": [2, 72, 73], "displai": [2, 56, 89, 101, 102, 223, 237, 238], "show": [2, 3, 34, 52, 54, 55, 57, 58, 83, 141, 207, 216, 232], "nuradiorecotempl": 2, "document": [2, 3, 7, 36, 51, 57, 58, 76, 78, 119, 226, 228], "readthedoc": 2, "our": [2, 3, 51, 52, 56, 58, 59, 119, 131, 226, 229], "docstr": [2, 232], "action": 2, "code": [2, 7, 11, 20, 26, 52, 54, 55, 56, 57, 58, 62, 74, 97, 115, 125, 154, 160, 223, 233, 235, 237, 238], "sphinx_rtd_them": 2, "debug": [2, 26, 27, 28, 29, 30, 32, 59, 74, 83, 106, 109, 118, 122, 124, 126, 127, 129, 130, 132, 134, 135, 139, 140, 141, 142, 143, 147, 150, 160, 164, 167, 169, 181, 183, 186, 187, 189, 190, 201, 216, 233, 235], "propos": [2, 7, 11, 15, 51, 141], "evtgen": [2, 51, 55, 60], "nuradiopropos": [2, 5, 11], "7": [2, 7, 11, 34, 35, 38, 51, 55, 97, 155, 207], "particular": [2, 74, 93, 107, 194, 195, 196, 197, 198, 199], "eg": 2, "mac": 2, "kernel": 2, "too": [2, 56, 115, 126, 154, 227, 233], "old": [2, 73, 160, 229, 232], "comput": [2, 10, 11, 26, 27, 29, 30, 51, 52, 56, 78, 80, 82, 126, 130, 201, 203, 233], "cluster": [2, 15, 46, 51, 52, 61], "refer": [2, 26, 32, 38, 49, 50, 51, 56, 57, 58, 71, 77, 78, 80, 82, 102, 113, 115, 119, 125, 154, 189, 210, 216, 219, 227, 228, 235], "step": [2, 30, 38, 52, 55, 59, 119, 141, 187, 189, 201, 226, 232, 233, 235], "guid": 2, "channelgalacticnoiseadd": [2, 104], "pygdsm": [2, 126], "telegraph": [2, 126], "speed": [2, 26, 56, 125, 183, 233, 236], "analyt": [2, 22, 26, 27, 28, 29, 49, 50, 54, 58, 76, 183, 201, 205, 207], "rai": [2, 3, 11, 20, 24, 26, 27, 28, 29, 30, 34, 49, 50, 54, 56, 58, 59, 89, 92, 97, 100, 101, 102, 114, 132, 133, 139, 142, 148, 183, 186, 187, 201, 207, 219, 232], "gsl": 2, "gsl_dir": 2, "On": [2, 55, 113], "sudo": 2, "apt": 2, "libgsl": 2, "brew": 2, "homebrew": 2, "With": [2, 26, 56, 232], "compil": [2, 15, 35, 57], "cpp": [2, 26, 54], "tracer": [2, 11, 26, 27, 28, 29, 30, 42, 49, 50, 54], "signalprop": [2, 56, 57, 60], "sh": 2, "radiopropa": [2, 28, 30, 41, 42], "numer": [2, 20, 26, 27, 28, 29, 30, 56, 201, 205, 212, 223], "read": [2, 11, 26, 30, 56, 58, 59, 67, 71, 72, 73, 76, 83, 89, 97, 101, 102, 115, 119, 154, 155, 157, 158, 160, 165, 166, 167, 168, 170, 175, 180, 181, 213, 229], "arianna": [2, 55, 56, 63, 76, 78, 80, 82, 104, 175, 176, 195, 196, 216, 226, 227, 232], "snowshovel": [2, 104, 152, 232], "ara": [2, 23, 63, 76, 104, 226, 227], "welcom": 3, "two": [3, 11, 20, 26, 34, 41, 42, 49, 50, 51, 52, 56, 58, 59, 72, 73, 76, 119, 125, 135, 154, 171, 183, 186, 187, 202, 212, 216, 227, 228, 229, 232, 233], "packag": [3, 57, 60, 62, 126, 157, 225, 237], "mont": [3, 56, 62], "carlo": [3, 56, 62], "high": [3, 22, 24, 51, 56, 58, 59, 103, 109, 118, 154, 195, 196, 216], "energi": [3, 7, 10, 11, 20, 21, 22, 24, 34, 36, 39, 40, 49, 50, 51, 52, 53, 55, 56, 58, 59, 87, 97, 136, 150, 169, 183, 201, 205, 207, 232, 233], "cosmic": [3, 89, 92, 97, 101, 102, 114, 132, 142, 148, 201, 207, 219], "familiar": 3, "yourself": 3, "how": [3, 26, 27, 29, 30, 46, 49, 51, 52, 53, 54, 55, 56, 58, 109, 118, 128, 150, 155, 216], "self": [3, 26, 51, 54, 58, 72, 73, 74, 115, 160, 166, 186, 187, 235], "subfold": [3, 55, 62, 180, 231, 237], "hand": [3, 57, 62, 113, 237], "webinar": [3, 58, 62, 237], "pip": 3, "version": [3, 15, 22, 26, 49, 50, 56, 57, 121, 125, 158, 172, 204, 213, 223, 227], "__path__": 3, "nuradiomc_path": 3, "locat": [3, 7, 56, 58, 68, 82, 128, 143, 154, 186, 212, 233, 235], "convent": [4, 49, 50, 51, 56, 172, 210, 228, 238], "nuradiomctoarasim": 5, "secondaryproperti": [5, 7, 51], "particle_cod": [5, 7], "is_em_primari": [5, 7], "is_had_primari": [5, 7], "is_shower_primari": [5, 7], "proposalfunct": [5, 7, 51], "get_secondaries_arrai": [5, 7, 11, 51], "get_decai": [5, 7, 51], "create_tau_tab": 5, "generate_cylind": 5, "generate_unforc": [5, 51], "generate_eventlist_cylind": [5, 10, 11, 51, 55], "load_input_hdf5": [5, 11], "get_tau_95_length": [5, 11], "write_events_to_hdf5": [5, 11], "primary_energy_from_deposit": [5, 11], "ice_cube_nu_fit": [5, 11], "ice_cube_nu_fit_2022": [5, 11], "get_energy_from_flux": [5, 11], "get_product_position_tim": [5, 11], "get_energi": [5, 11], "set_volume_attribut": [5, 11], "generate_vertex_posit": [5, 11], "intersection_box_rai": [5, 11], "get_intersection_volume_neutrino": [5, 11], "is_in_fiducial_volum": [5, 11], "mask_arrival_azimuth": [5, 11], "generate_surface_muon": [5, 11, 51], "generator_ascii": 5, "generate_eventlist": [5, 12], "generator_skeleton": 5, "generate_my_ev": [5, 13], "hdf5_to_ascii": 5, "proposal_table_manag": 5, "produce_proposal_t": [5, 15], "get_compil": [5, 15], "produce_proposal_tables_tarbal": [5, 15], "download_proposal_t": [5, 15], "readaraeventlist": 5, "read_ara_eventlist": [5, 16], "convert_to_hdf5": [5, 16], "readeventlist_ascii": 5, "read_eventlist": [5, 17], "shower_typ": [7, 20, 22, 24, 49, 50, 51, 56, 58, 183, 233], "parent_energi": 7, "object": [7, 11, 20, 26, 27, 29, 30, 32, 38, 40, 41, 42, 46, 51, 52, 54, 56, 58, 72, 73, 74, 76, 77, 78, 79, 83, 88, 89, 90, 92, 93, 94, 98, 100, 101, 102, 103, 106, 107, 109, 111, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 178, 180, 181, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 216, 219, 227, 229, 232, 233], "store": [7, 11, 23, 34, 49, 50, 51, 52, 55, 57, 74, 76, 82, 83, 89, 90, 91, 92, 93, 97, 100, 101, 102, 103, 117, 119, 133, 141, 144, 154, 155, 160, 181, 186, 187, 189, 198, 200, 226, 227, 229, 232, 233], "properti": [7, 11, 32, 34, 49, 50, 51, 54, 58, 78, 80, 82, 115, 119, 133, 141, 183, 227, 229, 230, 232, 235, 236], "secondari": [7, 11, 30, 49, 51, 58, 103], "particl": [7, 10, 11, 22, 36, 49, 50, 56, 87, 93, 97, 114, 217], "vertex": [7, 10, 11, 20, 21, 22, 24, 38, 45, 49, 50, 51, 56, 58, 87, 97, 133, 183, 186, 187, 234], "whether": [7, 30, 49, 50, 51, 56, 57, 58, 77, 107, 117, 232], "shower": [7, 11, 20, 21, 22, 24, 30, 34, 49, 50, 51, 58, 88, 91, 92, 93, 95, 97, 99, 100, 101, 133, 136, 140, 141, 164, 183, 227], "induc": [7, 11, 22, 51, 56, 67, 97, 106, 109, 118], "hadron": [7, 20, 22, 24, 40, 51, 56], "electromagnet": [7, 20, 22, 24, 40, 49, 51, 56, 97, 212], "accord": [7, 11, 20, 36, 51, 57, 58, 76, 112, 141, 164, 183, 189, 200, 212], "particle_nam": [7, 51, 204], "pp_type": 7, "integ": [7, 10, 11, 26, 27, 29, 30, 34, 36, 49, 51, 82, 93, 119, 135, 150, 154, 165, 168, 186, 187, 189, 221, 222], "interaction_typ": [7, 11, 47, 49, 50, 51, 87, 97], "particle_typ": 7, "none": [7, 10, 11, 15, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 38, 40, 41, 42, 45, 48, 51, 52, 54, 56, 58, 67, 72, 73, 74, 76, 78, 80, 82, 83, 89, 90, 91, 92, 93, 97, 99, 100, 101, 102, 103, 107, 109, 115, 117, 118, 119, 121, 122, 125, 126, 127, 128, 130, 132, 134, 135, 141, 142, 143, 144, 145, 147, 150, 154, 155, 157, 158, 160, 164, 165, 166, 168, 171, 175, 180, 181, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 214, 216, 218, 220, 221, 222, 227, 235], "argument": [7, 26, 27, 29, 30, 32, 40, 51, 56, 58, 59, 72, 73, 74, 76, 77, 83, 93, 141, 143, 160, 197, 201, 222], "type": [7, 11, 20, 22, 24, 26, 27, 29, 30, 36, 38, 39, 40, 49, 51, 56, 58, 59, 72, 73, 74, 76, 78, 79, 80, 82, 87, 89, 90, 91, 92, 97, 100, 101, 102, 103, 119, 125, 127, 133, 143, 148, 150, 154, 160, 175, 178, 183, 186, 187, 191, 207, 208, 215, 216, 227, 228, 231, 232, 233], "true": [7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 49, 50, 51, 52, 53, 56, 57, 58, 72, 73, 74, 78, 80, 82, 83, 89, 93, 101, 102, 103, 109, 117, 118, 119, 125, 126, 127, 133, 134, 135, 141, 150, 154, 158, 160, 166, 169, 170, 171, 175, 180, 181, 183, 186, 187, 189, 190, 195, 196, 197, 201, 202, 216, 222, 227, 229, 236], "primari": [7, 10, 11, 51, 72, 73, 74, 97, 103, 189, 229], "fals": [7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 49, 50, 51, 53, 56, 57, 58, 72, 73, 74, 78, 80, 82, 83, 89, 90, 91, 92, 93, 100, 101, 102, 103, 106, 109, 115, 117, 118, 119, 122, 124, 126, 127, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 147, 150, 154, 158, 160, 164, 166, 167, 169, 170, 171, 175, 180, 181, 183, 186, 187, 189, 191, 195, 196, 197, 201, 202, 207, 216, 222], "otherwis": [7, 21, 30, 49, 50, 58, 73, 78, 80, 82, 93, 103, 106, 109, 118, 127, 133, 154, 155, 160, 181, 200, 202], "pp": 7, "bool": [7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 32, 34, 51, 56, 72, 73, 74, 78, 80, 82, 83, 89, 93, 101, 102, 109, 117, 118, 119, 125, 126, 127, 130, 132, 135, 141, 142, 143, 147, 150, 154, 160, 166, 169, 171, 175, 180, 181, 183, 189, 191, 194, 195, 196, 197, 199, 201, 202, 207, 216], "arg": [7, 20, 26, 27, 29, 30, 34, 42, 58, 72, 73, 76, 77, 78, 80, 82, 151], "kwarg": [7, 11, 20, 22, 23, 26, 27, 29, 30, 32, 42, 46, 47, 72, 73, 76, 77, 78, 80, 82, 93, 151], "serv": [7, 51, 232], "doubl": [7, 41, 51, 52, 115, 141, 165, 212], "outsid": [7, 11, 49, 51, 59, 130, 134, 175], "mismatch": 7, "config_fil": [7, 11, 15, 32, 51, 55, 58], "string": [7, 10, 11, 13, 15, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 38, 40, 41, 42, 48, 51, 56, 57, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 89, 90, 91, 92, 93, 100, 101, 102, 103, 107, 109, 118, 119, 125, 127, 130, 134, 145, 148, 150, 154, 158, 160, 166, 170, 171, 175, 181, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 213, 216, 233], "own": [7, 11, 49, 51, 56, 58, 59, 97, 232, 236], "config": [7, 11, 26, 27, 29, 30, 32, 47, 49, 50, 51, 54, 55, 57, 97, 119, 141], "choos": [7, 11, 26, 27, 29, 30, 34, 51, 56, 58, 77, 119, 168, 207, 228], "among": [7, 11, 51, 72, 73, 74], "southpol": [7, 11, 15, 51, 52, 211], "south": [7, 11, 35, 51, 54, 56, 58, 78, 80, 82, 226], "pole": [7, 11, 35, 51, 54, 56, 58, 78, 80, 82, 203, 226], "spheric": [7, 11, 49, 51, 56, 57, 190, 210, 212], "consist": [7, 11, 26, 51, 52, 56, 59, 74, 92, 100, 227, 233, 235, 236], "km": [7, 11, 34, 51, 55, 56, 59, 223, 233, 236], "deep": [7, 11, 26, 34, 40, 41, 42, 51, 52, 56, 226], "layer": [7, 11, 26, 27, 29, 30, 38, 41, 42, 51, 54, 56, 57, 58, 212], "ic": [7, 11, 22, 26, 27, 29, 30, 32, 34, 35, 36, 41, 42, 51, 56, 57, 58, 59, 61, 71, 97, 133, 140, 183, 204, 222, 226, 232, 233], "bedrock": [7, 11, 41, 42, 51], "air": [7, 11, 26, 51, 54, 76, 78, 79, 80, 82, 91, 97, 100, 136, 140, 210, 222, 226, 227], "mooresbai": [7, 11, 15, 51, 58, 78, 80, 82, 136], "moor": [7, 11, 26, 35, 51, 54, 58], "bai": [7, 11, 26, 35, 51, 54, 58], "576": [7, 11, 51, 54], "2234": [7, 11, 51], "water": [7, 11, 26, 34, 36, 51, 58], "infic": [7, 11, 15, 51], "medium": [7, 11, 26, 27, 29, 30, 32, 33, 34, 36, 42, 51, 54, 56, 57, 133, 210, 226, 233], "infinit": [7, 11, 30, 51, 78, 79, 80, 82, 226], "greenland": [7, 11, 15, 35, 41, 51, 54, 56, 58, 74], "summit": [7, 11, 41, 51, 74, 164, 227], "log_level": [7, 11, 26, 27, 29, 30, 32, 74, 83, 122, 129, 130, 135, 143, 144, 147, 158, 160, 168, 170, 171, 180, 181, 189, 195, 200, 216], "log": [7, 11, 26, 27, 29, 30, 32, 39, 51, 56, 74, 83, 111, 113, 114, 115, 121, 157, 158, 160, 166, 170, 171, 180, 181, 204, 216, 226], "tables_path": [7, 11, 15], "save": [7, 10, 11, 34, 49, 50, 51, 52, 55, 58, 59, 73, 76, 78, 141, 171, 183, 186, 187, 201, 227, 228, 232, 233, 235], "regener": [7, 232], "sever": [7, 10, 11, 49, 50, 51, 55, 56, 58, 83, 91, 92, 100, 132, 158, 170, 178, 189, 212, 227, 232, 235], "minut": 7, "everi": [7, 49, 50, 51, 52, 56, 58, 59, 72, 73, 114, 115, 119, 126, 157, 181, 227, 232, 233, 235, 236], "execut": [7, 51, 55, 57, 59, 115, 121, 148, 183, 186, 201, 202, 227, 235], "proposal_t": [7, 15], "seed": [7, 11, 20, 22, 24, 58, 127, 165, 168, 180, 181], "upper_energy_limit": 7, "ev": [7, 34, 51, 55, 58, 59, 207, 223, 233], "There": [7, 56, 58, 62, 154, 227, 237], "error": [7, 26, 27, 29, 30, 74, 93, 117, 160, 181, 189, 207, 227], "inject": 7, "valu": [7, 20, 21, 24, 26, 27, 29, 30, 34, 38, 40, 51, 52, 58, 73, 74, 76, 78, 80, 82, 83, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 107, 109, 111, 113, 115, 117, 118, 119, 121, 126, 141, 143, 154, 155, 157, 160, 166, 175, 181, 183, 189, 195, 196, 200, 201, 202, 208, 214, 216, 218, 223, 227, 228, 229, 235, 236], "create_new": [7, 78, 236], "forc": [7, 51, 78, 80, 82, 130, 148, 160, 175, 178, 180, 181, 202], "creation": [7, 30, 51, 78, 119, 236], "By": [7, 51, 74, 78, 133, 181, 210, 215, 227, 233, 235], "__init__": [7, 51, 54, 78, 80, 158, 227, 235], "singleton": [7, 78, 204, 215], "metaclass": [7, 78, 204], "energy_leptons_nu": 7, "lepton_cod": 7, "lepton_positions_nu": 7, "lepton_direct": 7, "low_nu": [7, 51], "500000000000000": 7, "propagation_length_nu": 7, "1000000": [7, 46], "min_energy_loss_nu": [7, 51], "propagate_decay_muon": [7, 51], "lepton": [7, 11, 22, 40, 49, 51], "list": [7, 10, 11, 24, 26, 27, 29, 30, 32, 34, 49, 50, 51, 52, 55, 58, 72, 73, 74, 76, 78, 80, 82, 83, 90, 91, 92, 93, 97, 100, 101, 103, 114, 115, 117, 119, 122, 125, 126, 127, 128, 132, 134, 135, 141, 142, 150, 154, 155, 157, 158, 160, 165, 166, 167, 168, 169, 175, 180, 181, 187, 189, 191, 194, 195, 198, 206, 216, 226, 227, 228, 229], "arrai": [7, 10, 11, 20, 22, 23, 24, 26, 27, 29, 30, 34, 36, 38, 39, 40, 41, 42, 45, 49, 50, 51, 52, 56, 57, 58, 71, 74, 76, 78, 80, 82, 83, 88, 90, 91, 92, 95, 99, 100, 103, 107, 109, 111, 114, 115, 117, 118, 119, 122, 125, 126, 127, 133, 135, 141, 145, 154, 155, 170, 175, 183, 186, 187, 189, 194, 195, 196, 197, 198, 199, 201, 202, 206, 207, 208, 209, 210, 212, 216, 221, 222, 227], "tupl": [7, 11, 26, 34, 38, 51, 56, 78, 80, 82, 92, 100, 103, 117, 151, 154, 157, 158, 160, 208, 221, 222], "normalis": [7, 208], "low": [7, 51, 52, 58, 103, 154, 160, 175, 195, 196, 216, 221, 226, 233], "control": [7, 22, 26, 51, 56, 58, 72, 73, 97, 154, 158, 180, 189], "minimum": [7, 10, 11, 40, 50, 51, 56, 57, 58, 97, 107, 109, 111, 114, 118, 127, 168, 187, 201, 208], "discard": [7, 154], "maximum": [7, 10, 11, 20, 23, 26, 27, 29, 30, 34, 40, 49, 50, 51, 52, 56, 57, 58, 97, 103, 107, 109, 111, 117, 118, 119, 125, 127, 128, 130, 133, 139, 141, 150, 158, 160, 165, 168, 171, 186, 187, 189, 198, 206, 208, 221, 228, 233], "select": [7, 20, 49, 52, 72, 73, 74, 77, 114, 134, 150, 160, 165, 168, 169, 181, 227, 229, 231], "decai": [7, 40, 51, 56], "secondaries_arrai": [7, 51], "2d": [7, 23, 26, 41, 42, 51, 52, 56, 57, 141, 154, 155, 164, 186, 189], "dimens": [7, 26, 27, 29, 30, 34, 51, 56, 233], "index": [7, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 38, 41, 42, 49, 50, 54, 56, 57, 76, 98, 122, 132, 133, 135, 141, 151, 160, 189, 210, 212, 216, 226, 227, 231, 232, 238], "produc": [7, 11, 15, 45, 49, 51, 59, 83, 126, 131, 178, 183, 186, 218, 232, 233], "100000000000000": 7, "decays_arrai": 7, "element": [7, 11, 51, 56, 113, 115, 232], "filenam": [10, 11, 12, 13, 16, 17, 32, 34, 37, 43, 48, 51, 52, 55, 58, 74, 78, 115, 154, 157, 158, 170, 171, 181, 213, 216, 231], "n_event": [10, 11, 12, 13, 40, 49, 50, 51, 55, 87, 97], "emin": [10, 11, 12, 49, 50, 51, 52, 55, 87, 97], "emax": [10, 11, 12, 49, 50, 51, 55, 87, 97], "full_rmin": [10, 51], "full_rmax": [10, 51], "full_zmin": [10, 51], "full_zmax": [10, 51], "thetamin": [10, 11, 34, 49, 50, 51, 87, 97], "thetamax": [10, 11, 49, 50, 51, 87, 97], "141592653589793": [10, 11, 34], "phimin": [10, 11, 49, 50, 51, 87, 97], "phimax": [10, 11, 49, 50, 51, 87, 97], "283185307179586": [10, 11, 39], "start_event_id": [10, 11, 12, 49, 50, 51, 87, 97], "flavor": [10, 11, 12, 15, 20, 36, 38, 47, 49, 50, 51, 59, 87, 97], "n_events_per_fil": [10, 11, 48, 51, 55], "spectrum": [10, 11, 21, 22, 23, 24, 51, 56, 90, 91, 92, 97, 100, 115, 117, 119, 127, 150, 201, 207, 209, 222, 235, 236], "log_uniform": [10, 11, 51], "start_file_id": [10, 11, 51], "charg": [10, 11, 20, 22, 36, 51, 56, 59, 97, 223], "currend": [10, 11, 51], "neutral": [10, 11, 36, 51, 59, 97], "inelastivii": [10, 11], "distribut": [10, 11, 24, 40, 45, 46, 51, 56, 117, 127, 141, 150, 165, 168, 181], "output": [10, 11, 13, 15, 22, 23, 24, 26, 27, 29, 30, 32, 34, 46, 48, 51, 53, 56, 58, 59, 62, 76, 115, 119, 130, 143, 154, 155, 171, 181, 189, 208, 221, 232, 235, 236, 238], "number": [10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 36, 39, 40, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 68, 73, 74, 76, 78, 80, 82, 90, 91, 92, 97, 100, 103, 107, 111, 114, 115, 117, 119, 125, 126, 127, 128, 150, 154, 155, 157, 158, 160, 165, 166, 167, 168, 169, 171, 175, 180, 181, 186, 187, 189, 194, 195, 196, 197, 198, 199, 206, 208, 209, 216, 222, 227, 228, 232, 236], "randomli": [10, 11, 20, 51, 165, 168, 181], "chosen": [10, 11, 26, 51, 52, 56, 90, 91, 92, 100, 119, 154, 178, 202, 221, 232], "assum": [10, 11, 26, 34, 38, 51, 52, 56, 58, 76, 113, 115, 133, 143, 154, 155, 158, 170, 174, 202, 203, 207, 210, 216, 226, 227, 233], "uniform": [10, 11, 41, 51], "logarithm": [10, 11, 34, 51, 76], "lower": [10, 11, 34, 41, 51, 56, 90, 91, 92, 100, 119, 125, 126, 133, 141, 150, 160, 169, 187, 201, 206, 207, 214, 232], "coordin": [10, 11, 20, 26, 30, 38, 41, 42, 49, 50, 51, 56, 57, 58, 76, 78, 79, 80, 82, 97, 111, 141, 155, 164, 168, 186, 187, 189, 210, 212, 233], "volum": [10, 11, 32, 34, 39, 49, 50, 52, 53, 55, 56, 58, 61, 87, 97, 164, 187, 233], "fiduci": [10, 11, 49, 50, 51, 97], "vertic": [10, 11, 26, 45, 49, 50, 51, 57, 58, 59, 186, 189, 226, 228], "upper": [10, 11, 34, 41, 51, 52, 90, 91, 92, 100, 125, 126, 133, 141, 150, 160, 169, 187, 201, 206, 207, 232], "5x": 10, "angl": [10, 11, 20, 21, 22, 24, 26, 27, 29, 30, 34, 38, 39, 49, 51, 56, 57, 58, 76, 78, 79, 80, 82, 88, 95, 97, 99, 103, 122, 132, 135, 141, 164, 183, 189, 201, 207, 210, 212, 216, 219, 228, 232, 233], "arriv": [10, 11, 26, 30, 49, 50, 51, 56, 58, 88, 95, 97, 99, 111, 112, 122, 133, 135, 141, 169, 210, 233], "start_ev": [10, 11, 51], "pdf": [10, 11, 40, 51, 53, 111, 122, 189], "scheme": [10, 11, 36, 51], "neg": [10, 11, 26, 36, 38, 51, 56, 115, 150, 236], "per": [10, 11, 20, 26, 34, 38, 39, 48, 49, 50, 51, 52, 55, 56, 58, 74, 78, 80, 82, 103, 111, 115, 117, 125, 127, 143, 154, 155, 157, 160, 189, 194, 195, 196, 197, 198, 199, 203, 216, 219], "smaller": [10, 11, 26, 51, 55, 58, 109, 118, 233], "than": [10, 11, 26, 30, 34, 49, 50, 51, 56, 58, 74, 76, 90, 91, 92, 100, 109, 118, 119, 132, 141, 157, 171, 189, 216, 222], "probabl": [10, 11, 38, 49, 51, 52, 58, 221], "uniformli": [10, 11, 34, 51], "data": [10, 11, 15, 26, 27, 29, 30, 32, 34, 52, 54, 55, 56, 59, 65, 72, 73, 74, 76, 82, 83, 93, 97, 106, 109, 113, 114, 115, 118, 126, 127, 128, 129, 141, 143, 154, 155, 157, 158, 160, 171, 174, 175, 178, 180, 181, 200, 203, 207, 223, 226, 227, 228, 231, 233, 235, 237, 238], "deposit": [10, 11, 34, 49, 50, 51, 87, 97], "memori": [11, 56, 76, 78, 233], "fin": [11, 52], "dictionari": [11, 24, 26, 27, 29, 30, 32, 34, 42, 49, 50, 51, 72, 73, 74, 77, 78, 80, 82, 89, 97, 101, 102, 103, 115, 130, 143, 150, 157, 160, 171, 175, 180, 181, 183, 189, 200, 232], "fit": [11, 26, 51, 54, 56, 58, 97, 111, 114, 117, 122, 135, 141, 150, 160, 181, 183, 190, 191, 198, 201], "95": [11, 51, 58], "percentil": [11, 51], "track": [11, 26, 49, 50, 55, 56, 121, 154, 227, 236], "calcul": [11, 20, 21, 22, 24, 26, 27, 29, 30, 32, 34, 36, 38, 39, 40, 49, 51, 52, 54, 55, 56, 58, 61, 74, 76, 97, 103, 107, 112, 114, 115, 126, 130, 132, 133, 139, 142, 147, 150, 154, 157, 164, 168, 186, 187, 189, 191, 194, 195, 196, 197, 198, 199, 201, 207, 208, 210, 212, 216, 219, 221, 222, 233, 235, 236], "largest": [11, 56, 141, 186, 226, 233], "data_set": 11, "attribut": [11, 32, 38, 55, 57, 115, 160, 214], "write": [11, 26, 27, 29, 30, 52, 54, 55, 58, 89, 101, 102, 171, 198, 223], "dataset": [11, 49, 50, 160], "easi": [11, 56, 59, 227, 229, 232], "multiprocess": 11, "desir": [11, 23, 48, 51, 57, 122, 127, 128, 129, 146, 157, 169, 189, 218], "part000x": [11, 48], "dict": [11, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 72, 73, 74, 76, 78, 80, 82, 89, 97, 101, 102, 103, 115, 117, 125, 127, 130, 154, 157, 160, 180, 181, 189, 194, 195, 196, 197, 198, 199, 200, 206], "meta": [11, 59, 92], "additional_interact": 11, "potenti": [11, 20, 49, 56], "edep": 11, "ccnc": [11, 20, 40, 87, 97], "inelast": [11, 33, 49, 50, 51, 87, 97], "nc": [11, 36, 40, 49, 51, 97], "cc": [11, 20, 36, 40, 49, 51, 97], "slope": [11, 58, 97, 150, 201, 205], "19": [11, 58, 97, 103, 198], "offset": [11, 26, 80, 97, 117, 119, 128, 154, 157, 160, 186, 189, 216], "01": [11, 26, 30, 52, 58, 68, 126, 221, 227], "37": [11, 54], "44": [11, 39], "flux": [11, 33, 51, 207], "rnd": [11, 40], "minumum": 11, "solid": [11, 34, 39, 51, 207], "area": [11, 34, 38, 49, 50, 51, 56, 87, 97, 164, 165, 168, 186, 207], "random": [11, 20, 22, 24, 40, 58, 59, 119, 127, 165, 168, 175, 178, 180, 181], "product": [11, 40, 51, 56], "ie": [11, 154], "secondary_properti": 11, "d": [11, 22, 24, 25, 26, 34, 36, 38, 52, 56, 57, 58, 76, 141, 207, 226, 236], "elaps": 11, "sinc": [11, 56, 57, 58, 97, 119, 121, 126, 127, 154, 222, 226, 227, 232, 236], "present": [11, 26, 27, 29, 30, 51, 55, 56, 58, 76, 78, 80, 82, 117, 154, 171, 181, 214], "spectrum_typ": 11, "enrgi": 11, "certain": [11, 39, 49, 50, 52, 54, 57, 58, 89, 101, 102, 165, 169, 229, 232], "total": [11, 36, 39, 49, 50, 51, 52, 55, 83, 97, 115, 154, 160, 216, 218, 222], "minim": [11, 26, 51, 52, 109, 117, 118, 150], "icecub": [11, 51], "2017": [11, 22, 51, 52, 58], "astrophys": [11, 51], "measur": [11, 51, 52, 56, 67, 68, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 109, 113, 114, 118, 127, 181, 198, 202, 207, 228, 229, 232, 233], "sampl": [11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 40, 49, 50, 51, 52, 56, 58, 59, 74, 78, 80, 82, 90, 91, 92, 97, 100, 114, 115, 117, 119, 127, 128, 129, 141, 143, 146, 150, 154, 155, 157, 160, 165, 168, 178, 181, 189, 195, 196, 205, 208, 209, 212, 216, 222, 228, 232, 233, 236], "doi": [11, 22, 24, 34, 35, 38, 40, 49, 51, 141], "org": [11, 22, 24, 35, 38, 40, 49, 51, 111, 122, 125, 126, 150, 189, 212, 226], "10": [11, 20, 21, 22, 24, 34, 35, 38, 40, 46, 49, 51, 55, 58, 59, 90, 91, 92, 97, 100, 125, 141, 147, 158, 165, 168, 190, 196, 197, 201, 202], "22323": [11, 49, 51], "301": [11, 51], "1005": [11, 51], "gzk": [11, 51], "van": [11, 51], "vliet": [11, 51], "et": [11, 36, 51, 58, 126], "al": [11, 36, 51, 58, 126], "2019": [11, 51, 56], "arxiv": [11, 35, 40, 51, 111, 122, 126, 141, 150, 189], "ab": [11, 35, 49, 51, 52, 126, 141, 150], "1901": [11, 51], "01899v1": [11, 51], "proton": [11, 51], "fraction": [11, 20, 26, 27, 29, 30, 38, 40, 41, 42, 51, 52, 58, 59, 109, 118, 178], "get_proton_10": 11, "sensit": [11, 52, 55, 61, 114, 228], "e2_fluxes3": [11, 53], "ta": 11, "po": [11, 74, 79, 141], "sissa": 11, "395": [11, 49], "338": 11, "combin": [11, 34, 49, 50, 51, 52, 56, 72, 73, 74, 83, 154, 160, 175, 180, 235], "cosmogen": [11, 51], "2022": 11, "helper": [11, 26, 27, 29, 30, 76, 78, 109, 118, 125, 207, 210, 236], "interpret": [11, 22, 23, 24, 56, 77, 89, 101, 102, 117, 127, 141], "dictinari": [11, 160], "rmin": [11, 49, 50, 51, 87, 97], "rmax": [11, 45, 49, 50, 51, 87, 97], "zmin": [11, 45, 49, 50, 51, 87, 97], "zmax": [11, 49, 50, 51, 87, 97], "xmin": [11, 40, 49, 87, 97, 168], "xmax": [11, 20, 40, 49, 56, 87, 97, 141, 168], "ymin": [11, 49, 87, 97, 168], "ymax": [11, 40, 49, 87, 97, 168], "explan": [11, 56, 58, 74], "blow": 11, "mandatori": [11, 58], "full": [11, 20, 26, 34, 46, 51, 52, 56, 59, 154, 160, 216, 227, 232, 233], "end": [11, 26, 27, 29, 30, 32, 46, 55, 58, 73, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 122, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 157, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 208, 218, 222, 235], "pass": [11, 26, 27, 29, 32, 38, 51, 56, 58, 72, 73, 74, 76, 77, 78, 80, 82, 107, 117, 121, 125, 130, 150, 160, 165, 166, 168, 171, 180, 186, 201, 208, 214, 221, 227, 232, 236], "configur": [11, 15, 26, 27, 29, 30, 51, 54, 56, 57, 59, 61, 72, 73, 74, 78, 80, 82, 119, 160, 214, 227, 235], "threshold": [11, 51, 52, 58, 97, 103, 107, 115, 189, 194, 195, 196, 197, 198, 199, 201, 216, 232], "within": [11, 34, 49, 50, 51, 59, 141, 157, 165, 168, 194], "mu": [11, 21, 51, 56], "trigger": [11, 32, 34, 46, 49, 50, 51, 52, 55, 56, 58, 59, 71, 74, 78, 80, 82, 87, 89, 93, 97, 101, 102, 104, 107, 114, 119, 130, 154, 157, 160, 175, 178, 180, 181, 189, 200, 216, 221, 228], "obvious": 11, "sens": [11, 56, 59, 235], "henc": [11, 26, 27, 29, 30, 52, 55, 56, 198, 229], "determind": 11, "depend": [11, 26, 27, 29, 30, 35, 51, 54, 56, 57, 58, 71, 72, 73, 77, 78, 80, 82, 141, 154, 160, 183, 194, 198, 227, 229, 231, 233], "free": [11, 56], "tl": 11, "dr": 11, "larg": [11, 51, 52, 58, 74, 90, 91, 92, 100, 141, 154, 227, 233], "enough": [11, 46, 51, 52, 56, 58, 90, 91, 92, 100, 111, 114, 200, 232, 233], "necessari": [11, 26, 41, 42, 51, 55, 56, 57, 58, 72, 73, 74, 154, 160, 170, 227], "becaus": [11, 26, 49, 50, 51, 52, 54, 56, 58, 59, 74, 226, 228], "cylind": [11, 51], "min": [11, 34, 127, 141], "max": [11, 30, 34, 127, 141, 165], "radiu": [11, 38, 51, 58, 165], "cube": 11, "fiducial_": 11, "full_": 11, "optin": [11, 141], "horizont": [11, 26, 30, 52, 57, 97, 187, 212, 226, 233], "displac": [11, 56, 119, 226], "x0": [11, 20, 26, 76, 97], "y0": [11, 76], "shift": [11, 41, 42, 90, 91, 92, 100, 133, 141, 143, 174, 189, 201, 212, 233], "via": [11, 22, 23, 24, 26, 27, 29, 30, 49, 50, 51, 54, 58, 76, 201, 202, 216, 227, 232], "dicitionari": 11, "bound": [11, 52, 90, 91, 92, 100, 126, 133, 150, 160, 187, 207], "intersect": [11, 97, 141, 212], "between": [11, 20, 21, 22, 24, 26, 27, 29, 30, 41, 42, 49, 51, 52, 54, 56, 57, 58, 76, 97, 103, 111, 113, 115, 119, 122, 126, 127, 133, 141, 150, 154, 157, 160, 165, 168, 183, 186, 187, 189, 195, 196, 207, 210, 212, 216, 222, 227, 232, 233, 235, 236], "align": [11, 228], "box": [11, 55, 68], "adapt": [11, 38, 54, 112, 223], "www": 11, "scratchapixel": 11, "lesson": 11, "3d": [11, 26, 27, 29, 30, 49, 50, 57, 210, 228], "simpl": [11, 23, 26, 38, 41, 42, 49, 51, 52, 56, 57, 58, 59, 75, 81, 89, 101, 102, 128, 194, 199, 201, 213, 227, 236], "shape": [11, 23, 26, 27, 29, 30, 42, 49, 50, 52, 111, 117, 168, 201, 202, 206, 216], "definit": [11, 26, 56, 97, 154, 223, 228], "definiton": 11, "dim": [11, 30, 38, 74, 78, 80, 82, 92, 122, 135], "vector": [11, 20, 26, 27, 29, 30, 38, 49, 50, 56, 57, 58, 74, 76, 78, 79, 80, 82, 83, 88, 95, 97, 99, 111, 141, 201, 210, 212, 226, 228], "fiducial_rmax": [11, 49, 50, 51, 55, 87, 97], "plus_minu": [11, 51], "mix": [11, 51], "proposal_kwarg": 11, "max_n_events_batch": 11, "100000": 11, "atmospher": [11, 56, 97, 141, 212], "studi": [11, 51, 52, 56, 58, 71, 82, 180, 181, 227, 235], "plu": [11, 51, 56, 92, 154], "els": [11, 51, 155], "cross": [11, 26, 36, 39, 51, 56, 58, 132, 141, 195, 196, 201, 203], "1e6": [11, 55], "numb": 11, "batch": [11, 55, 233], "cut": [11, 30, 34, 38, 58, 122, 128, 160, 169, 181, 200, 201, 202, 221, 222], "appli": [11, 26, 27, 29, 30, 34, 52, 56, 57, 58, 80, 83, 90, 91, 92, 93, 100, 103, 109, 113, 114, 117, 118, 119, 125, 133, 144, 145, 149, 150, 151, 154, 160, 186, 187, 189, 194, 198, 201, 208, 210, 216, 221, 222, 233, 235], "state": [11, 227, 232], "proposal_config": [11, 51], "proposal_tables_path": 11, "write_ev": 11, "0deg": [11, 76, 78, 79, 80, 82, 228], "48550": 11, "2111": 11, "10299": 11, "atrribut": 11, "chose": 11, "exclus": [11, 74], "skeleton": 13, "tarbal": 15, "desi": 15, "precalcul": 15, "storag": [15, 233], "araeventlist_filenam": 16, "hdf5_filenam": 16, "arz": [18, 22, 49, 50, 97], "get_vector_potenti": [18, 19, 20], "get_vector_potential_numba": [18, 19, 20], "thetaprime_to_theta": [18, 19, 20], "theta_to_thetaprim": [18, 19, 20], "arz_tabul": [18, 19, 20], "hcrb2017": [18, 22], "get_time_trac": [18, 19, 20, 21, 22, 23, 24, 56], "get_frequency_spectrum": [18, 21, 22, 23, 56, 87, 90, 91, 92, 100, 232, 233], "gauss": [18, 21, 141], "get_n_askdeptha": [18, 21], "set_log_level": [18, 22, 24], "emitt": [18, 26, 56, 57], "parametr": [18, 22, 38, 76, 183, 207], "get_parametr": [18, 24], "em_fract": [19, 20], "set_se": [19, 20], "set_interpolation_factor": [19, 20], "set_interpolation_factor2": [19, 20], "get_shower_profil": [19, 20], "get_last_shower_profile_id": [19, 20], "get_vector_potential_fast": [19, 20], "shower_energi": [20, 49, 50, 56, 58, 87, 97], "n": [20, 21, 22, 23, 24, 25, 26, 30, 41, 42, 49, 52, 54, 55, 56, 57, 58, 76, 113, 119, 141, 151, 155, 157, 183, 201, 202, 205, 207, 209, 210, 212, 216, 219, 226, 233], "dt": [20, 21, 22, 23, 24, 49, 50, 52, 56, 76, 87, 97, 195, 196, 197, 233], "profile_depth": 20, "profile_c": 20, "af": 20, "freq_po": 20, "freq_neg": 20, "exp_po": 20, "exp_neg": 20, "t0_po": 20, "t0_neg": 20, "had": [20, 21, 22, 24, 49, 51, 52, 56, 58, 97, 183, 233], "n_index": [20, 21, 22, 24, 56, 76, 122, 135, 190, 233], "78": [20, 41, 54, 56, 58], "interp_factor": [20, 22, 56], "interp_factor2": [20, 22, 56], "100": [20, 22, 24, 26, 30, 51, 52, 54, 55, 56, 57, 58, 67, 97, 115, 141, 147, 181, 189, 201, 212, 216, 219, 226, 227], "shift_for_xmax": [20, 56], "em_factor": 20, "fast": [20, 34, 56, 201, 236], "interpol": [20, 22, 26, 27, 29, 30, 57, 58, 67, 76, 119, 126, 141, 164, 207, 212, 226], "domain": [20, 21, 22, 23, 24, 76, 90, 91, 92, 100, 115, 117, 119, 125, 127, 151, 189, 205, 209, 216, 232, 236], "puls": [20, 21, 22, 23, 24, 56, 59, 88, 95, 97, 99, 109, 114, 118, 128, 132, 143, 150, 183, 186, 201, 205, 219, 232, 233], "excess": [20, 22, 56, 97, 109, 118], "deriv": [20, 26, 97, 201], "efield": [20, 26, 27, 29, 30, 52, 58, 97, 140, 143, 169, 202, 210], "integr": [20, 26, 27, 29, 38, 39, 49, 56, 57, 103, 141, 189, 197, 205, 207, 216], "wa": [20, 49, 50, 52, 58, 65, 73, 78, 80, 82, 89, 90, 91, 92, 93, 97, 100, 101, 102, 115, 121, 133, 141, 154, 158, 170, 186, 200, 214, 227, 228, 229, 232, 235], "sum": [20, 26, 34, 49, 50, 51, 52, 55, 74, 76, 133, 141, 189, 212, 216, 232, 233], "trapezoid": [20, 56], "rule": [20, 51, 56], "size": [20, 30, 34, 38, 56, 76, 103, 114, 115, 117, 125, 131, 141, 157, 158, 171, 181, 186, 187, 212, 227, 233], "bin": [20, 21, 22, 23, 24, 34, 39, 49, 50, 51, 55, 56, 58, 76, 90, 91, 92, 100, 127, 189, 194, 195, 196, 197, 199, 212, 216, 236], "depth": [20, 26, 30, 35, 38, 41, 42, 52, 54, 56, 57, 59, 74, 78, 80, 82, 97, 141, 186, 187, 211, 228, 233], "em": [20, 21, 22, 24, 49, 51, 56, 58, 97], "refract": [20, 21, 22, 24, 26, 27, 28, 29, 30, 41, 42, 54, 56, 57, 76, 89, 97, 101, 102, 122, 133, 135, 141, 186, 187, 189, 212, 216, 222, 226], "1km": 20, "observ": [20, 21, 22, 24, 26, 27, 29, 30, 42, 54, 56, 57, 58, 88, 95, 97, 99, 141, 155, 164, 165, 166, 167, 168, 212], "amplitud": [20, 21, 22, 23, 24, 34, 49, 50, 52, 56, 57, 58, 83, 97, 109, 117, 118, 125, 127, 139, 141, 150, 183, 189, 194, 198, 199, 205, 208, 210, 212], "scale": [20, 34, 41, 42, 52, 56, 57, 58, 109, 118, 207], "factor": [20, 56, 57, 58, 103, 107, 115, 119, 189, 207, 216, 222, 223], "precis": [20, 51, 97, 154, 212], "benefici": 20, "small": [20, 26, 30, 51, 52, 55, 56, 58, 59, 109, 118, 150, 198, 201, 202, 227], "slow": [20, 51, 56, 126, 141, 201, 216, 227, 233], "down": [20, 41, 42, 51, 59, 76, 78, 79, 80, 82, 228, 232, 233], "proport": 20, "just": [20, 26, 51, 52, 56, 57, 58, 59, 76, 117, 125, 128, 132, 141, 154, 199, 214, 231, 232, 233], "around": [20, 26, 28, 30, 51, 52, 58, 90, 91, 92, 100, 109, 118, 130, 131, 134, 141, 186, 221, 228, 232, 233, 236], "peak": [20, 56, 97, 114, 141], "rel": [20, 49, 51, 56, 58, 74, 77, 78, 80, 82, 92, 97, 113, 118, 130, 133, 141, 143, 150, 155, 187, 200, 228, 232], "compon": [20, 22, 24, 49, 56, 57, 58, 72, 73, 74, 76, 83, 97, 117, 127, 150, 189, 202, 226, 227, 229, 235], "thetaprim": 20, "r_prime": 20, "amount": [20, 58, 76, 189, 200, 223], "matter": [20, 141], "travers": 20, "carri": [20, 40, 72, 73, 208, 227], "iN": [20, 56], "slant": [20, 97, 141], "same_show": [20, 22, 24, 56], "output_mod": [20, 56, 165, 168], "maximum_angl": 20, "3490658503988659": 20, "electr": [20, 26, 27, 29, 30, 41, 42, 49, 50, 58, 61, 76, 92, 97, 133, 141, 143, 144, 145, 146, 147, 150, 168, 171, 183, 187, 201, 202, 203, 210, 235], "field": [20, 22, 26, 27, 29, 30, 39, 41, 42, 49, 50, 51, 54, 57, 58, 59, 61, 76, 78, 80, 82, 88, 92, 95, 97, 99, 119, 133, 141, 143, 144, 145, 146, 147, 150, 151, 168, 171, 183, 187, 201, 202, 203, 210, 222, 235], "realiz": [20, 24, 49, 50, 56, 76], "choosen": [20, 24, 165, 168], "solut": [20, 22, 23, 24, 26, 27, 29, 30, 34, 49, 50, 56, 57, 58, 59, 92, 97, 100, 133, 139, 183, 228], "charge_excess": [20, 56], "angular": [20, 26], "cherenkov": [20, 22, 24, 30, 56, 58, 219], "empti": [20, 24, 26, 58, 103, 143, 189], "efield_trac": 20, "sky": [20, 34, 49, 51, 111, 112, 126, 189], "er": 20, "etheta": [20, 22, 24, 58, 76, 97, 122, 202, 203, 210, 226], "ephi": [20, 58, 76, 97, 122, 202, 203, 210, 226], "kei": [20, 24, 26, 27, 29, 30, 34, 49, 50, 51, 72, 73, 74, 76, 82, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 115, 117, 125, 127, 143, 154, 157, 160, 171, 175, 189, 194, 195, 196, 197, 198, 199, 200, 212, 227], "deprec": [20, 32, 82, 97, 121, 227], "trapeoiz": 20, "transcript": 20, "fortran": 20, "NOT": [20, 34, 41, 42, 51, 56, 59, 109, 118, 154], "1234": 20, "librari": [20, 22, 26, 49, 50, 56, 57, 58], "theta_refer": 20, "relativ": [20, 109, 164], "is_em_show": 21, "lpm": [21, 56], "viewangl": [21, 22, 24], "sight": [21, 22, 24, 56], "width": [21, 22, 23, 24, 26, 90, 91, 92, 97, 100, 134, 141, 186, 195, 196], "invers": [21, 22, 23, 24, 26, 49, 50, 56, 90, 91, 92, 97, 100, 195, 196], "rate": [21, 22, 23, 24, 26, 27, 29, 30, 49, 50, 52, 56, 58, 90, 91, 92, 97, 100, 117, 119, 127, 129, 146, 160, 189, 195, 196, 205, 207, 208, 209, 216, 222, 232, 233, 236], "enabl": [21, 22, 23, 24, 143, 183, 201], "disabl": [21, 143], "lpd": 21, "effect": [21, 26, 27, 29, 30, 32, 34, 39, 49, 51, 52, 53, 55, 56, 57, 58, 61, 74, 76, 109, 118, 127, 183, 200, 207, 226], "nont": 21, "complex": [21, 22, 23, 24, 41, 42, 49, 56, 57, 74, 76, 83, 97, 109, 118, 125, 183, 209, 216, 222, 226], "frequenc": [21, 22, 23, 24, 26, 27, 29, 30, 35, 54, 57, 58, 59, 65, 67, 74, 75, 76, 78, 80, 81, 82, 83, 90, 91, 92, 100, 103, 109, 112, 115, 117, 118, 119, 125, 126, 127, 132, 133, 141, 154, 157, 169, 183, 189, 201, 205, 206, 208, 209, 216, 219, 222, 226, 228, 232, 236], "sigma": [21, 23, 58, 107, 125, 169, 201, 206], "fudge_lpm": 21, "gaussian": [21, 23, 56, 117, 125, 141, 181, 206], "greisen": 21, "gaisser": 21, "hilla": 21, "flag": [21, 97, 115, 142, 148, 216], "1103": [21, 22, 24, 34], "physrevd": [21, 22, 24, 34], "82": [21, 51, 54], "074017": 21, "parameter": [21, 22, 24, 36, 38], "compat": [21, 58, 77, 78, 80, 82, 154, 213, 227], "regim": 21, "neglig": [21, 51, 56], "switch": [21, 106, 109, 118, 132, 160], "rescal": [21, 34, 76, 226], "match": [21, 26, 27, 29, 30, 32, 49, 72, 73, 141, 160, 178, 181, 216, 232], "e_lpm": 21, "full_output": [22, 23, 24, 197], "obtain": [22, 23, 24, 26, 27, 29, 30, 51, 52, 56, 58, 71, 109, 118, 198, 206], "fft": [22, 23, 24, 97, 204], "standard": [22, 23, 24, 36, 40, 51, 53, 56, 67, 78, 80, 82, 103, 132, 204, 208, 221, 227, 235], "approach": [22, 23, 24, 26, 49, 50, 236], "assur": [22, 23, 24], "fourier": [22, 23, 24, 56, 90, 91, 92, 100, 113, 201, 203, 222, 232], "transform": [22, 23, 24, 26, 51, 56, 88, 95, 99, 119, 209, 222, 232], "known": [22, 23, 24, 154, 229], "arz2019": [22, 56, 58, 233], "zhs1992": [22, 24, 56], "zh": [22, 24, 56], "za": [22, 24], "f": [22, 24, 34, 39, 40, 49, 50, 55, 56, 76, 113, 127, 141, 181, 206], "halzen": [22, 24], "stanev": [22, 24], "phy": [22, 24, 34, 36, 58, 145], "rev": [22, 24, 34, 36, 58], "45": [22, 24, 58, 132, 219, 232], "362": [22, 24], "1992": [22, 24], "phase": [22, 24, 41, 42, 56, 67, 71, 74, 76, 78, 80, 82, 83, 103, 106, 109, 115, 118, 119, 127, 150, 155, 189, 201, 205, 216, 221, 222, 226, 227], "alvarez2000": [22, 24, 56, 58, 183], "mainli": [22, 24, 56, 232], "j": [22, 24, 40, 55, 56, 155, 207], "alvarez": [22, 24], "muniz": [22, 24], "vazquez": [22, 24], "d62": [22, 24], "2000": [22, 24, 141, 165], "84": [22, 24, 51], "103003": [22, 24], "alvarez2009": [22, 24, 56, 58, 97], "w": [22, 24, 26, 39, 52, 55, 56, 141], "carvalho": [22, 24, 141], "tuero": [22, 24], "coher": [22, 24, 56, 141], "eev": [22, 24, 51, 56], "astroparticl": [22, 24], "35": [22, 59], "2012": [22, 24], "287": [22, 24], "299": [22, 24], "c": [22, 24, 26, 35, 39, 54, 57, 141, 154, 231], "jame": [22, 24], "prothero": [22, 24], "thin": [22, 24, 51], "energet": 22, "dens": [22, 24], "media": [22, 24, 51, 57, 226], "applic": [22, 24, 56, 227, 231, 235], "32": [22, 24, 97, 189, 195], "2009": [22, 24], "111": [22, 24, 51, 97], "hanson": 22, "connolli": [22, 36, 58], "91": [22, 51, 126], "75": [22, 35, 54, 189, 226], "89": [22, 51], "semi": 22, "mc": [22, 40, 53, 56, 93, 119, 141, 180, 181, 189, 232], "mu\u00f1iz": 22, "romero": 22, "wolf": 22, "2011": [22, 36, 58], "accur": [22, 51, 56, 117, 229], "radiat": [22, 51, 56, 57, 76, 97, 210], "gravit": 22, "cosmologi": 22, "arz2020": [22, 56, 58], "updat": [22, 51, 56, 58, 63, 70, 72, 73, 74, 78, 79, 80, 82, 141, 226, 227], "taken": [22, 35, 51, 56, 57, 58, 72, 73, 82, 97, 166, 189, 207, 214, 222], "p": [22, 36, 49, 51, 58, 113, 210], "hansen": 22, "101": [22, 34, 52, 58, 97], "2020": [22, 51, 58, 226], "083005": 22, "behviour": 22, "pick": [22, 154, 181, 187], "voltag": [23, 49, 56, 58, 76, 97, 103, 117, 119, 127, 133, 143, 144, 150, 160, 183, 187, 189, 195, 196, 197, 198, 202, 203, 205, 208, 222, 228, 232, 233, 235], "strength": 23, "delta_puls": 23, "delta": [23, 49, 51], "cw": 23, "sinusoid": 23, "wave": [23, 56, 210, 212, 233], "squar": [23, 49, 56, 97, 141, 197, 201, 202, 205], "rectangular": [23, 90, 91, 92, 97, 100, 125, 134, 141, 145, 201, 206], "amplitued": 23, "tone_burst": 23, "sine": 23, "idl1": 23, "hvsp1": 23, "waveform": [23, 32, 56, 58, 59, 74, 103, 132, 133, 150, 160, 181, 186, 187, 189, 212, 216, 228, 232, 233], "ku": [23, 226], "lab": 23, "half": [23, 39, 51, 56, 119, 125, 218], "ara02": 23, "calpuls": 23, "depict": [23, 56], "02": 23, "k_l": [24, 87, 97], "average_show": 24, "energyshow": 24, "fromhadron": 24, "physics35": 24, "energeticshow": 24, "drawn": [24, 26, 51, 56, 127, 150, 181], "overrid": [24, 41, 42, 59, 119], "averag": [24, 34, 41, 42, 51, 56, 78, 80, 82, 83, 115, 132, 154, 208, 219], "analyticraytrac": [25, 57], "speed_of_light": [25, 26], "get_n_step": [25, 26], "get_seg": [25, 26], "get_z_deep": [25, 26], "ray_tracing_2d": [25, 26, 27, 29, 57], "get_gamma": [25, 26], "get_turning_point": [25, 26], "get_y_turn": [25, 26], "get_c_1": [25, 26], "get_c": [25, 26], "get_c0_from_log": [25, 26], "get_i": [25, 26], "get_y_diff": [25, 26], "get_y_with_z_mirror": [25, 26], "get_z_mirror": [25, 26], "get_z_unmirror": [25, 26], "get_path_length": [25, 26, 27, 29, 30, 57], "get_path_length_analyt": [25, 26], "get_travel_tim": [25, 26, 27, 29, 30, 57], "get_travel_time_analyt": [25, 26], "get_attenuation_along_path": [25, 26], "get_path_seg": [25, 26], "get_angl": [25, 26, 152, 163, 164], "get_launch_angl": [25, 26], "get_receive_angl": [25, 26], "get_reflection_angl": [25, 26, 27, 29, 30], "get_path": [25, 26, 27, 29, 30, 57], "get_path_reflect": [25, 26], "get_reflection_point": [25, 26], "obj_delta_y_squar": [25, 26], "obj_delta_i": [25, 26], "get_delta_i": [25, 26], "determine_solution_typ": [25, 26], "find_solut": [25, 26, 27, 29, 30, 57], "plot_result": [25, 26], "get_angle_from_c_0": [25, 26], "get_angle_from_logc_0": [25, 26], "get_c_0_from_angl": [25, 26], "get_z_from_n": [25, 26], "get_surf_skim_angl": [25, 26], "is_in_refraction_zon": [25, 26], "get_tof_for_straight_lin": [25, 26], "get_surface_puls": [25, 26], "angular_diff": [25, 26], "apply_propagation_effect": [25, 26, 27, 29, 30], "get_attenu": [25, 26, 27, 29, 30, 57], "get_config": [25, 26, 27, 29, 30], "get_launch_vector": [25, 26, 27, 29, 30, 57], "get_number_of_raytracing_solut": [25, 26, 27, 29, 30], "get_number_of_solut": [25, 26, 27, 29, 30, 57], "get_output_paramet": [25, 26, 27, 29, 30], "get_raytracing_output": [25, 26, 27, 29, 30], "get_receive_vector": [25, 26, 27, 29, 30, 57], "get_result": [25, 26, 27, 29, 30, 57], "get_solution_typ": [25, 26, 27, 29, 30, 57], "has_solut": [25, 26, 27, 29, 30], "reset_solut": [25, 26, 27, 29, 30], "set_config": [25, 26, 27, 29, 30], "set_start_and_end_point": [25, 26, 27, 29, 30, 57], "use_optional_funct": [25, 26, 27, 29, 30], "ray_trac": [25, 26, 57], "set_solut": [25, 26, 30], "get_focus": [25, 26, 30], "get_ray_path": [25, 26], "directraytrac": 25, "direct_ray_trac": [25, 27], "get_propagation_modul": [25, 28, 57], "propagation_base_class": 25, "ray_tracing_bas": [25, 26, 27, 29, 30], "radioproparaytrac": 25, "radiopropa_ray_trac": [25, 30], "set_shower_axi": [25, 26, 27, 29, 30], "set_iterative_sphere_s": [25, 26, 27, 29, 30], "set_iterative_step_s": [25, 30], "activate_auto_step_s": [25, 30], "deactivate_auto_step_s": [25, 30], "set_cut_viewing_angl": [25, 30], "set_maximum_trajectory_length": [25, 30], "raytracer_it": [25, 30], "set_minimizer_toler": [25, 30], "raytracer_minim": [25, 30], "get_path_candid": [25, 30], "get_correction_path_length": [25, 30], "get_correction_travel_tim": [25, 30], "get_frequencies_for_attenu": [25, 30], "delta_theta_direct": [25, 30], "delta_theta_bottom": [25, 30], "delta_theta_reflect": [25, 30], "299792458": 26, "optim": [26, 117, 150, 183], "algorithm": [26, 40, 56, 115, 128, 183, 201, 216], "attenu": [26, 27, 29, 30, 33, 49, 57, 58, 59, 61, 183, 198], "along": [26, 27, 29, 30, 32, 38, 41, 42, 49, 50, 51, 56, 58, 74, 76, 78, 80, 82, 97, 141, 212, 227, 228, 232], "overwritten": [26, 160, 215, 218], "init": [26, 76, 141], "x1": [26, 27, 29, 30, 76], "x2": [26, 27, 29, 30], "dx": [26, 40], "segment": 26, "approx": [26, 113], "equi": 26, "dist": 26, "np": [26, 27, 29, 30, 34, 41, 42, 49, 51, 52, 53, 56, 57, 58, 74, 83, 88, 90, 91, 92, 95, 99, 100, 111, 114, 141, 154, 155, 201, 209, 212, 216, 233], "linspac": [26, 57], "ice_param": 26, "z_deep": 26, "homogen": [26, 51, 56], "know": [26, 51, 56, 58, 229, 236], "035": 26, "awai": [26, 51, 56, 79, 114, 222], "monoton": [26, 166], "increas": [26, 51, 52, 115, 117, 126, 141, 150, 166], "attenuation_model": [26, 27, 29, 30, 54, 57, 58, 183], "sp1": [26, 27, 29, 30, 35, 52, 54, 57, 58, 183], "30": [26, 27, 29, 30, 32, 56, 57, 97, 111, 113, 114, 115, 129, 130, 143, 157, 170, 171, 181, 189, 200, 216], "n_frequencies_integr": [26, 27, 29, 30, 57], "25": [26, 30, 32, 38, 54, 56, 57, 58, 97, 121, 214, 235], "use_optimized_start_valu": 26, "overwrite_speedup": 26, "use_cpp": 26, "loglevel": 26, "verbos": [26, 72, 73, 74, 83, 154, 160, 166, 180], "warn": [26, 27, 29, 30, 59, 74, 83, 90, 91, 92, 97, 100, 111, 113, 114, 115, 141, 157, 181, 216, 235], "c_0": [26, 57], "paramt": [26, 76], "skim": 26, "ineffici": 26, "approxim": [26, 38, 51, 52, 56, 58, 117, 119, 160, 169], "discret": [26, 119], "loss": [26, 49, 51, 67, 113, 115], "accuraci": [26, 56, 126, 178, 233], "pr": [26, 160], "507": 26, "speedup_attenuation_model": 26, "gl3": [26, 35], "deactiv": 26, "routin": 26, "gamma": [26, 51, 57, 97], "turn": [26, 51, 56, 90, 91, 92, 100, 235], "n_ice": [26, 41, 42, 54], "off": [26, 56, 57, 58, 90, 91, 92, 100, 141, 187, 232], "saddl": 26, "transit": [26, 41], "go": [26, 51, 57, 58, 71, 106, 109, 118, 227, 228], "technic": [26, 154], "relat": [26, 49, 57, 76, 89, 101, 102, 114, 202, 232], "typl": [26, 80], "constant": [26, 36, 38, 51, 56, 57, 58, 78, 80, 82, 83, 115], "c_1": [26, 57], "logc0": 26, "likelihood": 26, "better": [26, 56, 67, 71, 118, 126, 150, 216, 229, 233], "exponenti": [26, 28, 41, 42, 54, 57, 201], "z_raw": 26, "in_air": 26, "dy": 26, "dz": [26, 30], "mirror": [26, 57], "unmirror": 26, "reflection_cas": 26, "zero": [26, 27, 29, 30, 51, 52, 58, 78, 80, 82, 109, 115, 118, 131, 134, 154, 175, 201, 222], "ben": [26, 107], "hokanson": [26, 107], "fase": 26, "pyrex": [26, 65, 107], "travel": [26, 27, 29, 30, 34, 49, 50, 56, 57, 133, 154, 186, 187, 210], "flight": [26, 51, 56], "max_detector_freq": [26, 27, 29, 30], "bottom": [26, 27, 29, 30, 34, 41, 42, 54, 57, 58, 232], "stop": [26, 27, 29, 30, 51, 97, 131, 141, 174], "larger": [26, 49, 50, 51, 56, 58, 90, 91, 92, 100, 126, 127, 132, 133, 233], "x_start": 26, "occur": [26, 46, 49, 195, 196], "n_point": [26, 27, 29, 30], "1000": [26, 27, 29, 51, 52, 59, 83, 115, 125, 141, 145, 226, 227], "purpos": [26, 46, 51, 56, 83, 119, 232], "valid": [26, 82, 92], "problem": [26, 56, 90, 91, 92, 100, 154, 233], "yy": [26, 45, 49, 50, 51, 52], "zz": [26, 45, 49, 50, 51, 57], "presenc": 26, "construct": [26, 41, 42, 49, 50, 57, 115, 141, 227], "call": [26, 51, 54, 56, 57, 58, 74, 154, 157, 186, 187, 226, 227, 229, 232, 235], "put": [26, 56, 115, 157, 226], "togeth": [26, 54, 56, 157, 189, 228, 235], "shelf": [26, 40, 54], "logc_0": 26, "c0": [26, 57], "finder": 26, "c0rang": 26, "2dim": [26, 30], "solution_typ": [26, 27, 29, 30, 57], "prerequesit": 26, "right": [26, 41, 56, 57, 115, 181, 187, 233], "violat": 26, "univers": 26, "achiev": [26, 52, 119, 235], "ax": [26, 34, 45, 52, 53, 151, 207], "visual": [26, 227, 228], "z_po": 26, "angoff": 26, "sought": 26, "smallest": [26, 200, 226], "possibl": [26, 30, 57, 72, 73, 100, 119, 154, 189, 227, 232, 233, 235], "veri": [26, 75, 109, 118, 141, 174, 199, 227, 233], "chang": [26, 27, 29, 30, 38, 49, 51, 56, 58, 71, 73, 82, 90, 91, 92, 100, 151, 154, 226, 228, 229, 232, 235], "prevent": 26, "invalid": [26, 160], "rang": [26, 30, 34, 38, 49, 51, 52, 57, 58, 97, 109, 118, 126, 141, 160, 169, 207, 226], "exactli": 26, "nome": 26, "impli": [26, 51, 232], "anglaunch": 26, "procedur": [26, 56, 58, 111, 227], "optimis": 26, "equat": [26, 49, 53, 56, 57, 202], "get_n": 26, "solv": [26, 57, 201, 202], "beam": [26, 97, 103, 111, 122, 141, 189, 212, 216], "90": [26, 51, 52, 56, 58, 135, 226, 227, 228], "zone": [26, 56, 79, 119], "c0crit": 26, "critic": 26, "thcrit": 26, "receiv": [26, 27, 29, 30, 41, 42, 49, 50, 57, 97, 154, 160, 233], "oposit": [26, 30], "shadow": [26, 56], "process": [26, 46, 51, 58, 59, 114, 115, 157, 208, 227, 232, 233, 235], "statement": [26, 235], "necessarili": [26, 49, 50, 57, 74, 154], "nonetheless": 26, "todo": [26, 141], "why": [26, 56, 208], "seem": [26, 56], "lie": [26, 51, 189], "ycheck": 26, "ycrit": 26, "give": [26, 56, 57, 58, 59, 72, 73, 83, 115, 154, 227, 233], "idea": [26, 56, 154, 236], "close": [26, 49, 50, 52, 56, 57, 133, 154], "could": [26, 49, 52, 56, 74, 115, 154, 202, 235], "grai": 26, "far": [26, 27, 29, 40, 49, 52, 56, 74, 78, 79, 80, 82, 141, 201, 233], "hypothat": 26, "straight": [26, 28, 56, 76, 78, 79, 80, 82, 125, 141, 145, 189, 206, 212, 228], "Such": [26, 233], "fermat": 26, "principl": [26, 52, 56, 57, 125, 227, 228, 235], "explic": 26, "geometr": [26, 111, 112, 141], "optic": [26, 56, 57], "infirn": 26, "chdraw": 26, "label": [26, 34, 52, 53, 57, 72, 73], "brewster": 26, "firn": [26, 78, 79, 80, 82, 226], "enter": 26, "boolean": [26, 30, 49, 50, 57, 73, 90, 91, 92, 100, 107, 133, 150, 158, 170, 181, 186, 198, 201, 222], "leav": [26, 56], "neither": 26, "draw": [26, 28, 40, 51, 56, 181, 233], "pyplot": [26, 53, 57, 58, 232], "dot": [26, 201], "red": 26, "figur": [26, 141, 160, 183], "x_refl": 26, "z_refl": [26, 30], "pulser_po": 26, "receiver_po": 26, "ipulssol": 26, "irxsol": 26, "subject": [26, 56], "specular": 26, "transmiss": [26, 42, 54, 57], "interfac": [26, 72, 73, 74, 83, 89, 97, 101, 102, 154, 160, 230, 235], "emiss": [26, 49, 56, 58, 97, 126, 141, 154, 232], "hit": [26, 57], "directli": [26, 32, 54, 56, 117, 186, 233], "equival": [26, 34, 51, 228, 232], "fashion": [26, 127], "raytr": 26, "x_refl_start": 26, "treat": [26, 82], "predefin": [26, 42], "emisss": 26, "would": [26, 51, 52, 56, 58, 119, 126, 222, 227, 232, 233], "ofoptim": 26, "exact": [26, 49, 154], "defint": 26, "i_solut": [26, 27, 29, 30, 57], "weaken": [26, 27, 29, 30], "account": [26, 27, 29, 30, 49, 51, 56, 57, 58, 59, 97, 115, 154, 200, 207, 222], "electricfield": [26, 27, 29, 30, 87, 92, 171, 222, 232], "raytrac": [26, 27, 29, 30, 41, 42, 57, 101, 133, 233], "due": [26, 27, 29, 30, 38, 51, 56, 57, 58, 109, 118, 154, 183, 216, 229, 233], "higher": [26, 27, 29, 30, 52, 56, 119, 189, 222, 232], "interv": [26, 27, 29, 30, 49, 50, 56, 131, 134, 175, 189, 207, 216], "visibl": [26, 27, 29, 30, 109, 118], "finer": [26, 27, 29, 30, 34, 187, 233], "falloff": [26, 27, 29, 30], "3dim": [26, 27, 29, 30, 41, 42, 202], "pair": [26, 27, 29, 30, 32, 49, 51, 115, 135, 154, 171, 186, 187, 200, 227, 233], "structur": [26, 27, 29, 30, 58, 59, 62, 67, 71, 97, 157, 203, 237, 238], "ndim": [26, 27, 29, 30], "receive_vector": [26, 27, 29, 30, 49, 50, 57], "shall": [26, 27, 29, 78, 80, 82, 126, 128, 132, 151, 165, 167, 168, 171, 181, 186, 187, 236], "reset": [26, 27, 29, 30, 80, 157], "previou": [26, 27, 29, 51, 56, 58, 90, 91, 92, 100], "function_nam": [26, 27, 29, 30], "noth": [26, 27, 29, 30, 82, 160, 200], "neseccari": [26, 27, 29, 30], "comma": [26, 27, 29, 30], "keyword": [26, 27, 29, 30, 56, 77, 78, 235], "sphere_s": [26, 27, 29, 30], "arai": [26, 27, 29, 30], "n_reflect": [26, 27, 29, 30, 34, 57, 58], "ray_tracing_2d_kward": [26, 27, 29], "wrapper": [26, 28, 42, 56, 232, 236], "arbitrari": [26, 28, 51, 57, 200], "initil": [26, 27, 29, 30], "describ": [26, 27, 29, 30, 38, 52, 53, 58, 73, 74, 113, 115, 150, 201, 205, 212, 227, 228, 229, 233], "log_nam": 26, "thing": [26, 51, 55, 56, 58, 125, 154, 236], "info": [26, 27, 29, 30, 59, 72, 73, 74, 83, 160, 180, 235], "linear": [26, 27, 29, 30, 57, 58, 76, 83, 109, 118, 141, 143, 150, 198, 212], "intial": 26, "_config": 26, "attenuate_ic": [26, 30, 57, 58], "focusing_limit": [26, 30, 57, 58], "focus": [26, 30, 56, 57, 58, 183], "back": [26, 30, 52, 55, 56], "accident": [26, 214], "raytracing_result": [26, 30], "reflection_angl": [26, 27, 29, 30], "infinitesim": [26, 30], "1cm": [26, 30, 226], "gain": [26, 30, 52, 58, 67, 71, 76, 83, 106, 109, 113, 118, 125, 143, 175, 206], "load": [27, 29, 52, 56, 58, 67, 71, 72, 73, 76, 113, 115, 154, 157, 160, 213, 227], "yaml": [27, 29, 34, 49, 50, 54, 55, 57, 58, 59], "support": [28, 38, 58, 102, 125, 143, 148, 227], "direct_rai": 28, "dummi": 28, "ignor": [28, 51, 52, 56, 57, 59, 82, 125, 134, 154, 206], "prodid": 29, "icemodel": [30, 33, 41, 42, 183], "speedup": [30, 58], "delta_c_cut": [30, 56, 58], "40": [30, 38, 52, 58, 147], "degre": [30, 51, 56, 58, 78, 80, 82, 97, 132, 155, 219, 223], "iter": [30, 57, 93, 111, 117, 141, 150, 160, 181, 201, 232], "max_traj_length": 30, "10000": [30, 114, 157, 208], "iter_steps_channel": 30, "auto_step_s": 30, "iter_steps_zenith": 30, "05": [30, 55, 76, 117, 127, 141, 208], "005": [30, 141], "loop": [30, 51, 52, 55, 58, 93, 132, 160, 170, 183, 201, 216, 219, 235], "prepar": [30, 157], "shower_axi": [30, 141], "sphere": 30, "big": [30, 56, 232], "channel": [30, 32, 34, 49, 50, 51, 52, 56, 57, 58, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 87, 92, 97, 100, 101, 102, 103, 107, 109, 111, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 132, 133, 135, 142, 143, 150, 157, 160, 171, 180, 181, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 216, 219, 221, 222, 227, 228, 229, 233, 235], "step_zenith": 30, "steps_siz": 30, "lenght": 30, "_sphere_s": 30, "auto_step": 30, "step_siz": [30, 103, 216], "won": [30, 59], "seen": [30, 56, 154], "trajectori": [30, 51, 54, 56, 57, 212], "maxmim": 30, "abort": 30, "bigger": [30, 127], "search": [30, 72, 73, 77, 114, 141, 180, 181, 186, 187, 233, 238], "xtol": 30, "7453292519943296e": 30, "ztol": 30, "001": [30, 40, 117, 127], "moment": [30, 40, 78, 80, 82, 154], "further": [30, 52, 76, 113, 114, 232], "improv": [30, 115, 150, 233], "candid": 30, "1dim": 30, "freq": [30, 76, 83, 119, 127, 189, 226], "n_bottom_reflect": 30, "pretty_time_delta": [31, 32], "merge_config": [31, 32], "get_vrm": [31, 32], "get_sampling_r": [31, 32, 87, 90, 91, 92, 100], "get_bandwidth": [31, 32], "calculate_veff": [31, 32], "integrated_channel_respons": [31, 32], "inputfilenam": [32, 58, 165, 168], "outputfilenam": [32, 58, 76], "detectorfil": [32, 58], "det": [32, 52, 58, 77, 83, 106, 107, 109, 118, 119, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 166, 169, 171, 178, 180, 181, 183, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203, 227], "det_kwarg": 32, "outputfilenamenuradioreco": [32, 58], "evt_tim": 32, "datetim": [32, 72, 73, 74, 78, 80, 82, 89, 101, 102, 154, 175], "2018": [32, 38, 125, 127, 226, 227], "default_detector_st": [32, 58], "default_detector_channel": 32, "file_overwrit": 32, "write_detector": 32, "event_list": 32, "log_level_propag": 32, "ice_model": [32, 41, 54, 57, 58], "altern": [32, 117, 200, 201, 202, 216, 231], "json": [32, 34, 49, 50, 52, 55, 58, 59, 74, 77, 78, 80, 82, 157, 228], "station_id": [32, 49, 50, 52, 58, 72, 73, 74, 78, 79, 80, 82, 83, 89, 93, 99, 101, 102, 109, 118, 125, 130, 164, 165, 167, 174, 180, 181, 186, 187, 216, 219, 227, 232], "perform": [32, 39, 51, 52, 56, 57, 58, 59, 73, 76, 90, 91, 92, 100, 117, 119, 127, 160, 187, 189, 195, 196, 203, 209, 212, 216, 222, 226, 233, 235, 236], "deself": 32, "_fine": 32, "sim": [32, 58, 59, 93, 97, 133, 164, 232], "overwrit": [32, 41, 42, 74, 160, 235, 236], "nur": [32, 49, 50, 58, 59, 171, 181, 227, 231], "custom": [32, 58, 59, 65, 97, 104, 121, 214, 232, 235], "veff": [33, 39, 53, 59], "remove_duplicate_trigg": [33, 34], "fc_limit": [33, 34], "get_veff_water_equival": [33, 34], "get_veff_output": [33, 34], "get_veff_aeff_singl": [33, 34], "get_veff_aeff_single_wrapp": [33, 34], "get_veff_aeff": [33, 34], "get_veff_aeff_arrai": [33, 34], "get_index": [33, 34], "fit_gl1": [33, 35], "get_temperatur": [33, 35], "get_attenuation_length": [33, 35, 54], "cross_sect": [33, 38], "param": [33, 36, 78], "csm": [33, 36, 38, 58], "get_nu_cross_sect": [33, 36], "get_interaction_length": [33, 36], "dump_hdf5": 33, "dump": [33, 37, 52, 74, 76, 227], "earth_attenu": 33, "get_weight": [33, 38], "get_simple_weight": [33, 38], "get_core_mantle_crust_weight": [33, 38], "prem": [33, 38, 58], "earth_radiu": [33, 38], "radii": [33, 38], "densiti": [33, 34, 36, 38, 56, 58], "slant_depth": [33, 38], "coremantlecrustmodel": [33, 38], "get_limit_from_aeff": [33, 39], "get_limit_flux": [33, 39], "get_limit_e1_flux": [33, 39], "get_limit_e2_flux": [33, 39], "get_number_of_events_for_flux": [33, 39], "get_exposur": [33, 39], "get_integrated_exposur": [33, 39], "get_fluence_limit": [33, 39], "get_neutrino_inelast": [33, 40], "get_ccnc": [33, 40], "random_tau_branch": [33, 40], "inelasticity_tau_decai": [33, 40], "rejection_sampl": [33, 40], "southpole_simpl": [33, 41, 54, 58], "add_reflective_bottom": [33, 41, 42, 54], "get_average_index_of_refract": [33, 41, 42, 54], "get_gradient_of_index_of_refract": [33, 41, 42, 54], "get_ice_model_radiopropa": [33, 41, 42, 54], "get_index_of_refract": [33, 41, 42, 54, 233], "set_ice_model_radiopropa": [33, 41, 42], "southpole_2015": [33, 41, 54, 57, 58], "arasim_southpol": [33, 41, 54, 58], "mooresbay_simpl": [33, 41, 54, 58], "mooresbay_simple_2": [33, 41, 54], "greenland_simpl": [33, 41, 54, 57, 58, 233], "greenland_firn": [33, 41, 54], "greenland_perturb": [33, 41], "uniform_ic": [33, 41], "get_ice_model": [33, 41, 54, 57, 233], "medium_bas": [33, 54], "icemodelsimpl": [33, 41, 42], "radiopropaicewrapp": [33, 41, 42], "get_modul": [33, 42, 54], "add_modul": [33, 42, 54], "remove_modul": [33, 42, 54], "replace_modul": [33, 42, 54], "get_scalar_field": [33, 42, 54], "scalarfieldbuild": [33, 42], "getvalu": [33, 42], "getgradi": [33, 42], "merge_hdf5": [33, 55], "merge2": [33, 43], "muon_flux": 33, "plot_vertex_distribut": [33, 45], "runner": [33, 65, 67, 71, 76, 103], "nuradiomcrunn": [33, 46], "get_outputfilenam": [33, 46], "runner_exampl": 33, "task": [33, 46, 47, 235], "split_hdf5": 33, "split_hdf5_input_fil": [33, 48], "gid": 34, "remov": [34, 42, 56, 83, 102, 115, 117, 119, 121, 127, 160, 181], "duplic": 34, "overestim": 34, "group": [34, 49, 50, 51, 76, 78, 80, 82, 83, 91, 100, 154, 157, 233], "68": 34, "confid": 34, "belt": 34, "feldman": 34, "cousin": 34, "57": [34, 56, 226], "3873": 34, "weight": [34, 38, 45, 49, 50, 51, 58, 74, 83, 87, 97, 141, 155, 164], "low_limit": 34, "upper_limit": 34, "density_medium": 34, "723464435717068e": [34, 36], "39": [34, 36, 38], "density_wat": 34, "241509744511524e": 34, "dentity_medium": 34, "equivalen": 34, "all_ev": 34, "trigger_nam": [34, 45, 49, 50, 52, 58, 89, 93, 101, 102, 107, 189, 194, 195, 196, 197, 198, 199, 200], "trigger_names_dict": 34, "trigger_combin": 34, "veff_aeff": 34, "bounds_theta": 34, "multipli": [34, 56, 83, 115, 222, 236], "4pi": 34, "map": [34, 97, 126, 154, 155, 160, 180, 181, 183, 217], "again": [34, 56, 59, 216], "individu": [34, 49, 50, 56, 67, 68, 83, 126, 141, 144, 164, 208, 227, 235], "OR": [34, 160], "effici": [34, 39, 51, 216], "analysi": [34, 51, 52, 54, 73, 132, 160, 169, 178, 235], "paramater": 34, "snr": [34, 87, 97, 111, 114, 130, 233], "vmax": 34, "vrm": [34, 49, 50, 52, 58, 119, 189, 216], "channel_id": [34, 52, 58, 72, 73, 74, 78, 79, 80, 82, 83, 89, 91, 92, 100, 101, 102, 103, 109, 117, 118, 125, 127, 128, 133, 150, 164, 186, 187, 190, 200, 227], "curv": [34, 113], "shortest": 34, "caus": [34, 56, 103, 189, 216], "specifii": [34, 72, 73], "aeff_surface_muon": 34, "restrict": 34, "wrt": [34, 74, 78, 80, 82], "were": [34, 49, 50, 51, 89, 93, 101, 102, 154, 227, 229], "co": [34, 57, 113, 203], "item": [34, 50, 51, 154], "care": [34, 51, 83, 208], "n_core": [34, 165, 168], "oversampling_theta": 34, "conain": 34, "oversampl": 34, "equal": [34, 51, 56, 57, 58, 103, 125, 154, 189, 222], "multi": [34, 61, 216], "slice": [34, 141, 216], "triggernam": 34, "uncertainti": [34, 51, 143, 150, 232, 233], "get_veff": [34, 53], "n_energi": 34, "n_zenith_bin": 34, "n_triggernam": 34, "uniqu": [34, 49, 50, 51, 52, 72, 73, 74, 78, 80, 82, 92, 93, 100, 103, 107, 154, 194, 195, 196, 197, 198, 199, 226, 228], "edg": [34, 141, 221], "all_trigg": 34, "uenergi": 34, "uzenith_bin": 34, "utrigger_nam": 34, "zenith_weight": 34, "get_veff_arrai": 34, "fig": [34, 35, 45, 52, 53], "plt": [34, 52, 53, 57, 58, 207, 232], "subplot": [34, 52], "tname": 34, "vefferror": 34, "errorbar": 34, "pi": [34, 51, 53], "yerr": 34, "fmt": 34, "o": [34, 55, 58], "legend": [34, 52, 57], "semilogi": [34, 52], "semilogx": 34, "tight_layout": [34, 52], "declin": 34, "band": [34, 115, 117, 125, 141, 154, 160, 169, 216], "lpda_2of4_100hz": 34, "iz": 34, "9": [34, 97, 154, 190, 208], "0f": 34, "export_format": 34, "getveff": 34, "mhz": [35, 52, 54, 57, 58, 83, 117, 125, 136, 145, 154, 157, 201, 216, 221, 226], "3189": 35, "2015jog15j057": 35, "temperatur": [35, 49, 50, 58, 71, 73, 78, 80, 82, 103, 118, 126, 198], "celsiu": 35, "variou": [35, 58, 83, 97, 130], "gl1": [35, 54, 57, 58], "1409": 35, "5413": 35, "gl2": 35, "2021": [35, 226], "bogorodski": 35, "2201": 35, "07846": 35, "macgregor": 35, "mb1": [35, 54, 58], "2015jog14j214": 35, "phd": [35, 205], "thesi": [35, 205], "persichilli": 35, "inttyp": [36, 39], "ctw": [36, 38, 39, 58], "amanda": 36, "cooper": [36, 58], "sarkar": [36, 58], "philipp": 36, "mertsch": [36, 58], "subir": 36, "jhep": [36, 58], "08": [36, 54, 58], "042": [36, 58], "cross_section_typ": [36, 38, 58], "momenta": 36, "ghandi": [36, 38, 58], "thorn": [36, 58], "83": [36, 51, 58], "113009": [36, 58], "d58": [36, 58], "093009": [36, 58], "1998": [36, 58], "enu": 36, "917": [36, 54], "cm": [36, 38, 51, 97, 141], "l_int": 36, "theta_nu": 38, "pnu": 38, "vertex_posit": 38, "phi_nu": 38, "absorpt": 38, "momentum": 38, "core_mantle_crust_simpl": 38, "core_mantle_crust": [38, 58], "fuction": 38, "shelfmc": [38, 40], "three": [38, 54, 56, 58, 59, 72, 73, 154, 228, 233, 235], "arasim": [38, 54, 76, 208], "preliminari": 38, "dziewonski": 38, "anderson": 38, "planetari": 38, "interior": 38, "297": 38, "356": 38, "1981": 38, "1016": [38, 40], "0031": 38, "9201": 38, "81": [38, 51, 126], "90046": 38, "boundari": [38, 41, 42, 54, 78, 80, 82, 97, 125, 206, 222], "divid": [38, 52, 56, 83, 109, 118, 154, 236], "scalar": [38, 42, 54, 201], "denot": [38, 51], "6371000": 38, "1221500": 38, "3480000": 38, "5701000": 38, "5771000": 38, "5971000": 38, "6151000": 38, "6346600": 38, "6356000": 38, "6368000": 38, "lambda": [38, 160], "810037825908342e": 38, "6227925335729963e": 38, "366339939401755e": 38, "array_lik": [38, 115], "endpoint": 38, "500": [38, 52, 114, 201], "column": 38, "chord": [38, 51], "materi": 38, "thick": 38, "mass": [38, 56], "third": [38, 55, 228], "mantl": [38, 58], "crust": [38, 58], "6378140": 38, "3464101": 38, "6151377545": 38, "6338140": 38, "738113642316134e": 38, "122113313133918e": 38, "aeff": 39, "livetim": [39, 53], "signaleff": 39, "energybinsperdecad": 39, "upperlimonev": 39, "decad": 39, "neyman": 39, "ul": 39, "background": [39, 51, 126], "veff_sr": 39, "nucrsscn": 39, "expect": [39, 51, 59, 61, 97, 133, 150, 186, 222, 233], "assumpt": [39, 51], "log10": [39, 58, 126, 207], "equidist": 39, "loge": 39, "field_of_view": 39, "exposur": 39, "exp_func": 39, "e_low": 39, "e_high": 39, "de": [39, 72, 73, 125], "int_exp": 39, "fluenc": [39, 97, 150, 201], "scatter": 40, "port": 40, "inelastici": 40, "natur": [40, 51], "cpc": 40, "2013": 40, "04": 40, "tau_energi": 40, "1607": 40, "00193": 40, "tau_mu": [40, 51], "tau_": 40, "tau_had": [40, 51, 97], "reject": [40, 56, 160], "initiaion": [41, 42], "condit": [41, 42, 49, 50, 52, 54, 56, 78, 80, 82, 103, 107, 141, 171, 189, 194, 195, 196, 197, 199, 232], "latter": [41, 42, 72, 73, 127, 229], "add_reflective_lay": [41, 42], "z_shift": [41, 42, 54], "almost": [41, 42, 56], "never": [41, 42, 227], "reli": [41, 42, 157], "exp": [41, 42, 54, 57], "z_air_boundari": [41, 42], "nuradio": [41, 42, 57, 62, 207, 237], "glacier": [41, 42], "z_bottom": [41, 42, 54], "dimensionless": [41, 42, 208], "bulk": [41, 42], "delta_n": [41, 42, 54, 57], "snow": [41, 42, 74, 78, 80, 82, 89, 101, 102, 228], "z_0": [41, 42, 54, 57], "od": [41, 42], "refl_z": [41, 42, 54], "refl_coef": [41, 42, 54], "refl_phase_shift": [41, 42, 54], "angukar": [41, 42], "shoft": [41, 42], "position1": [41, 42, 54], "position2": [41, 42, 54], "mother": [41, 42], "1d": [41, 42, 115, 154, 155, 216], "n_averag": [41, 42], "gradient": [41, 42, 56], "n_nabla": [41, 42], "hold": [41, 42, 54, 232], "scalarfield": [41, 42], "moduld": [41, 42], "_compute_default_ice_model_radiopropa": [41, 42], "seper": [41, 42, 229], "posibl": [41, 42], "adjust": [41, 42, 55, 97, 103, 109, 118, 200, 232], "lose": [41, 42], "ice_model_radiopropa": [41, 42], "ice_model_radioprop": [41, 42], "z_firn": 41, "suffix": 41, "_firn": 41, "inheret": 42, "reimplement": 42, "everytim": 42, "inherit": [42, 54, 58, 232, 235], "ice_model_nuradio": [42, 54], "scalar_field": [42, 54], "smooth": [42, 56], "handel": 42, "discontinu": [42, 54, 57], "identifi": [42, 72, 73, 74, 78, 79, 80, 82, 91, 92, 93, 100, 101, 114, 150, 157, 226], "daugther": 42, "new_modul": [42, 54], "stead": 42, "much": [42, 56, 233], "slower": [42, 56], "vector3d": 42, "output_filenam": [43, 47, 48, 55, 227, 232], "xx": [45, 49, 50, 51, 52, 57], "beauti": 45, "n_worker": 46, "output_path": [46, 186], "max_runtim": 46, "691200": 46, "n_triggers_max": 46, "max_crash": 46, "node": [46, 55], "submiss": 46, "soon": 46, "job": [46, 51, 154], "finish": [46, 150], "kept": [46, 114, 128, 134, 216], "busi": 46, "acquir": 46, "crash": [46, 55], "q": [47, 55], "isim": 47, "nu_energi": [47, 87, 97], "nu_energy_max": 47, "detectordescript": [47, 58], "input_filenam": 48, "number_of_events_per_fil": 48, "subfil": 48, "explain": [49, 50, 51, 55, 58, 232], "outlin": [49, 50, 51, 58], "v3": 49, "v2": [49, 121], "hdf5_file": [49, 50], "attr": [49, 50, 52], "ran": [49, 50], "parallel": [49, 50, 51, 55, 56, 78, 80, 82, 135, 210, 228], "simultan": [49, 50, 52, 158], "interfer": [49, 50], "event_group_id": [49, 50], "shower_id": [49, 50, 88, 92, 93, 99, 100, 101], "event_id": [49, 50, 51, 82, 93, 157, 158, 160, 175], "thought": [49, 50, 56], "top": [49, 50, 54, 232], "station_": [49, 50], "slightli": [49, 50, 51, 56, 117, 223], "nuradiomc_evtgen_vers": [49, 50, 51, 87, 97], "nuradiomc_evtgen_version_hash": [49, 50, 51, 87, 97], "nuradiomc_vers": [49, 50, 87, 97], "nuradiomc_version_hash": [49, 50, 87, 97], "hash": [49, 76, 97, 224], "incom": [49, 51, 59, 76, 78, 80, 82, 97, 132, 143, 210, 222], "those": [49, 50, 56, 59, 72, 73, 82, 89, 93, 101, 102, 119, 141, 180, 227, 229, 232], "did": [49, 50, 200, 229], "fiducial_xmax": [49, 87, 97], "fiducial_xmin": [49, 87, 97], "fiducial_ymax": [49, 87, 97], "fiducial_ymin": [49, 87, 97], "fiducial_zmax": [49, 50, 51, 55, 87, 97], "fiducial_zmin": [49, 50, 51, 55, 87, 97], "fiducial_rmin": [49, 50, 51, 55, 87, 97], "qubic": 49, "cylindr": [49, 59, 97, 186, 187, 233], "tnois": [49, 50], "explicit": [49, 50], "nois": [49, 50, 58, 74, 78, 80, 82, 97, 103, 107, 109, 113, 114, 118, 126, 127, 130, 133, 169, 178, 180, 181, 189, 204, 208, 221], "n_sampl": [49, 50, 56, 87, 90, 91, 92, 97, 100, 127, 141, 150, 208, 216, 233], "style": [49, 50], "resolut": [49, 50, 126, 143, 215], "bandwidth": [49, 50, 125, 127, 208], "rm": [49, 58, 78, 80, 82, 107, 189, 208, 216], "thermal": [49, 175, 216], "floor": [49, 119], "v_": 49, "k_": 49, "power": [49, 51, 107, 115, 126, 141, 189, 197, 208, 209, 212], "wiki": [49, 212], "articl": [49, 202], "filter": [49, 52, 58, 71, 81, 90, 91, 92, 100, 103, 109, 115, 118, 119, 125, 131, 133, 134, 136, 145, 150, 154, 155, 160, 183, 186, 187, 194, 198, 201, 206, 208, 216, 221, 222, 232, 235], "respons": [49, 51, 52, 58, 59, 63, 65, 68, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 97, 109, 118, 119, 125, 126, 133, 139, 143, 144, 189, 198, 202, 206, 208, 222, 229, 233, 235], "filt": [49, 78, 80, 82, 216], "trapz": 49, "ff": [49, 67, 76], "antenna_posit": [49, 54], "n_shower": [49, 50], "n_trigger": [49, 50], "row": 49, "belong": [49, 58, 72, 73, 91, 100], "len": [49, 56, 141], "vertex_tim": [49, 50, 51, 87, 97], "cascad": [49, 51, 56], "multiple_trigg": [49, 50], "fire": [49, 57], "trigger_tim": [49, 160, 189, 200, 216], "earliest": [49, 189], "n_interact": [49, 50, 51, 87, 97], "hierarch": [49, 98, 232], "counter": [49, 210], "shower_realization_arz": [49, 50], "1231": 49, "m_event": 49, "m_shower": 49, "captur": 49, "ambigu": [49, 166, 232], "analys": [49, 115], "global": [49, 50, 103], "retriev": [49, 50, 51, 54, 115, 157], "event_group_id_per_show": [49, 50], "event_id_per_show": [49, 50], "focusing_factor": [49, 50], "n_channel": [49, 50, 216], "n_ray_tracing_solut": [49, 50], "max_amp_shower_and_rai": [49, 50], "maximum_amplitud": [49, 50, 87, 97], "maximum_amplitudes_envelop": [49, 50, 52], "hilbert": [49, 50, 97, 135, 183, 194], "envelop": [49, 50, 97, 135, 183, 194, 221], "fulfil": [49, 50, 52, 56, 103, 181, 189, 195, 216], "translat": [49, 50, 54, 56, 57, 201], "multiple_triggers_per_ev": [49, 50], "polar": [49, 50, 52, 58, 59, 76, 91, 97, 100, 113, 122, 150, 154, 201, 202, 203, 210, 226], "rotat": [49, 56, 57, 74, 76, 78, 79, 80, 82, 155, 228, 233], "ray_tracing_c0": [49, 50], "ray_tracing_c1": [49, 50], "ray_tracing_reflect": [49, 50], "ray_tracing_reflection_cas": [49, 50], "ray_tracing_solution_typ": [49, 50], "time_shower_and_rai": [49, 50], "travel_dist": [49, 50], "travel_tim": [49, 50, 57], "satisfi": [49, 50, 194, 195, 196, 197, 199, 232], "triggered_per_ev": [49, 50], "trigger_times_per_ev": 49, "outdat": [50, 76], "click": 50, "juli": [51, 58], "realist": 51, "geometri": [51, 54, 56, 57, 78, 80, 82, 88, 95, 97, 99, 141, 178, 226], "constitut": [51, 58], "input_fil": [51, 165, 166, 167, 168, 174, 175], "1e5": 51, "1e18": [51, 55, 59], "2e18": 51, "few": [51, 56, 59, 126, 154, 227, 228], "mixtur": 51, "flavour": [51, 97, 232], "region": [51, 56, 97, 117, 141, 233], "isotrop": [51, 207], "compar": [51, 56, 107, 109, 115, 118, 119], "rad": [51, 83, 210], "add_tau_second_bang": 51, "tabulated_tau": 51, "four": [51, 52, 58, 125, 235], "remain": [51, 57, 58, 158], "lot": [51, 52, 56, 58, 59, 82], "ten": 51, "kilometr": 51, "proportion": 51, "ratio": [51, 52, 97, 114, 119, 150, 210, 221], "v": [51, 55, 56, 141, 197, 198, 203, 236], "cosin": 51, "keep": [51, 55, 56, 57, 74, 121, 141, 154, 216, 227, 228, 229, 236], "mind": [51, 56, 57, 141], "project": [51, 56, 207], "confirm": 51, "unforc": 51, "antineutrino": 51, "possess": [51, 56, 119], "stochast": [51, 56], "techniqu": 51, "easili": [51, 232, 235], "advis": [51, 233], "poissonian": 51, "let": [51, 56, 57, 58, 169], "sai": [51, 56], "goe": [51, 58, 114, 134], "n_": [51, 54, 57], "unknown": [51, 154, 229], "priori": 51, "good": [51, 55, 56, 111, 114, 154, 236], "thumb": 51, "reduc": [51, 52, 56, 198, 221, 233], "get_gzk_1": 51, "wish": [51, 56], "law": [51, 210], "realli": [51, 56, 58, 154], "usual": [51, 56, 58, 140, 141, 214, 226, 235, 236], "flexibl": [51, 232], "convolv": [51, 52, 109, 118, 125, 139, 143, 206, 208], "whatev": 51, "fanci": [51, 56], "bang": 51, "nativ": 51, "csda": 51, "photonuclear": 51, "paper": [51, 56, 57, 113, 115, 202, 205], "tabul": [51, 141, 212], "although": [51, 56, 221, 229], "actual": [51, 56, 78, 80, 82, 125, 128, 154, 160, 186, 187, 226], "jakob": 51, "santen": 51, "gen2": 51, "undergo": 51, "previous": [51, 80, 121, 214], "tudo": 51, "astroparticlephys": 51, "blob": 51, "md": 51, "feed": [51, 228], "wai": [51, 56, 82, 154, 227, 232, 233], "collect": [51, 72, 73, 178, 229], "content": [51, 97, 132, 189, 219], "radian": [51, 216, 223], "identif": [51, 72, 73, 160], "facilit": [51, 54, 157], "15": [51, 71, 97, 118], "80": [51, 52, 56, 136], "electronvolt": [51, 56], "tau_em": [51, 97], "muonic": 51, "recalcul": 51, "comparison": [51, 119], "encourag": 51, "expand": [51, 183], "complementari": [51, 232], "photon": 51, "11": [51, 52, 58, 97, 126, 216], "positron": [51, 97, 223], "nu_e": 51, "bar": [51, 207], "_e": 51, "13": [51, 97, 103, 198], "antimuon": 51, "nu_": 51, "antitau": 51, "bremsstrahlung": 51, "gamma_": 51, "brem": 51, "ionis": 51, "blundl": 51, "nuclear": 51, "85": 51, "bundl": 51, "86": 51, "87": 51, "88": [51, 54], "weak": 51, "compton": 51, "pion": [51, 56], "211": 51, "kaon": 51, "k": [51, 56, 118], "311": 51, "321": 51, "2212": 51, "antiproton": 51, "awar": 51, "fewer": [51, 58], "disk": [51, 232], "height": [51, 56, 212], "undergon": 51, "curvatur": 51, "detect": [51, 115, 232], "explor": [51, 62, 237], "statist": [51, 143, 181], "pitfal": 51, "overlap": [51, 122, 189], "unlik": [51, 56], "sometim": [51, 154, 227], "faster": [51, 56, 57, 117, 160], "instanc": [51, 56, 57, 58, 78, 93, 109, 118, 125, 215, 236], "proposal_funct": 51, "n_tau": 51, "energy_lepton": 51, "tau_cod": 51, "pev": [51, 58], "member": [51, 160], "li": [51, 56], "upon": 51, "dure": [51, 111, 157, 183], "interest": [51, 56, 154, 229, 235], "similar": [51, 52, 56, 58, 59, 107, 227, 233], "discoveri": 52, "simplifi": [52, 55], "orient": [52, 58, 59, 74, 76, 78, 79, 80, 82, 97, 141, 226, 228], "lpda": [52, 58, 59, 74, 76, 78, 80, 82, 226, 228], "dipol": [52, 58, 74, 76, 78, 80, 82, 113, 154, 157, 226, 228], "orthogon": [52, 202, 228], "2m": [52, 59, 226, 233], "5m": [52, 59, 226], "cover": [52, 58, 126, 160, 164, 189], "50m": 52, "adc_n_sampl": [52, 58, 227], "512": [52, 155, 216], "adc_sampling_frequ": [52, 58, 119, 227, 228], "ant_orientation_phi": [52, 58, 227], "ant_orientation_theta": [52, 58, 227], "ant_position_x": [52, 58, 227], "ant_position_i": [52, 58, 227], "ant_position_z": [52, 58, 227], "ant_rotation_phi": [52, 58, 227], "ant_rotation_theta": [52, 58, 227], "ant_typ": [52, 58, 73, 74, 227], "createlpda_100mhz": [52, 58], "commission_tim": [52, 58, 73], "tinyd": [52, 58], "01t00": [52, 58], "00": [52, 58, 227], "decommission_tim": [52, 58, 73], "2038": [52, 58], "270": 52, "bicone_v8": [52, 58], "04t00": [52, 58], "pos_altitud": [52, 58, 227], "2800": 52, "pos_sit": [52, 58, 227], "grid": [52, 55, 141, 168, 186, 233], "nearest": 52, "neighbor": [52, 189], "next": [52, 56, 83, 121, 154, 214, 235], "strongli": [52, 154], "linearli": [52, 76], "drop": [52, 74], "domin": [52, 97, 133], "justifi": [52, 56], "eight": 52, "central": [52, 76, 226], "illustr": [52, 54, 56], "copi": [52, 58, 59, 154, 227], "single_posit": 52, "detector_singl": 52, "detector_ful": 52, "insert": [52, 73, 104, 149, 151, 154, 218, 222], "250": [52, 103, 198], "750": 52, "1250": 52, "1500": 52, "horizontal_spacing_detector": 52, "fout": [52, 55], "surround": 52, "bandpass": [52, 125, 127, 133, 136, 145, 187, 198, 201, 205, 206], "mimic": [52, 56, 216], "amplifi": [52, 58, 67, 71, 74, 75, 78, 80, 82, 109, 113, 118, 133, 143, 227], "1xvrm": 52, "rough": [52, 187], "preselect": 52, "criterion": 52, "detector_simul": 52, "evt": [52, 58, 106, 107, 109, 118, 119, 122, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 147, 157, 160, 169, 171, 178, 180, 183, 189, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203], "efieldtovoltageconverterperchannel": 52, "pattern": [52, 56, 76, 97, 165, 166, 168, 180, 183, 201, 227], "downsampl": [52, 58, 119], "channelresampl": [52, 58, 104, 119, 178], "sampling_r": [52, 56, 58, 73, 74, 90, 91, 92, 100, 117, 127, 129, 146, 205, 208, 209, 216, 233], "highpass": [52, 78, 80, 82], "channelbandpassfilt": [52, 58, 104], "passband": [52, 58, 90, 91, 92, 97, 100, 103, 125, 126, 127, 133, 136, 145, 150, 186, 187, 194, 206, 222], "filter_typ": [52, 58, 90, 91, 92, 100, 125, 145, 150, 206], "butter10": 52, "triggersimul": [52, 58, 104, 105, 188, 192, 194, 195, 196, 197, 198, 199], "triggered_channel": [52, 58, 103, 107, 189, 194, 195, 196, 197, 198, 199, 216, 221], "number_concid": [52, 58, 107, 195, 196, 197, 199], "pre_trigger_1sigma": 52, "signific": [52, 76, 114], "trick": 52, "pre": [52, 103, 130, 160, 216], "spend": 52, "quick": [52, 170], "3xvrm": 52, "alon": 52, "iF": [52, 55], "sort": [52, 55, 78, 80, 82, 115], "glob": [52, 55, 157, 181], "json_filenam": [52, 77, 78, 80, 82, 227], "max_amps_env": 52, "coincidence_fract": 52, "triggered_near": 52, "empi": 52, "get_number_of_channel": [52, 63, 70, 74, 78, 79, 80, 82, 87, 102], "get_relative_posit": [52, 63, 70, 74, 78, 79, 80, 82], "mask": 52, "php": 52, "get_marker2": 52, "2g": 52, "set_xlabel": 52, "set_ylabel": 52, "set_titl": 52, "savefig": 52, "png": 52, "raw": [53, 78, 80, 82, 154, 160, 175], "effective_volume_calcul": 53, "peopl": [53, 56], "get_e2_limit_figur": 53, "diffus": 53, "show_grand_10k": 53, "show_grand_200k": 53, "show_heinz": 53, "show_ta": 53, "show_ara": 53, "show_arianna": 53, "add_limit": 53, "n_station": 53, "200": [53, 54, 56, 97, 143, 154, 157, 195, 196, 197, 199, 221, 226, 227], "my": [53, 55, 57, 59], "year": [53, 207], "linestyl": 53, "color": 53, "blue": 53, "linewidth": 53, "special": [54, 55, 57, 229], "daughter": [54, 93], "planar": [54, 57], "z_airboundari": 54, "meter": [54, 97, 141, 223], "reflection_coeffici": 54, "reflection_phase_shift": 54, "index_of_refraction_at_posit": 54, "average_index_of_refraction_between_position1_and_position2": 54, "gradient_index_of_refraction_at_posit": 54, "besid": [54, 56], "mathemat": [54, 57], "math": 54, "deaconu": 54, "hawlei": 54, "allei": 54, "rho": 54, "602": 54, "rho_0": 54, "super": 54, "3000": 54, "51": [54, 117, 126], "handl": [54, 57, 76, 154, 232, 235], "proper": [54, 56, 141, 208], "__ice_model_nuradio": 54, "__scalar_field": 54, "predin": 54, "inher": 54, "confin": 54, "__modul": 54, "stand": 54, "pop": 54, "h": [54, 141, 203, 236], "icemodel_simp": 54, "rp": [54, 90, 91, 92, 100, 125, 206], "z_surfac": 54, "rice2014": 54, "sp": 54, "425": 54, "71": [54, 59, 126], "spice2015": 54, "423": 54, "77": 54, "43": 54, "46": 54, "34": 54, "mb2": 54, "481": 54, "coeffici": [54, 97, 113, 210], "mimick": 54, "ross": 54, "antarctica": 54, "snippet": [54, 233], "independ": [54, 232, 236], "ref_index_model": [54, 57], "ref_index_medium": 54, "z_coordin": 54, "index_at_antenna": 54, "attenuation_length": 54, "hpc": 55, "uc": 55, "irvin": 55, "000": [55, 59], "coupl": [55, 56, 58], "1m": [55, 226], "10m": [55, 226], "million": [55, 58], "10k": 55, "pub": 55, "1e18_n1e6": 55, "1e4": [55, 157], "part0001": 55, "part0100": 55, "schedul": 55, "bash": 55, "steer": 55, "base_dir": 55, "station_design": 55, "detector_sim": 55, "t02runsimul": [55, 59], "detector_filenam": [55, 216], "surface_station_1ghz": [55, 59], "det_dir": 55, "join": [55, 58], "config_5": 55, "working_dir": 55, "suface_station_1ghz": 55, "input_dir": 55, "jcglaser": 55, "yet": [55, 56, 58, 73, 74, 78, 141, 155], "makedir": 55, "current_fold": 55, "dirnam": 55, "detector_fil": [55, 74], "t1": 55, "basenam": 55, "cmd": 55, "engin": 55, "header": [55, 158, 170, 232], "c_": 55, "grb": 55, "grb64": 55, "ckpt": 55, "restart": [55, 231], "pythonpath": 55, "l": [55, 56, 71, 97, 201, 202], "qsub": 55, "often": [55, 154, 232], "consider": [55, 183], "parti": 55, "pillar": 56, "signalgen": [56, 58, 60, 233], "semianalyt": 56, "motiv": [56, 160], "spectra": [56, 112], "resembl": 56, "predict": [56, 212], "refin": [56, 141], "fine": [56, 119, 141, 233], "fluctuat": [56, 216], "fulli": [56, 227], "reproduc": [56, 178], "kind": [56, 72, 73, 212], "semin": 56, "histor": 56, "incredibli": 56, "quit": [56, 231], "emul": 56, "vividli": 56, "2048": 56, "characteris": [56, 114], "polaris": [56, 141, 157], "perpendicular": [56, 58, 74, 76, 78, 80, 82, 141, 210, 228], "volt": [56, 58, 113, 119, 198, 223, 228, 236], "gigahertz": 56, "adimension": 56, "posess": 56, "longitudin": [56, 97, 141], "formula": 56, "percent": 56, "ghz": [56, 57, 58, 83, 117, 119, 228, 233, 236], "offer": [56, 227, 232, 236], "advantag": [56, 58, 59, 227, 232, 233, 236], "stretch": 56, "maxima": [56, 133, 141], "fair": 56, "shower_profil": 56, "shower_library_vx": 56, "pkl": 56, "nue": 56, "txxxx": 56, "a01preprocess_shower_librari": 56, "pickl": [56, 76, 213, 232], "disadvantag": [56, 233], "integrand": 56, "subdivis": 56, "oppos": 56, "less": [56, 58, 154], "suffic": [56, 58], "rather": [56, 74, 201, 227], "radial": [56, 228], "anywai": 56, "piec": 56, "carz": 56, "frame": [56, 88, 95, 99], "e_r": 56, "e_": 56, "plane": [56, 57, 58, 74, 76, 78, 79, 80, 82, 97, 141, 210, 212, 228], "brief": [56, 58], "obscur": 56, "fed": 56, "absolut": [56, 58, 74, 78, 80, 82, 89, 101, 102, 103, 113, 125, 145, 189, 194, 198, 199, 206], "becom": [56, 57, 214], "kilogram": 56, "hard": [56, 115, 160], "wavelength": 56, "kr": 56, "wavenumb": 56, "fresnel": [56, 97], "express": [56, 57, 119, 125], "2r": 56, "sin": [56, 113], "seriou": 56, "instabl": 56, "artifici": 56, "eq": [56, 57, 202], "word": [56, 76, 93, 212], "ask": [56, 78, 82, 154], "inclin": 56, "bent": 56, "light": 56, "bend": 56, "That": [56, 58, 83, 208, 229], "vicin": 56, "But": [56, 227], "zhair": 56, "corea": [56, 104, 132, 152, 219, 227, 232], "cone": [56, 219, 228], "argu": 56, "shallow": 56, "affect": [56, 72, 73, 157, 187], "55": [56, 125, 145, 200], "70": [56, 57, 132, 219], "54": 56, "hinder": 56, "48": [56, 154], "converg": 56, "concentr": 56, "caustic": 56, "entir": [56, 74, 126, 154], "nice": 56, "settl": 56, "debat": 56, "maxwel": 56, "prove": 56, "harder": [56, 227], "nabla": 56, "cdot": [56, 57], "boldsymbol": 56, "rho_f": 56, "term": [56, 141], "epsilon": [56, 212], "permitt": 56, "partial_t": 56, "lorenz": 56, "gaug": 56, "neglect": 56, "implicitli": 56, "claim": 56, "doesn": [56, 154], "disappear": 56, "hoc": 56, "lost": 56, "sound": 56, "finit": [56, 222], "fdtd": 56, "crucial": 56, "interplai": 56, "subsequ": [56, 115], "middl": [56, 115, 218], "nanosecond": [56, 58, 157, 223], "subnanosecond": 56, "substract": [56, 221], "get_tim": [56, 87, 90, 91, 92, 100, 232], "crude": [56, 169], "bumpi": 56, "nevertheless": 56, "decent": 56, "rigor": 56, "aris": 56, "paremeteris": 56, "futur": [56, 57, 58, 67, 71, 148, 155, 160], "my_se": 56, "42": [56, 227, 232], "sake": 56, "notion": 56, "tell": 56, "left": [56, 57, 115, 187], "mistak": 56, "wast": 56, "sft": 56, "jwft": 56, "wrong": [56, 154, 155], "aggrav": 56, "rfft": 56, "real": [56, 76, 82, 83, 119, 200, 227, 233, 236], "whole": [56, 82], "time2freq": [56, 204, 209], "freq2tim": [56, 204, 209], "sampling_tim": 56, "rfftfreq": 56, "trace_back_in_tim": 56, "focuss": 57, "itself": [57, 102, 151, 214, 227, 232], "attenuation_ic": 57, "n_freq": [57, 58], "amplif": [57, 58, 183], "rapid": 57, "ll": 57, "frac": [57, 113], "variat": [57, 150], "stationari": 57, "Not": [57, 58, 89, 101, 102, 141, 155], "said": 57, "pm": 57, "ln": 57, "2n_": 57, "attempt": [57, 115, 213], "gsldir": 57, "gnu": 57, "scientif": 57, "gnu_scientific_librari": 57, "cppanalyticraytrac": 57, "setup": [57, 58, 91, 100, 133, 170], "build_ext": 57, "inplac": 57, "standalon": [57, 117], "makefil": 57, "readm": 57, "modular": 57, "eikon": 57, "rung": 57, "kutta": 57, "scan": [57, 172, 187, 233], "manner": 57, "shown": [57, 126, 141, 201], "extract": [57, 72, 73, 76, 107, 157], "prop": 57, "initial_point": 57, "300": [57, 58, 68, 136], "final_point": 57, "afterward": [57, 227, 235], "solution_int": 57, "rays_2d": 57, "initial_point_2d": 57, "final_point_2d": 57, "Or": 57, "path_length": 57, "And": 57, "xlabel": 57, "ylabel": 57, "sampling_rate_detector": 57, "nyquist_frequ": 57, "50": [57, 58, 76, 83, 117, 128, 132, 134, 219, 226], "ylim": 57, "simple_radiopropa_trac": 57, "arctan": 57, "heart": 58, "layout": [58, 141], "aspect": [58, 235], "visit": 58, "begin": [58, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 118, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 157, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 218, 222, 227, 232, 235], "discuss": 58, "statu": [58, 73, 121, 198, 214, 235], "mysimul": 58, "_detector_simul": 58, "who": [58, 157], "child": [58, 133, 150, 187, 232], "outpufilenam": 58, "initialis": [58, 90, 91, 92, 100, 235], "assign": [58, 215, 236], "convers": [58, 76, 113, 119, 189, 216, 223], "06_webinar": 58, "w02runsimul": 58, "config_default": [58, 59], "overriden": 58, "therein": 58, "weight_mod": 58, "_mantl": 58, "_crust": 58, "_simpl": 58, "parameteris": 58, "At": 58, "1235": 58, "minimum_weight_cut": 58, "skip": [58, 160, 175, 235], "698": 58, "redo_raytrac": 58, "redo": [58, 233], "min_efield_amplitud": 58, "bia": [58, 103, 198], "amp_per_ray_solut": 58, "distance_cut": 58, "max_dist": [58, 165, 186], "intercept": 58, "histogram": [58, 181, 232], "10x10": 58, "distance_cut_intercept": 58, "distance_cut_slop": 58, "9542": 58, "zerosign": 58, "auto": [58, 160], "null": [58, 227], "noise_temperatur": 58, "kelvin": [58, 71, 118, 198, 223], "save_al": 58, "analog": [58, 97, 119, 189, 228], "digit": [58, 119, 154, 189, 216, 228], "resampl": [58, 87, 90, 91, 92, 100, 119, 129, 146, 181], "altitud": [58, 79, 97, 141], "associ": [58, 83, 93, 115, 157, 227, 232], "mark": [58, 142], "boresight": [58, 74, 76, 78, 79, 80, 82, 228], "tine": [58, 74, 76, 78, 79, 80, 82, 226, 228], "xz": 58, "135": 58, "pos_east": [58, 227], "pos_north": [58, 227], "102": [58, 97], "ident": [58, 109, 118, 202, 227], "_default": 58, "adc_id": 58, "256": [58, 128], "adc_nbit": [58, 119, 228], "adc_time_delai": [58, 119], "amp_reference_measur": 58, "amp_typ": [58, 67, 71, 109, 118, 227], "vpol_prototype_50cm_n1": 58, "74": [58, 76], "cab_id": 58, "17": [58, 97, 127], "09": [58, 154, 155], "cab_length": 58, "cab_reference_measur": 58, "cab_time_delai": [58, 227], "cab_typ": 58, "lmr_400": 58, "92": 58, "bicone_v8_inf_n1": 58, "97": 58, "mac_address": 58, "0002f7f2e7b9": 58, "mbed_typ": 58, "v1": 58, "board_numb": 58, "203": [58, 97], "pos_measurement_tim": 58, "pos_posit": 58, "station_typ": [58, 79, 227], "teach": 58, "princip": 58, "constitu": 58, "guidelin": 58, "argpars": 58, "simplethreshold": [58, 104, 192], "highlowthreshold": [58, 104, 192], "channelgenericnoiseadd": [58, 104], "__name__": 58, "__main__": 58, "results_fold": 58, "mkdir": [58, 59], "great": 58, "christoph": 58, "massiv": 58, "heavi": 58, "Be": 58, "comments_detector": 58, "txt": [58, 76], "understand": [58, 160, 229], "parser": 58, "argumentpars": 58, "add_argu": 58, "input_3": 58, "2e": 58, "19_1": 58, "0e": 58, "20": [58, 72, 73, 74, 83, 97, 127, 134, 141, 150, 160, 168, 180, 221, 226, 227], "numc_output": 58, "narg": 58, "parse_arg": 58, "incomplet": [58, 82, 227], "design": [58, 82, 127, 180, 181], "lack": [58, 229], "_detector_simulation_filter_amp": 58, "_detector_simulation_trigg": 58, "characterist": [58, 227], "chain": [58, 71, 72, 73, 74, 83, 229], "act": [58, 151], "700": 58, "butter": [58, 90, 91, 92, 100, 125, 145, 150, 206], "150": 58, "800": [58, 141], "coincid": [58, 61, 103, 107, 194, 195, 196, 197, 198, 199, 216], "subset": 58, "threshold_high": [58, 103, 195, 196], "_vrm": 58, "threshold_low": [58, 103, 195, 196], "coinc_window": [58, 107, 194, 195, 196, 197, 198, 199], "hilo_2of4_5_sigma": 58, "simple_10_sigma": 58, "default_detector": 58, "01_veff_simul": 59, "home": [59, 65, 67, 71, 76, 103], "cp": 59, "t01generate_event_list": 59, "1e19": 59, "1e19_n1e3": 59, "1e19_n1e3_output": 59, "_c_": 59, "18": [59, 97, 207], "018": 59, "22": [59, 97, 132, 219], "sr": [59, 207], "26m": 59, "binari": 59, "1e18_n1e4": 59, "1e18_n1e4_output": 59, "laptop": 59, "29": [59, 97], "later": [59, 114, 115, 141, 187, 227, 233, 235], "though": [59, 72, 73, 154, 235], "worri": [59, 236], "adc": [59, 103, 113, 119, 160, 175, 189, 216], "bicon": [59, 226], "detector_nam": 59, "everyth": [59, 83], "easier": [59, 109, 118, 227, 236], "t05visualize_sim_output": 59, "submodul": [60, 137, 225], "api": [62, 72, 73, 237], "analog_compon": [63, 64, 66, 70, 109, 118], "load_system_respons": [63, 64, 65], "get_system_respons": [63, 64, 65], "load_amplifier_respons": [63, 66, 67], "load_amp_measur": [63, 66, 67], "get_amplifier_respons": [63, 66, 67, 70, 74, 78, 80, 82, 109, 118], "get_cable_response_parametr": [63, 66, 67], "get_cable_respons": [63, 66, 67], "get_available_amplifi": [63, 66, 67, 70, 71], "preprocessamprespons": [63, 66], "save_preprocessed_amp": [63, 66, 68], "preprocess_300amp": [63, 66, 68], "lofar": [63, 76, 104, 152], "rno_g": [63, 77, 97, 104, 152, 176, 198], "load_amp_respons": [63, 70, 71], "db_mongo_read": [63, 70], "dictionarize_nested_list": [63, 70, 72], "dictionarize_nested_lists_as_tupl": [63, 70, 72], "db_mongo_writ": [63, 70], "rnog_detector": [63, 70, 77], "amp": [63, 67, 68, 71, 78, 80, 82, 109, 118, 127, 130, 143], "get_amp_respons": [63, 75], "antennapattern": 63, "interpolate_linear": [63, 76], "interpolate_linear_vector": [63, 76], "get_group_delai": [63, 76], "parse_rnog_xfdtd_fil": [63, 76], "preprocess_rnog_xfdtd": [63, 76], "parse_wipld_fil": [63, 76], "preprocess_wipld_old": [63, 76], "save_preprocessed_wipld_old": [63, 76], "preprocess_wipld": [63, 76], "save_preprocessed_wipld": [63, 76], "save_preprocessed_wipld_forara": [63, 76], "get_pickle_antenna_respons": [63, 76], "parse_aera_xml_fil": [63, 76], "preprocess_aera": [63, 76], "parse_ara_fil": [63, 76], "preprocess_ara": [63, 76], "parse_hfss_fil": [63, 76], "preprocess_hfss": [63, 76], "preprocess_xfdtd": [63, 76], "parse_lofar_txt_fil": [63, 76], "preprocess_lofar_txt": [63, 76], "antennapatternbas": [63, 76], "get_antenna_response_vector": [63, 76], "antennapatternanalyt": [63, 76], "parametric_phas": [63, 76], "antennapatternprovid": [63, 76, 222], "load_antenna_pattern": [63, 76], "find_path": [63, 77], "find_reference_entri": [63, 77], "detector_bas": [63, 77], "datetimeseri": [63, 78], "obj_class": [63, 78], "decod": [63, 78], "buffer_db": [63, 78], "detectorbas": [63, 78, 80, 82], "get_station_id": [63, 70, 72, 73, 74, 78, 80, 82, 87, 93, 99, 153, 154], "get_stat": [63, 70, 74, 78, 80, 82, 87, 93, 153, 157, 232], "has_stat": [63, 70, 74, 78, 80, 82], "get_unique_time_period": [63, 78, 80, 82], "get_detector_tim": [63, 70, 72, 73, 74, 78, 80, 82], "get_channel": [63, 70, 74, 78, 80, 82, 87, 101, 102], "get_devic": [63, 70, 74, 78, 80, 82], "get_absolute_posit": [63, 70, 74, 78, 80, 82, 227], "get_absolute_position_sit": [63, 78, 79, 80, 82], "get_sit": [63, 70, 74, 78, 79, 80, 82], "get_site_coordin": [63, 78, 80, 82], "get_channel_id": [63, 70, 74, 78, 80, 82, 87, 92, 101, 102, 232], "get_parallel_channel": [63, 78, 80, 82], "get_number_of_devic": [63, 78, 80, 82], "get_device_id": [63, 78, 80, 82], "get_cable_delai": [63, 70, 74, 78, 79, 80, 82], "get_cable_type_and_length": [63, 78, 79, 80, 82], "get_antenna_typ": [63, 70, 74, 78, 79, 80, 82], "get_antenna_deployment_tim": [63, 78, 79, 80, 82], "get_antenna_orient": [63, 70, 74, 78, 79, 80, 82], "get_amplifier_typ": [63, 78, 79, 80, 82], "get_amplifier_measur": [63, 78, 80, 82], "get_sampling_frequ": [63, 70, 74, 78, 79, 80, 82], "get_number_of_sampl": [63, 70, 74, 78, 79, 80, 82, 87, 90, 91, 92, 100], "get_antenna_model": [63, 70, 74, 78, 79, 80, 82], "get_channel_group_id": [63, 78, 80, 82], "get_noise_rm": [63, 78, 80, 82, 130], "get_noise_temperatur": [63, 70, 74, 78, 80, 82], "is_channel_noiseless": [63, 70, 74, 78, 80, 82], "detector_sql": 63, "get_everyth": [63, 79], "get_everything_channel": [63, 79], "get_everything_st": [63, 79], "get_everything_posit": [63, 79], "get_antenna_model_fil": [63, 79], "get_station_typ": [63, 79], "detector_sys_uncertainti": 63, "detectorsysuncertainti": [63, 80], "set_antenna_orientation_offset": [63, 80], "reset_antenna_orientation_offset": [63, 80], "set_antenna_position_offset": [63, 80], "reset_antenna_position_offset": [63, 80], "filterrespons": [63, 125, 206], "get_filter_response_mini_circuit": [63, 81], "get_filter_response_mini_circuits2": [63, 81], "get_filter_respons": [63, 81, 150, 204, 206], "generic_detector": [63, 77], "genericdetector": [63, 82, 107, 109, 166, 186, 187], "add_generic_st": [63, 82], "add_station_properties_for_ev": [63, 82, 227], "get_station_properties_for_ev": [63, 82], "set_ev": [63, 82, 227], "get_reference_st": [63, 82], "get_reference_station_id": [63, 82], "get_default_st": [63, 82], "get_default_station_id": [63, 82], "get_default_channel": [63, 82], "get_default_channel_id": [63, 82], "get_raw_st": [63, 82], "get_raw_channel": [63, 82], "get_nam": [63, 83, 87, 95, 103], "get_time_delai": [63, 70, 74, 83, 108, 109, 116, 118], "subtract_time_delay_from_respons": [63, 83], "sql_to_json": 63, "test_detector_db": 63, "visualize_detector": [63, 228], "bhokansonfasig": 65, "tree": [65, 174, 175], "possibli": [67, 71], "amp_measur": 67, "buffer": [67, 72, 73, 74, 76, 78, 158, 227], "cable_typ": [67, 73], "cable_length": 67, "cabl": [67, 73, 74, 78, 80, 82, 109, 113, 118, 123, 154, 227], "amp_nam": [68, 73, 75], "hardwarerespons": 68, "preprocess": [68, 76, 175], "seri": [68, 90, 91, 92, 100, 113, 141], "ex": [68, 76], "set_database_tim": [70, 72, 73], "set_detector_tim": [70, 72, 73], "get_database_tim": [70, 72, 73], "find_primary_measur": [70, 72, 73], "get_object_nam": [70, 72, 73], "get_collection_nam": [70, 72, 73], "load_board_inform": [70, 72, 73], "get_general_station_inform": [70, 72, 73], "get_general_channel_inform": [70, 72, 73], "get_general_device_inform": [70, 72, 73], "get_collection_inform": [70, 72, 73], "get_quantity_nam": [70, 72, 73], "get_all_available_signal_chain_config": [70, 72, 73], "get_identifi": [70, 72, 73], "get_posit": [70, 72, 73, 87, 92, 232], "get_channel_signal_chain_measur": [70, 72, 73], "get_component_data": [70, 72, 73], "get_complete_station_inform": [70, 72, 73], "get_channel_signal_chain": [70, 72, 73, 74], "get_complete_channel_inform": [70, 72, 73], "get_complete_device_inform": [70, 72, 73], "query_modification_timestamps_per_st": [70, 72, 73], "rename_database_collect": [70, 73], "create_empty_collect": [70, 73], "clone_collection_to_collect": [70, 73], "set_not_work": [70, 73], "add_entry_to_databas": [70, 73], "add_general_station_info": [70, 73], "add_general_channel_info_to_st": [70, 73], "add_general_device_info_to_st": [70, 73], "add_measurement_protocol": [70, 73], "update_current_primari": [70, 73], "change_primary_antenna_measur": [70, 73], "change_primary_cable_measur": [70, 73], "change_primary_iglu_measur": [70, 73], "change_primary_drab_measur": [70, 73], "change_primary_surface_measur": [70, 73], "change_primary_downhole_measur": [70, 73], "decommission_a_st": [70, 73], "decommission_a_channel": [70, 73], "decommission_a_devic": [70, 73], "export_as_str": [70, 74], "get_channel_orient": [70, 74], "get_signal_chain_respons": [70, 74, 83], "get_signal_chain_compon": [70, 74], "get_relative_position_devic": [70, 74], "rno_surfac": 71, "temp": [71, 73, 118, 160], "293": [71, 118], "hardwar": [71, 72, 73, 106, 109, 118], "incorpor": [71, 106, 109, 118], "ri": 71, "hardweareresponseincorpor": 71, "52": 71, "room": 71, "empir": 71, "board": [71, 73, 103, 198], "drab": [71, 72, 73, 74], "fiber": [71, 73, 74], "iglu": [71, 72, 73, 74, 227], "climat": 71, "chamber": 71, "phased_arrai": 71, "15k": 71, "connect": [72, 73, 74], "preconfigur": [72, 73], "mongo": [72, 73, 74], "client": [72, 73], "freeli": [72, 73], "acces": [72, 73], "db": [72, 73, 74, 78, 83, 160], "database_connect": [72, 73, 74], "rnog_publ": [72, 73], "env_pw_us": [72, 73], "server": [72, 73, 76, 78, 80, 226, 227], "environment": [72, 73], "mongo_serv": [72, 73], "mongo_us": [72, 73], "mongo_password": [72, 73], "rnog_test_publ": [72, 73, 74], "connection_str": [72, 73], "db_mongo_connection_str": [72, 73], "database_nam": [72, 73], "rnog_liv": [72, 73], "mongo_kwarg": [72, 73], "mongocli": [72, 73], "utc": [72, 73, 154, 157], "commiss": [72, 73, 74, 82, 227, 229], "collection_nam": [72, 73], "primary_tim": [72, 73], "identification_label": [72, 73], "data_dict": [72, 73], "object_id": [72, 73], "measurement_id": [72, 73], "surface_board": [72, 73], "iglu_board": [72, 73], "timestamp": [72, 73, 79, 154, 157], "s_paramet": [72, 73, 76], "object_typ": [72, 73], "board_nam": [72, 73], "info_nam": [72, 73], "device_id": [72, 73, 74, 78, 80, 82], "devic": [72, 73, 74, 78, 80, 82], "search_bi": [72, 73], "obj_id": [72, 73], "measurement_nam": [72, 73], "use_primary_time_with_measur": [72, 73], "station_posit": [72, 73, 141, 227], "channel_posit": [72, 73], "signal_chain": [72, 73, 74], "unless": [72, 73, 160], "wanted_quant": [72, 73], "object_nam": [72, 73], "input_d": [72, 73], "golden_iglu": [72, 73], "measurement_temp": [72, 73], "drab_id": [72, 73], "golden_drab": [72, 73], "channel_device_id": [72, 73], "position_id": [72, 73], "channel_signal_id": [72, 73], "component_typ": [72, 73], "component_id": [72, 73], "supplementary_info": [72, 73], "sparamet": [72, 73], "s21": [72, 73], "measurement_station_posit": [72, 73], "measurement_channel_posit": [72, 73], "measurement_signal_chain": [72, 73], "measurement_device_posit": [72, 73], "complete_info": [72, 73], "indentifi": [72, 73], "dictinoari": [72, 73], "otherth": [72, 73], "response_chain": [72, 73], "measurement_posit": [72, 73], "modif": [72, 73], "requier": [72, 73, 88, 95, 99], "station_data": [72, 73], "modification_timestamp": [72, 73], "station_commission_timestamp": [72, 73], "station_decommission_timestamp": [72, 73], "former": [72, 73, 229], "comiss": [72, 73, 227], "nested_list": 72, "parent_kei": 72, "nested_field": 72, "nested_kei": 72, "aggreg": 72, "old_nam": 73, "new_nam": 73, "fail": [73, 213], "old_collect": 73, "new_collect": 73, "primary_measur": 73, "breakout_id": 73, "breakout_channel_id": 73, "broken": 73, "dosn": 73, "breakout": 73, "identification_kei": 73, "identification_valu": 73, "primary_measurement_start": 73, "hpol": [73, 74, 183, 226], "vpol": [73, 74, 183, 226], "station_nam": 73, "station_com": 73, "number_of_sampl": [73, 74, 128], "2080": 73, "channel_com": 73, "device_nam": 73, "device_com": 73, "protocol_nam": 73, "utcnow": [73, 229], "antenna_typ": [73, 226], "antenna_nam": [73, 115, 154, 166], "protocol": 73, "units_arr": 73, "function_test": 73, "s11": 73, "cable_nam": 73, "downhol": 73, "board_typ": 73, "laser_id": 73, "iglu_id": 73, "photodiode_id": 73, "breakout_cha_id": 73, "decomm_tim": 73, "decommiss": [73, 82, 227], "over_write_handset_valu": 74, "database_tim": [74, 229], "always_query_entire_descript": 74, "select_st": 74, "logger": [74, 83, 104, 121, 141, 160, 166, 214, 235], "acut": 74, "question": [74, 227], "queri": [74, 160, 227], "describt": 74, "descib": 74, "json_kwarg": 74, "_json_seri": 74, "skip_signal_chain_respons": 74, "dumps_kwarg": 74, "constructor": [74, 186, 187, 227, 232, 235], "idendifi": 74, "channel_info": 74, "station_info": 74, "site": [74, 78, 80, 82, 136, 141, 164, 183, 211], "outward": [74, 76, 78, 80, 82, 228], "symmetri": [74, 76, 78, 80, 82, 228, 233], "counterclockwis": [74, 76, 78, 79, 80, 82, 228], "orientation_theta": [74, 76, 228], "orientation_phi": [74, 76, 228], "rotation_theta": [74, 76, 228], "rotation_phi": [74, 76, 228], "tubl": 74, "channel_signal_chain": 74, "repons": [74, 83], "coax": [74, 113], "radiant": [74, 141], "signal_chain_compon": 74, "dictonari": [74, 76], "particlular": 74, "rais": [74, 93, 115, 117, 125, 160, 171, 214], "pariti": 74, "antenna_model": [74, 76], "vel": [74, 76], "accronym": 74, "abbrivatipn": 74, "record": [74, 154, 157, 178, 180, 232], "outer": 74, "tempertur": 74, "use_stor": 74, "delai": [74, 76, 78, 80, 82, 83, 103, 111, 112, 119, 123, 154, 157, 189, 200, 210, 212, 216, 222, 233], "cable_onli": 74, "time_delai": [74, 83, 222], "ntu": 75, "y1": 76, "interpolation_method": 76, "imaginari": 76, "magnitud": [76, 97, 115, 201, 226], "vector_effective_length": 76, "df": 76, "effecitv": 76, "path_gain": 76, "path_phas": 76, "xfdtd": [76, 226], "THAT": 76, "THE": 76, "IN": 76, "TO": 76, "OF": 76, "ad1": 76, "ra1": 76, "gen_num": 76, "wipld": 76, "s_12": 76, "older": [76, 227, 229], "insuffici": 76, "incid": [76, 202, 210], "circuit": 76, "ohm": [76, 208], "180deg": [76, 78, 79, 80, 82, 228], "ff2": 76, "inicd": 76, "h_phi": 76, "h_theta": 76, "wipl": [76, 226], "verifi": 76, "sha1": [76, 226], "pars": [76, 81, 158, 166, 170, 227], "ascii": 76, "containig": 76, "hfss": 76, "magnitudes_theta": 76, "magnitudes_phi": 76, "phases_phi": 76, "phases_theta": 76, "csv": [76, 160], "path_theta": 76, "path_phi": 76, "lba": [76, 154, 155], "ant": 76, "nrr": 76, "antennamodel": 76, "interpolation_mod": 76, "magphas": 76, "cutoff_freq": 76, "phase_typ": 76, "theoret": 76, "usag": [76, 227, 236], "occupi": 76, "station_dict": [77, 82], "reference_st": [77, 82, 227], "reference_channel": [77, 82, 227], "rnog_mongo": 77, "backward": [77, 78, 80, 82, 154, 209], "assume_inf": [77, 78, 80, 82], "antenna_by_depth": [77, 78, 80, 82], "alia": 78, "obj": 78, "rtype": 78, "in_memori": 78, "tini": 78, "tb": 78, "detector_sql_auth": [78, 80], "credenti": [78, 80], "arianna_detector_db": [78, 80, 82], "madel": [78, 80, 82], "_inffirn": [78, 80, 82], "period": [78, 80, 82, 226], "mode_id": [78, 82], "deploi": [78, 80, 82, 229], "latitud": [78, 80, 82, 113], "longitud": [78, 80, 82, 113], "lmr240": [78, 80, 82], "deploy": [78, 80, 82, 228], "differenti": [78, 79, 80, 82, 127, 207], "group_id": [78, 80, 82, 91, 100], "stage": [78, 80, 82, 175], "precomput": [78, 80, 82], "deconvolv": [78, 80, 82, 109, 118], "100mhz": [78, 80, 82], "deviat": [78, 80, 82, 103, 169, 208, 233], "noiseless": [78, 80, 82], "proxi": [78, 80, 82], "utm": 79, "connector": [79, 228], "ori_theta": 80, "ori_phi": 80, "rot_theta": 80, "rot_phi": 80, "systemat": [80, 143], "filter_nam": 81, "minicircuit": 81, "default_st": 82, "default_channel": 82, "default_devic": 82, "reference_devic": 82, "run_numb": [82, 93, 160, 175], "whose": [82, 126, 128, 232, 233], "y_unit": 83, "remove_time_delai": 83, "debug_plot": 83, "multipi": 83, "trace_at_readout": 83, "trace_at_antenna": 83, "arang": 83, "complex_resp": 83, "mag": 83, "Will": [83, 117, 125, 203], "alongsid": 83, "Its": [83, 235], "expon": 83, "multiplicit": 83, "ax1": 83, "in_db": 83, "plt_kwarg": 83, "resp": 83, "base_show": 87, "baseshow": [87, 88, 95, 99, 141], "get_id": [87, 88, 89, 91, 93, 95, 98, 99, 100, 101, 102], "get_paramet": [87, 88, 89, 91, 92, 93, 95, 98, 99, 100, 101, 102, 232], "set_paramet": [87, 88, 89, 91, 92, 93, 95, 98, 99, 100, 101, 102, 232], "has_paramet": [87, 88, 89, 91, 92, 93, 95, 98, 99, 100, 101, 102], "get_axi": [87, 88, 95, 99], "get_coordinatesystem": [87, 88, 95, 99], "deseri": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 232], "base_st": [87, 200], "basest": [87, 89, 101, 102], "set_parameter_error": [87, 89, 92, 101, 102, 232], "get_parameter_error": [87, 89, 92, 101, 102, 232], "remove_paramet": [87, 89, 101, 102], "set_station_tim": [87, 89, 101, 102], "get_station_tim": [87, 89, 101, 102], "get_station_time_dict": [87, 89, 101, 102], "remove_trigg": [87, 89, 101, 102], "get_trigg": [87, 89, 101, 102], "has_trigg": [87, 89, 93, 101, 102, 103, 105, 107], "set_trigg": [87, 89, 101, 102, 103], "set_electric_field": [87, 89, 101, 102], "get_electric_field": [87, 89, 101, 102, 232], "add_electric_field": [87, 89, 101, 102], "get_electric_fields_for_channel": [87, 89, 101, 102, 232], "is_neutrino": [87, 89, 101, 102], "is_cosmic_rai": [87, 89, 101, 102], "set_is_neutrino": [87, 89, 101, 102], "set_is_cosmic_rai": [87, 89, 101, 102], "get_arianna_paramet": [87, 89, 101, 102], "has_arianna_paramet": [87, 89, 101, 102], "set_arianna_paramet": [87, 89, 101, 102], "basetrac": [87, 90, 91, 92, 133, 150, 187, 233], "get_trac": [87, 90, 91, 92, 100, 153, 157, 232], "get_filtered_trac": [87, 90, 91, 92, 100], "set_trac": [87, 90, 91, 92, 100, 232], "set_frequency_spectrum": [87, 90, 91, 92, 100, 232, 233], "set_trace_start_tim": [87, 90, 91, 92, 100, 232], "add_trace_start_tim": [87, 90, 91, 92, 100], "get_trace_start_tim": [87, 90, 91, 92, 100], "get_frequ": [87, 90, 91, 92, 100, 232], "get_hilbert_envelop": [87, 90, 91, 92, 100], "get_hilbert_envelope_mag": [87, 90, 91, 92, 100], "apply_time_shift": [87, 90, 91, 92, 100], "get_group_id": [87, 91, 100], "electric_field": [87, 89, 101, 102, 222], "get_unique_identifi": [87, 92, 100], "has_parameter_error": [87, 92], "set_channel_id": [87, 92], "has_channel_id": [87, 92], "get_shower_id": [87, 92, 100, 101], "get_ray_tracing_solution_id": [87, 92, 100], "set_posit": [87, 92], "register_module_ev": [87, 93], "register_module_st": [87, 93], "iter_modul": [87, 93], "get_generator_info": [87, 93], "set_generator_info": [87, 93], "has_generator_info": [87, 93], "set_id": [87, 93], "get_run_numb": [87, 93], "set_stat": [87, 93], "add_particl": [87, 93], "get_particl": [87, 93], "get_primari": [87, 93], "get_par": [87, 93], "has_particl": [87, 93], "get_interaction_product": [87, 93], "add_show": [87, 93], "get_show": [87, 93, 232], "has_show": [87, 93], "get_first_show": [87, 93, 232], "add_sim_show": [87, 93], "get_sim_show": [87, 93, 232], "get_first_sim_show": [87, 93], "has_sim_show": [87, 93], "get_hybrid_inform": [87, 93, 232], "hybrid_inform": 87, "hybridinform": [87, 94, 232], "add_hybrid_show": [87, 94, 232], "get_hybrid_show": [87, 94, 232], "hybrid_show": [87, 94], "hybridshow": [87, 95, 232], "set_hybrid_detector": [87, 95, 232], "get_hybrid_detector": [87, 95, 232], "parameter_seri": 87, "serialize_covari": [87, 96], "deserialize_covari": [87, 96], "stationparamet": [87, 97, 232], "nu_zenith": [87, 97], "nu_azimuth": [87, 97], "nu_flavor": [87, 97], "nu_vertex": [87, 97, 133], "cr_energi": [87, 97], "cr_zenith": [87, 97, 232], "cr_azimuth": [87, 97], "channels_max_amplitud": [87, 97], "zenith_cr_templatefit": [87, 97], "zenith_nu_templatefit": [87, 97], "cr_xcorrel": [87, 97], "nu_xcorrel": [87, 97], "station_tim": [87, 97], "cr_energy_em": [87, 97], "nu_inttyp": [87, 97], "chi2_efield_time_direction_fit": [87, 97], "ndf_efield_time_direction_fit": [87, 97], "cr_xmax": [87, 97], "vertex_2d_fit": [87, 97, 133], "distance_correl": [87, 97], "viewing_angl": [87, 97, 233], "flagged_channel": [87, 97], "cr_dominant_polaris": [87, 97], "dirty_fft_channel": [87, 97], "channelparamet": [87, 97, 117], "maximum_amplitude_envelop": [87, 97], "p2p_amplitud": [87, 97], "signal_tim": [87, 97, 134], "noise_rm": [87, 97], "signal_region": [87, 97], "noise_region": [87, 97], "signal_time_offset": [87, 97], "signal_receiving_zenith": [87, 97], "signal_ray_typ": [87, 97], "signal_receiving_azimuth": [87, 97], "block_offset": [87, 97, 117], "electricfieldparamet": [87, 97], "ray_path_typ": [87, 89, 97, 101, 102], "polarization_angl": [87, 97], "polarization_angle_expect": [87, 97], "signal_energy_flu": [87, 97], "cr_spectrum_slop": [87, 97], "nu_vertex_dist": [87, 97], "nu_viewing_angl": [87, 97], "max_amp_antenna": [87, 97], "max_amp_antenna_envelop": [87, 97], "reflection_coefficient_theta": [87, 97], "reflection_coefficient_phi": [87, 97], "cr_spectrum_quadratic_term": [87, 97], "energy_fluence_ratio": [87, 97], "ariannaparamet": [87, 97], "seq_start_tim": [87, 97], "seq_stop_tim": [87, 97], "seq_num": [87, 97], "comm_period": [87, 97], "comm_dur": [87, 97], "trigger_threshold": [87, 97], "l1_supression_valu": [87, 97], "internal_clock_tim": [87, 97], "showerparamet": [87, 88, 95, 97, 99], "electromagnetic_energi": [87, 97], "radiation_energi": [87, 97], "electromagnetic_radiation_energi": [87, 97], "primary_particl": [87, 97], "shower_maximum": [87, 97], "distance_shower_maximum_geometr": [87, 97], "distance_shower_maximum_grammag": [87, 97], "parent_id": [87, 97], "refractive_index_at_ground": [87, 97], "atmospheric_model": [87, 97], "magnetic_field_rot": [87, 97], "magnetic_field_vector": [87, 97, 101, 141], "observation_level": [87, 97], "charge_excess_profile_id": [87, 97], "interferometric_shower_maximum": [87, 97], "interferometric_shower_axi": [87, 97], "interferometric_cor": [87, 97], "particleparamet": [87, 97], "generatorattribut": [87, 97], "total_number_of_ev": [87, 97], "eventparamet": [87, 97], "sim_config": [87, 97], "hash_nuradioreco": [87, 97], "hash_nuradiomc": [87, 97], "as_hdf5_dict": [87, 98], "radio_show": 87, "radioshow": [87, 93, 99, 232], "has_station_id": [87, 99], "sim_channel": [87, 101], "simchannel": [87, 100, 101, 144, 150, 171], "sim_stat": [87, 102, 141, 164, 169], "simstat": [87, 101, 171], "get_magnetic_field_vector": [87, 101, 102], "set_magnetic_field_vector": [87, 101], "get_simulation_weight": [87, 101], "set_simulation_weight": [87, 101], "iter_channel": [87, 101, 102, 232], "add_channel": [87, 101, 102], "get_ray_tracing_id": [87, 101], "get_channels_by_channel_id": [87, 101], "get_channels_by_shower_id": [87, 101], "get_channels_by_ray_tracing_id": [87, 101], "set_sim_st": [87, 102], "get_sim_st": [87, 102, 232], "has_sim_st": [87, 102], "iter_channel_group": [87, 102], "remove_channel": [87, 102], "set_reference_reconstruct": [87, 102], "get_reference_reconstruct": [87, 102], "get_reference_direct": [87, 102], "set_trigger_tim": [87, 103], "get_trigger_tim": [87, 103], "get_typ": [87, 103], "get_triggered_channel": [87, 103], "set_triggered_channel": [87, 103], "set_pre_trigger_tim": [87, 103], "get_pre_trigger_tim": [87, 103], "get_trigger_set": [87, 103], "simplethresholdtrigg": [87, 103], "envelopephasedtrigg": [87, 103], "simplephasedtrigg": [87, 103], "highlowtrigg": [87, 103], "integratedpowertrigg": [87, 103], "envelopetrigg": [87, 103, 104, 192], "rnogsurfacetrigg": [87, 103], "antiparallel": [88, 95, 99], "movement": [88, 95, 99], "particla": [88, 95, 99], "coordinatesystem": [88, 95, 99, 141], "cstrafo": [88, 95, 99, 141], "coordiat": [88, 95, 99], "magnet": [88, 95, 97, 99, 141], "data_pkl": [88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103], "_event_tim": [89, 101, 102], "isot": [89, 101, 102], "_station_tim": [89, 101, 102], "save_efield_trac": [89, 101], "ifft": [90, 91, 92, 100], "represent": [90, 91, 92, 100, 157], "date": [90, 91, 92, 100, 154], "butterab": [90, 91, 92, 100, 103, 125, 145, 206], "butterworth": [90, 91, 92, 100, 103, 125, 136, 145, 194, 201, 206, 208, 222], "frequency_spectrum": [90, 91, 92, 100], "start_tim": [90, 91, 92, 100, 157], "delta_t": [90, 91, 92, 100], "silent": [90, 91, 92, 100], "theorem": [90, 91, 92, 100], "cyclic": [90, 91, 92, 100, 222], "wrap": [90, 91, 92, 100, 233], "acommod": [90, 91, 92, 100], "channel_group_id": [91, 100, 102], "dual": [91, 100, 154], "tripl": [91, 100, 101], "common": [91, 100, 125], "save_trac": [91, 92, 100], "ray_tracing_id": [92, 100, 101], "regist": [93, 121, 227], "inter": 93, "sequenc": [93, 97], "evt_id": 93, "particle_id": [93, 204, 217], "particle_or_show": 93, "parent_particl": 93, "sim_show": [93, 141, 164], "hybrid": 93, "hybrid_detector": 95, "target_object": 96, "parameter_enum": 96, "no_arg": 97, "qualnam": 97, "ot": 97, "crosscorrel": 97, "cr": [97, 111, 114, 132], "26": 97, "chi2": [97, 183], "fitter": 97, "27": 97, "freedom": 97, "28": 97, "31": [97, 126], "60": [97, 103, 132, 141, 198, 219], "readlofardata": [97, 115, 152, 153], "stationrfifilt": [97, 104, 110], "61": [97, 126], "stationpulsefind": [97, 104, 110], "62": 97, "rfi": [97, 113, 115, 157], "ampliud": 97, "likel": 97, "pedest": [97, 160], "channelblockoffsetfitt": [97, 104, 116, 160], "onski": 97, "e_theta": 97, "e_phi": 97, "voltagetoanalyticefieldconvert": [97, 104, 136], "convolut": [97, 125, 206, 208], "channelid": 97, "dirat": 97, "provi": 97, "l1": 97, "supress": 97, "sea": 97, "corrdinatesystem": 97, "103": 97, "104": 97, "105": 97, "106": 97, "107": 97, "108": 97, "109": 97, "110": [97, 107], "longitudion": 97, "120": [97, 130, 219], "121": 97, "122": [97, 155], "ob": 97, "footprint": 97, "23": 97, "201": 97, "202": 97, "particle_index": 98, "regular": 100, "apart": 100, "simulation_weight": 101, "unique_identifi": 101, "save_channel_trac": 101, "use_channel": [102, 183, 201, 202], "delet": 102, "suppli": [102, 119], "triggers_pkl": 103, "trigger_typ": [103, 160, 175], "involv": 103, "pre_trigger_tim": [103, 189, 200, 216], "readout": [103, 200], "triggertimeadjust": [103, 104], "number_of_coincid": [103, 195], "channel_coincidence_window": 103, "threshold_factor": 103, "power_mean": [103, 107, 208], "power_std": [103, 107, 208], "phasing_angl": [103, 189], "trigger_delai": [103, 189], "output_passband": [103, 208], "diod": [103, 107, 198, 208, 221], "calculate_noise_paramet": [103, 204, 208], "diodesimul": [103, 204, 221], "6th": [103, 208], "secondary_channel": 103, "primary_angl": 103, "secondary_angl": 103, "sec_trigger_delai": 103, "window_s": 103, "maximum_amp": [103, 189], "subbeam": [103, 189], "tick": [103, 189], "stride": [103, 216], "high_low_window": [103, 195, 196], "integration_window": [103, 197], "filtertyp": 103, "vbia": [103, 198], "hardwareresponseincorpor": [104, 105, 108, 116, 125], "beamformingdirectionfitter_lofar": [104, 110], "geometric_delai": [104, 110, 111, 112], "beamformingdirectionfitt": [104, 110, 111], "beamforming_util": [104, 110], "mini_beamform": [104, 110, 112], "beamform": [104, 110, 112, 114, 141, 216], "geometricdelayfarfield": [104, 110, 112], "stationgalacticcalibr": [104, 110], "fourier_seri": [104, 110, 113], "find_snr_of_timeseri": [104, 110, 114], "num_double_zero": [104, 110, 115], "median_sorted_by_pow": [104, 110, 115], "findrfi_lofar": [104, 110, 115], "channelblockoffset": [104, 116, 117], "fit_block_offset": [104, 116, 117], "setup_logg": [104, 120, 121, 204, 214, 235], "register_run": [104, 120, 121], "deltat": [104, 137], "iftelectricfieldreconstructor": 104, "linearslopeoper": [104, 149, 151], "slopespectrumoper": [104, 149, 151], "domainflipp": [104, 149, 151], "symmetrizingoper": [104, 149, 151], "io": [104, 227, 232], "araroot": [104, 152], "nuradiorecoio": [104, 152, 227, 232], "eventread": [104, 152, 227, 232], "eventwrit": [104, 152, 227, 232], "get_head": [104, 152, 158, 170, 171, 232], "event_parser_factori": [104, 152], "scan_files_funct": [104, 152, 172], "iter_events_funct": [104, 152, 172], "measured_nois": 104, "channelmeasurednoiseadd": [104, 176], "neutrinodirectionreconstructor": 104, "voltagetoefieldanalyticconverterforneutrino": [104, 182], "voltagetoanalyticefieldconverterneutrino": [104, 182, 183], "neutrinovertexreconstructor": [104, 233], "create_lookup_t": [104, 184, 233], "neutrino2dvertexreconstructor": [104, 133, 184, 233], "neutrino3dvertexreconstructor": [104, 184, 233], "phasedarrai": 104, "calc_parameters_for_rnog_surface_trigg": [104, 192], "linear_fit": [104, 192, 193], "get_envelope_trigg": [104, 192, 194], "get_high_low_trigg": [104, 192, 195], "get_majority_log": [104, 192, 195], "multihighlowthreshold": [104, 192], "get_high_trigg": [104, 192, 196], "get_low_trigg": [104, 192, 196], "get_multiple_high_low_trigg": [104, 192, 196], "powerintegr": [104, 192], "get_power_int_trigg": [104, 192, 197], "rnog_surface_trigg": [104, 192], "schottky_diod": [104, 192, 198], "get_threshold_trigg": [104, 192, 199], "analogtodigitalconvert": [104, 189], "perfect_compar": [104, 119], "perfect_floor_compar": [104, 119], "perfect_ceiling_compar": [104, 119], "apply_satur": [104, 119], "round_to_int": [104, 119], "get_digital_trac": [104, 119], "get_array_of_channel": [104, 122, 202], "channeladdcabledelai": 104, "channelantennadedispers": 104, "get_filter_argu": [104, 125], "get_filt": [104, 108, 109, 116, 118, 125], "test_equ": [104, 125], "add_random_phas": [104, 127], "fftnoise_fullfft": [104, 127], "bandlimited_nois": [104, 127], "precalculate_bandlimited_noise_paramet": [104, 127], "bandlimited_noise_from_precalculated_paramet": [104, 127], "channellengthadjust": [104, 178, 181], "channelsignalreconstructor": 104, "get_snr": [104, 130], "channelstopfilt": 104, "channeltemplatecorrel": 104, "match_sampl": [104, 132], "channeltimeoffsetcalcul": 104, "channeltimewindow": 104, "correlationdirectionfitt": 104, "cosmicrayenergyreconstructor": 104, "efieldairtoicepropag": 104, "efieldradiointerferometricreconstruct": 104, "efieldinterferometricdepthreco": [104, 141], "sample_longitudinal_profil": [104, 141], "reconstruct_interferometric_depth": [104, 141], "update_atmospheric_model_and_refractivity_t": [104, 141], "efieldinterferometricaxisreco": [104, 141], "find_maximum_in_plan": [104, 141], "sample_lateral_cross_sect": [104, 141], "reconstruct_shower_axi": [104, 141], "get_geometry_and_transform": [104, 141], "get_station_data": [104, 141], "plot_lateral_cross_sect": [104, 141], "efieldtimedirectionfitt": 104, "efieldtovoltageconvert": [104, 235], "efieldtovoltageconverterperefield": 104, "electricfieldbandpassfilt": 104, "electricfieldresampl": 104, "electricfieldsignalreconstructor": 104, "eventtypeidentifi": 104, "sphericalwavefitt": 104, "templatedirectionfitt": 104, "covari": [104, 201], "stacked_lstsq": [104, 201, 202], "voltagetoefieldconvert": 104, "voltagetoefieldconverterperchannel": 104, "sim_to_data": [106, 109, 118, 200], "tunnel": [107, 208], "fasig": 107, "exce": [107, 171, 181], "power_threshold": 107, "default_integrated_pow": 107, "requri": [107, 195, 196, 197, 199], "get_mingainlin": [108, 109, 116, 118], "phase_onli": [109, 118], "mingainlin": [109, 118], "unfilt": [109, 118], "post": [109, 118, 119, 160, 189], "mitig": [109, 118], "zero_nois": [109, 118], "unclear": [109, 118], "station_list": [110, 115], "metadata_dir": [110, 115, 154, 155, 157], "ant_posit": 111, "matrix": [111, 201], "ndarrai": [111, 114, 155], "nr_of_ant": 111, "interferometri": [111, 122, 204], "max_it": 111, "cr_snr": [111, 114], "logger_level": [111, 113, 114, 115, 157, 166], "1009": [111, 122], "0345": [111, 122], "fft_data": 112, "pycrtool": [112, 154], "hbeamformblock": 112, "ant_po": [112, 189], "evalu": [113, 115, 126, 198, 201, 207, 212], "partial": [113, 160], "a_": 113, "sum_": 113, "mathrm": 113, "nx": 113, "b_": 113, "odd": [113, 127, 154, 157, 209], "lofar_lba": 113, "galact": [113, 126], "calibr": [113, 154, 155, 157, 160, 174, 175, 227, 229], "clean": [113, 157], "correl": [113, 132, 133, 135, 141, 186, 187, 191, 201, 232, 233], "meaning": 113, "experiment": 113, "timeseri": 114, "window_start": 114, "window_end": 114, "noise_start": 114, "noise_end": 114, "enhanc": 114, "estim": [114, 133, 150, 160, 229], "lora": [114, 157], "noise_window": [114, 147], "good_channel": 114, "ave_shift": 115, "preced": 115, "psort": 115, "median": 115, "reoder": 115, "until": [115, 181, 201, 229], "tbb_filenam": 115, "target_trace_length": 115, "65536": [115, 157], "rfi_cleaning_trace_length": 115, "8192": 115, "flagged_antenna_id": 115, "num_dbl_z": 115, "tbb": [115, 154, 157], "h5": 115, "dirti": 115, "metadata": [115, 154, 155, 157], "chunk": 115, "output_dict": 115, "avg_power_spectrum": 115, "avg_antenna_pow": 115, "cleaned_pow": 115, "contamin": 115, "phase_st": 115, "dirty_channel": 115, "dirty_channels_block_s": 115, "stabil": 115, "valueerror": 115, "varianc": 115, "hardcod": 115, "reader": [115, 157, 160, 232], "add_offset": [116, 117], "remove_offset": [116, 117], "block_siz": [117, 157], "128": [117, 131, 205, 222], "max_frequ": 117, "051000000000000004": 117, "mv": 117, "maxit": 117, "guess": [117, 141, 186], "cost": 117, "return_trac": 117, "tol": 117, "1e": [117, 150, 154, 201, 202, 212], "06": [117, 189, 195, 196, 199, 208, 212], "rect": 117, "baselin": [117, 160], "output_trac": 117, "toler": [117, 154], "223": 118, "323": 118, "adc_n_bit": 119, "adc_ref_voltag": 119, "perfect": [119, 125, 145, 206], "flash": 119, "signif": 119, "bit": [119, 226, 228], "ceil": 119, "digitis": 119, "discretis": [119, 189], "digital_trac": 119, "perfect_floor": 119, "adc_counts_trac": 119, "clip": [119, 141], "unclip": 119, "saturated_trac": 119, "satur": [119, 228], "adc_reference_voltag": [119, 228], "clock": [119, 154, 155, 157, 189, 210], "jitter": [119, 127, 189], "random_clock_offset": 119, "upsampl": [119, 183, 189, 216, 222, 232], "fpga": 119, "arithmet": 119, "_adc_typ": 119, "elimin": 119, "nyquist": [119, 127], "trigger_": 119, "trigger_adc": [119, 189], "clock_offset": [119, 157, 189], "adc_typ": 119, "return_sampling_frequ": 119, "adc_output": [119, 189], "trigger_filt": [119, 189], "cycl": [119, 150], "upsampling_factor": [119, 189], "int_factor": [119, 189, 222], "handler": [121, 214, 235], "streamhandl": [121, 214], "formatt": [121, 214, 235], "logging_statu": [121, 214, 235], "februari": [121, 214, 235], "2024": [121, 214, 235], "decor": 121, "zenlim": [122, 135], "azilim": [122, 135], "360deg": 122, "subtract": [123, 175, 181], "cach": 125, "static": [125, 155], "roll_width": [125, 206], "half_hann_perc": 125, "0025": 125, "gaussian_tap": [125, 206], "hann_tap": 125, "hann": [125, 218], "fir": [125, 222], "rippl": [125, 206], "uniti": [125, 206], "decibel": [125, 206], "chebyshev": [125, 206], "5mhz": 125, "taper": [125, 206], "percentag": [125, 131, 218], "jan": 125, "07": [125, 141, 150], "robert": 125, "lahmann": 125, "fau": 125, "get_window": 125, "ham": [125, 218], "kaiser": 125, "beta": 125, "firwin": 125, "lp": 125, "f_cut": 125, "hp": 125, "bp": 125, "f_cut_low": 125, "f_cut_high": 125, "unus": 125, "signatur": 125, "notimplementederror": 125, "is_equ": 125, "pydgsm": 126, "oliveira": 126, "costa": 126, "2008": 126, "0802": 126, "1525": 126, "zheng": 126, "2016": 126, "1605": 126, "04920": 126, "fold": [126, 133, 183, 201, 233], "bright": 126, "n_side": 126, "interpolation_frequ": 126, "41": 126, "healpix": 126, "skymap": 126, "downsiz": 126, "pixel": 126, "greatli": 126, "n_samples_time_domain": 127, "min_freq": [127, 208], "max_freq": [127, 208], "perfect_whit": 127, "time_domain": [127, 202], "dc": [127, 160], "nquist": 127, "frequencei": 127, "v_rm": 127, "roughli": [127, 128, 228], "flat": [127, 212], "rayleigh": [127, 208, 216], "white": 127, "rl": 127, "sept": 127, "multi_whit": 127, "excluded_channel": 127, "exclud": 127, "compli": 128, "signal_window_start": 130, "signal_window_length": 130, "noise_window_start": 130, "noise_window_length": 130, "laid": 130, "stored_nois": 130, "rms_stage": 130, "glitch": 131, "smoothli": 131, "filter_s": 131, "prepend": 131, "tukei": 131, "span": 131, "fill": [131, 227], "template_directori": 132, "ref_templ": 132, "resampling_factor": 132, "channels_to_us": [132, 142, 191], "cosmic_rai": [132, 142, 148, 191], "n_templat": 132, "correctd": 133, "thu": [133, 141], "electric_field_templ": [133, 150], "use_sim": [133, 150], "window_funct": 134, "around_puls": 134, "window_width": [134, 212], "window_rise_tim": 134, "time_window_start": 134, "time_window_end": 134, "han": [134, 201], "rise": 134, "channel_pair": 135, "use_envelop": 135, "360": [135, 226], "beforehand": [136, 200, 235], "10th": [136, 201], "calculateamplitudeperraysolut": [137, 138], "host": 141, "interferometr": 141, "rit": 141, "schoorlemm": 141, "jr": 141, "2006": 141, "10348": 141, "schlueter": 141, "hueg": 141, "1088": 141, "1748": 141, "0221": 141, "p07048": 141, "x_rit": 141, "x_max": 141, "irregular": 141, "vxb": 141, "signal_kind": 141, "metric": [141, 212], "hilbert_sum": [141, 212], "interferomet": 141, "number_of_antenna": 141, "anchor": [141, 212], "singal": 141, "lower_depth": 141, "400": 141, "upper_depth": 141, "bin_siz": 141, "return_profil": 141, "samp": 141, "narrow": 141, "cm2": 141, "pf": 141, "depths_cors": 141, "coars": 141, "depths_fin": 141, "signals_cores": 141, "signals_fin": 141, "popt": 141, "use_mc_geometri": 141, "use_mc_puls": 141, "p_axi": 141, "vxvxb": 141, "quadrat": 141, "coordinatesytem": 141, "idx": 141, "argmax": 141, "shower_axis_init": 141, "shower_axis_mc": 141, "core_mc": 141, "initial_grid_spac": 141, "centered_around_truth": 141, "cross_section_s": 141, "deg_resolut": 141, "726646259971648e": 141, "stupid": 141, "strenght": 141, "60m": 141, "abitrari": 141, "side": [141, 186, 195, 196], "1000m": 141, "target": [141, 151], "deg2rad": 141, "point_found": 141, "strengt": 141, "is_mc": 141, "truth": [141, 232], "smear": 141, "optain": 141, "inperfect": 141, "traces_vxb": 141, "mp": 141, "mc_po": 141, "fname": [141, 154], "fitur": 141, "time_uncertainti": 142, "time_resolut": 143, "pre_pulse_tim": 143, "post_pulse_tim": 143, "sys_dx": 143, "sys_di": 143, "sys_dz": 143, "sys_amp": 143, "aplif": 143, "simstationclass": 144, "seq": 145, "signal_window_pr": 147, "signal_window_post": 147, "distinguish": [148, 232], "forced_event_typ": 148, "accordingli": [148, 200], "criteria": [148, 169, 181], "decis": 148, "make_priors_plot": [149, 150], "theori": 150, "2102": 150, "00258": 150, "amp_dct": 150, "pulse_time_prior": 150, "pulse_time_uncertainti": 150, "n_iter": 150, "pol": [150, 154, 203], "relative_toler": 150, "convergence_level": 150, "energy_fluence_passband": 150, "slope_passband": 150, "phase_slop": 150, "ift": 150, "bandpass_filt": [150, 204], "prior": 150, "efield_sc": 150, "linearoper": 151, "sigma_m": 151, "sigma_n": 151, "codomain": 151, "endomorphicoper": 151, "wise": [151, 210], "revers": [151, 232], "domaintupl": 151, "rawtbbio": [152, 153], "read_antenna_pol_flip": [152, 153, 154], "read_bad_antenna": [152, 153, 154], "read_antenna_delai": [152, 153, 154], "read_station_delai": [152, 153, 154], "decode_if_need": [152, 153, 154], "tbbdata_dal1": [152, 153, 154], "multifile_dal1": [152, 153, 154], "rawtbbio_metadata": [152, 153], "make_antennaid_filt": [152, 153, 155], "mapantennasetkeyword": [152, 153, 155], "getitrfantennaposit": [152, 153, 155], "getstationposit": [152, 153, 155], "convertitrftoloc": [152, 153, 155], "getstationphasecalibr": [152, 153, 155], "convertphase_to_tim": [152, 153, 155], "getclockcorrectionfromparsetaddit": [152, 153, 155], "getclockcorrect": [152, 153, 155], "rawtbbio_util": [152, 153], "even_antname_to_odd": [152, 153, 156], "antname_is_even": [152, 153, 156], "get_metadata": [152, 153, 157], "lora_timestamp_to_blocknumb": [152, 153, 157], "tbb_filetag_from_utc": [152, 153, 157], "getlofartrac": [152, 153, 157], "readrnogdatamattak": [152, 159, 180], "get_time_offset": [152, 159, 160], "readrnogdata": [152, 159, 160], "readaradata": [152, 161], "calculate_simulation_weight": [152, 163, 164], "make_sim_st": [152, 163, 164], "make_sim_show": [152, 163, 164], "readcorea": [152, 163, 167, 168], "readcoreasshow": [152, 163], "antenna_id": [152, 154, 155, 163, 166], "readcoreasst": [152, 163], "readcoreasstationgrid": [152, 163], "simulationselector": [152, 163], "readariannadata": [152, 173, 175], "readariannadatacalib": [152, 173], "openfil": [152, 158], "close_fil": [152, 153, 154, 157, 158], "get_filenam": [152, 158], "get_event_id": [152, 158], "get_event_i": [152, 158, 232], "get_ev": [152, 158, 159, 160, 232], "get_detector": [152, 158, 170, 227], "get_n_ev": [152, 158], "needs_metadata": [153, 154], "get_station_nam": [153, 154], "get_antenna_nam": [153, 154], "get_antenna_set": [153, 154], "get_sample_frequ": [153, 154], "get_filter_select": [153, 154], "get_timestamp": [153, 154], "get_full_data_length": [153, 154], "get_all_sample_numb": [153, 154], "get_nominal_sample_numb": [153, 154], "get_nominal_data_length": [153, 154], "get_itrf_antenna_posit": [153, 154], "get_lofar_centered_posit": [153, 154], "get_timing_callibration_phas": [153, 154], "get_timing_callibration_delai": [153, 154], "get_data": [153, 154], "set_polarization_flip": [153, 154], "set_odd_polarization_delai": [153, 154], "set_station_delai": [153, 154], "find_and_set_polarization_delai": [153, 154], "has_antenna": [153, 154], "get_timestamp_as_datetim": [153, 154], "get_total_delai": [153, 154], "get_time_from_second": [153, 154], "get_geometric_delai": [153, 154], "setup_trace_load": [153, 157], "check_trace_qu": [153, 157], "pim": 154, "schellart": 154, "tobia": 154, "winchen": 154, "lim": 154, "author": [154, 201, 226], "brian": [154, 155], "hare": [154, 155], "remot": [154, 227], "96": [154, 216], "hba": [154, 155], "cs001": [154, 155], "complic": 154, "spread": [154, 232], "isn": 154, "difficult": 154, "constantli": 154, "challeng": 154, "rcu": 154, "essenti": 154, "rc": 154, "rcuid": 154, "0th": 154, "ect": 154, "antennaset": [154, 155], "lba_out": [154, 155], "spell": 154, "antennaid": [154, 155], "think": 154, "misnom": 154, "lba_inn": [154, 155], "flip": 154, "ne": 154, "sw": 154, "nw": 154, "se": 154, "antenna_respons": 154, "input_decod": 154, "force_metadata_ant_po": 154, "forcemetadata_delai": 154, "filepaths_by_stationnam": 154, "stationnam": 154, "lba_10_90": 154, "posix": 154, "fact": [154, 235], "instant": 154, "usabl": 154, "sample_frequ": 154, "itrf": [154, 155], "cs002": [154, 155], "alloc": 154, "force_file_delai": 154, "start_index": 154, "num_point": 154, "antenna_index": 154, "int16": 154, "past": [154, 157, 229], "filename_list": 154, "polarization_flip": 154, "bad_antenna": 154, "additional_ant_delai": 154, "station_delai": 154, "only_complete_pair": 154, "pol_flips_are_bad": 154, "bad": 154, "rare": 154, "even_antenna_nam": 154, "new_delai": 154, "properli": [154, 227], "shouldn": 154, "nomin": 154, "uncorrect": 154, "total_delai": 154, "liter": 154, "source_loc": 154, "antenna_loc": 154, "xyz": 154, "correspondingli": 154, "shorter": 154, "earli": 155, "lightn": 155, "imag": 155, "002000001": 155, "antenna_set": 155, "ugli": 155, "cs302": 155, "142": 155, "lba_x": 155, "lba_i": 155, "lba_sparse0": 155, "lba_sparse1": 155, "hba_0": 155, "hba_1": 155, "coordinate_system": 155, "wgs84": 155, "postion": 155, "lat": 155, "lon": 155, "alt": 155, "itrfpo": 155, "phase_cent": 155, "ref_lat_lon": 155, "file_loc": 155, "staticmetadata": 155, "caltabl": 155, "xmetadata_directori": 155, "subband": 155, "14260161": 155, "07397622e": 155, "18j": 155, "05283530e": 155, "03169438e": 155, "68675289e": 155, "70789381e": 155, "72903474e": 155, "95669876": 155, "41800591e": 155, "41278190e": 155, "40755789e": 155, "41017232e": 155, "19j": 155, "46241246e": 155, "51465260e": 155, "98463207": 155, "80081617e": 155, "03j": 155, "98463138": 155, "89975906e": 155, "98463069": 155, "99870187e": 155, "98299670": 155, "71319125e": 155, "02j": 155, "98299096": 155, "72306908e": 155, "98298520": 155, "73294686e": 155, "03201290": 155, "39535744e": 155, "03144532": 155, "14880844e": 155, "03082273": 155, "90182487e": 155, "82551740": 155, "23731331e": 155, "01j": 155, "82094046": 155, "29743206e": 155, "81631975": 155, "35721497e": 155, "12370332": 155, "15296909e": 155, "12428451": 155, "09484545e": 155, "12483564": 155, "03669252e": 155, "92476286": 155, "48703460e": 155, "92810503": 155, "43912711e": 155, "93142239": 155, "39104744e": 155, "10043006": 155, "18995646e": 155, "10075250": 155, "58731668e": 155, "10104193": 155, "98450938e": 155, "01051042": 155, "40052904e": 155, "01290481": 155, "34513198e": 155, "01526883": 155, "28960464e": 155, "phase_calibr": 155, "sample_tim": 155, "5e": 155, "callibr": 155, "1383263000": 155, "superterp": 155, "drift": 155, "even_ant_nam": 156, "ant_nam": 156, "lora_second": 157, "lora_nanosecond": 157, "sample_numb": 157, "sampling_frequ": [157, 189, 222], "1st": 157, "januari": 157, "1970": 157, "blocknumb": 157, "samplenumb": 157, "gp": 157, "tbb_h5_filenam": 157, "time_": 157, "time_n": 157, "trace_length_nbin": 157, "repeatedli": 157, "against": [157, 183, 226], "qualiti": 157, "dipole_id": 157, "restricted_station_set": 157, "tbb_directori": 157, "json_directori": 157, "metadata_directori": 157, "krato": 157, "coma": 157, "vol": 157, "astro3": 157, "vhecr": 157, "lora_trigg": 157, "astro7": 157, "kratos_fil": 157, "filepath": 157, "metadat": 157, "hz": [157, 160], "ingest": 157, "trace_length": [157, 216], "parse_head": 158, "parse_detector": [158, 227], "fail_on_version_mismatch": 158, "fail_on_minor_version_mismatch": 158, "max_open_fil": 158, "buffer_s": 158, "104857600": 158, "byte": 158, "100mb": 158, "eventid": [158, 171], "event_numb": 158, "set_selector": [159, 160], "get_events_inform": [159, 160], "get_event_by_index": [159, 160], "temporari": 160, "mattak": 160, "519": 160, "time_offset": 160, "trace_start_tim": [160, 200], "run_table_path": 160, "load_run_t": 160, "run_tabl": 160, "mattak_kwarg": 160, "root_file_or_fold": 160, "run_nr": 160, "1100": 160, "679": 160, "dirs_fil": 160, "read_calibrated_data": 160, "select_trigg": 160, "select_run": 160, "apply_baseline_correct": 160, "convert_to_voltag": 160, "selector": 160, "run_typ": 160, "run_time_rang": 160, "max_trigger_r": 160, "overwrite_sampling_r": 160, "stationxx": 160, "runxxx": 160, "incorp": 160, "convin": 160, "run_tim": 160, "trigger_r": 160, "programm": 160, "interrupt": [160, 232], "messag": [160, 235], "eventinfo": 160, "trigger_selector": 160, "triggertyp": 160, "runtabl": 160, "suffici": [160, 202], "unconstrain": 160, "backend": 160, "pyroot": 160, "fallback": 160, "runinfo": 160, "eventnumb": 160, "read_ev": 160, "triggertim": 160, "indeci": 160, "event_index": 160, "particluar": 160, "chronolog": 160, "across": [160, 235], "corsika": 164, "convex": 164, "hull": 164, "ground": [165, 210, 226], "star": [165, 168, 227], "closest": [165, 168], "reuturn": [165, 168], "set_ascending_run_and_event_numb": 166, "notset": 166, "__ascending_run_and_event_numb": 166, "bee": 166, "default_id": 166, "ynax": 168, "frequency_window": 169, "n_std": 169, "std": 169, "stricter": 169, "selected_sim": 169, "read_detector": [170, 227], "max_file_s": 171, "1024": [171, 227, 233], "check_for_dupl": 171, "events_per_fil": 171, "mbyte": 171, "writer": 171, "whenev": [171, 223, 226], "fullfil": 171, "simelectricfield": 171, "version_major": 172, "version_minor": 172, "scan_files_majorversion_minorvers": 172, "rawdata": 175, "fpncorrecteddata": 175, "calibrateddata": 175, "time_interv": 175, "ampoutdata": 175, "random_iter": 175, "fpn": 175, "regardless": 175, "fpnsubdata": 175, "walk": 175, "noiseimporterroot": [176, 177], "noiseimport": [176, 177, 178, 179], "get_noise_st": [176, 181], "seizabl": 178, "basi": [178, 235], "noise_fil": 178, "rnog": [180, 226], "noise_fold": 180, "file_pattern": [180, 181], "match_station_id": 180, "channel_map": [180, 181], "scramble_noise_file_ord": 180, "random_se": [180, 181], "reader_kwarg": 180, "logg": [180, 181], "arguement": 180, "max_iter": 181, "draw_noise_statist": 181, "restrict_station_id": 181, "allow_noise_resampl": 181, "baseline_substract": 181, "allowed_trigg": 181, "subdirectori": 181, "recurs": 181, "suitabl": 181, "thrown": [181, 222], "mean_opt": 181, "forward": [183, 209], "provied": 183, "use_bandpass_filt": 183, "passband_low": 183, "passband_high": 183, "include_focus": 183, "use_mc": 183, "n_samples_multiplication_factor": 183, "plot_traces_with_true_input": 183, "themselv": [183, 186, 228], "overlai": 183, "get_correlation_array_2d": [184, 186, 187], "get_correlation_for_po": [184, 186, 187], "get_signal_travel_tim": [184, 186, 187], "find_ray_typ": [184, 186], "find_receiving_zenith": [184, 186], "get_correlation_array_3d": [184, 187], "lookup_table_loc": [186, 187], "reconstructor": [186, 187], "lookup": [186, 187], "z_width": 186, "grid_spac": 186, "direction_guess": 186, "use_dnr": 186, "stripe": 186, "strip": 186, "dnr": 186, "d_hor": [186, 187], "ray_typ": [186, 187], "ch1": 186, "scenario": 186, "distances_2d": 187, "azimuths_2d": 187, "z_coordinates_2d": 187, "distance_step_3d": 187, "widths_3d": 187, "z_step_3d": 187, "min_antenna_dist": 187, "debug_fold": 187, "dept": 187, "get_antenna_posit": [188, 189], "calculate_time_delai": [188, 189], "get_channel_trace_start_tim": [188, 189], "check_vertical_str": [188, 189], "power_sum": [188, 189], "phase_sign": [188, 189], "phased_trigg": [188, 189], "particip": 189, "1809": 189, "04573": 189, "floatss": 189, "959931089": 189, "714608352": 189, "513801244": 189, "333826648": 189, "164572284": 189, "11022302e": 189, "ref_index": [189, 216], "beam_rol": 189, "throw": 189, "dont": 189, "channel_trace_start_tim": 189, "coh_sum": 189, "num_fram": 189, "roll": [189, 200, 216], "phased_trac": 189, "is_trigg": 189, "met": 189, "simple_phased_threshold": 189, "set_not_trigg": [189, 195, 196], "not_trigg": [189, 195, 196], "start_pulser_posit": 190, "number_coincid": [194, 198], "envelope_trigg": 194, "high_threshold": [195, 196], "low_threshold": [195, 196], "time_coincid": [195, 196, 216], "calculat": [195, 196, 197, 199], "tt": 195, "triggerd": 195, "triggerd_bin": 195, "triggered_tim": 195, "default_high_low": [195, 196], "n_high_low": 196, "default_powerint": 197, "slide": 197, "300k": 198, "273k": 198, "250k": 198, "triggerpath": 198, "10db": 198, "rnog_surface_trigger_measur": 198, "default_simple_threshold": 199, "data_to_sim": 200, "vmin": 201, "chi": 201, "loglikelihood": 201, "climb": 201, "uphil": 201, "invert": [201, 226], "hess": 201, "expens": 201, "robust": 201, "contour": 201, "hessian": 201, "dembinski": 201, "kit": 201, "edu": 201, "cov": 201, "invcov": 201, "linalg": 201, "inv": 201, "chisquar": 201, "par": 201, "grad": 201, "negloglik": 201, "rcond": [201, 202], "svd": [201, 202], "singular": [201, 202], "reconstuct": 201, "foward": 201, "maxim": 201, "debug_plotpath": 201, "use_mc_direct": [201, 202], "frequeci": 201, "antenna_pattern_provid": [202, 222], "link": 202, "springer": 202, "1140": 202, "epjc": 202, "s10052": 202, "019": 202, "6971": 202, "furthermor": 202, "force_polar": 202, "deconvolut": 203, "analytic_puls": 204, "amp_from_energi": [204, 205], "get_analytic_pulse_freq": [204, 205], "get_analytic_puls": [204, 205], "cr_flux": 204, "get_measured_data": [204, 207], "get_interpolated_cr_flux": [204, 207], "get_analytic_cr_flux": [204, 207], "get_flux_per_energy_bin": [204, 207], "get_cr_event_r": [204, 207], "plot_measured_spectrum": [204, 207], "tunnel_diod": [204, 208], "geometryutil": 204, "get_time_delay_from_direct": [204, 210], "rot_z": [204, 210], "rot_x": [204, 210], "rot_i": [204, 210], "get_efield_in_spherical_coord": [204, 210], "get_fresnel_angl": [204, 210], "get_fresnel_t_p": [204, 210], "get_fresnel_t_": [204, 210], "get_fresnel_r_p": [204, 210], "get_fresnel_r_": [204, 210], "get_refractive_index": [204, 211], "get_sign": [204, 212], "interfere_traces_interpol": [204, 212], "get_time_shift": [204, 212], "fit_axi": [204, 212], "get_intersection_between_line_and_plan": [204, 212], "io_util": 204, "read_pickl": [204, 213], "addlogginglevel": [204, 214, 235], "mro": [204, 215], "rolled_sum_rol": [204, 216], "rolling_indic": [204, 216], "rolled_sum_tak": [204, 216], "rolled_sum_sl": [204, 216], "thermalnoisegener": [204, 216], "generate_nois": [204, 216], "thermalnoisegeneratorphasedarrai": [204, 216], "generate_noise2": [204, 216], "signal_process": 204, "half_hann_window": [204, 218], "set_template_directori": [204, 219], "get_cr_ref_templ": [204, 219], "get_set_of_cr_templates_ful": [204, 219], "get_set_of_cr_templ": [204, 219], "get_set_of_nu_templ": [204, 219], "get_nu_ref_templ": [204, 219], "analyze_tim": [204, 220], "tracewindow": 204, "get_window_around_maximum": [204, 221], "trace_util": 204, "get_efield_antenna_factor": [204, 222], "get_channel_voltage_from_efield": [204, 222], "get_electric_field_energy_flu": [204, 222], "upsampling_fir": [204, 222], "butterworth_filter_trac": [204, 222], "apply_butterworth": [204, 222], "delay_trac": [204, 222], "get_git_commit_hash": [204, 224], "get_nuradiomc_commit_hash": [204, 224], "get_nuradioreco_commit_hash": [204, 224], "amp_p0": 205, "amp_p1": 205, "phase_p0": 205, "n_samples_tim": 205, "phase_p1": 205, "quadratic_term": 205, "quadratic_term_offset": 205, "glaser": 205, "data_auger_19": 207, "data_ta_21": 207, "err_up": 207, "err_low": 207, "log10_energi": 207, "auger_19": 207, "auger_17": 207, "ta_19": 207, "log10e_min": 207, "log10e_max": 207, "log10energi": 207, "8726646259971648": 207, "a_eff": 207, "eventr": 207, "zenith_angl": 207, "solid_angl": 207, "base_unit": 207, "attent": [207, 233], "yr": 207, "diodd": 208, "lowpass": 208, "resist": 208, "trace_after_tunnel_diod": 208, "999999999999999e": 208, "n_tri": 208, "conserv": 209, "000293": 210, "zenith_incom": 210, "n_2": 210, "n_1": 210, "snell": 210, "n1": 210, "n2": 210, "transmit": 210, "defind": 210, "sum_trac": 212, "tstep": 212, "target_po": 212, "tab": 212, "traget": 212, "stamp": 212, "refractivityt": 212, "avg": 212, "tshift": 212, "sec": 212, "corex": 212, "corei": 212, "intersetct": 212, "flatten": 212, "plane_norm": 212, "plane_anchor": 212, "line_direct": 212, "line_anchor": 212, "betweem": 212, "rosettacod": 212, "find_the_intersection_of_a_line_with_a_plan": 212, "psi": 212, "latin1": 213, "suppos": 213, "levelnam": 214, "levelnum": 214, "methodnam": 214, "comprehens": 214, "getloggerclass": 214, "clobber": 214, "attributeerror": 214, "answer": 214, "__call__": [215, 236], "sumtr": 216, "n_major": 216, "time_coincidence_major": 216, "noise_typ": 216, "keep_full_band": 216, "symmetr": [216, 228], "window_length": 216, "main_low_angl": 216, "039338088856046": 216, "main_high_angl": 216, "n_beam": 216, "quantiz": 216, "220": 216, "durat": 216, "calcuat": 216, "59": 216, "lowest": [216, 226], "highest": [216, 226], "phasing_mod": 216, "trigger_mod": 216, "binned_sum": 216, "half_perc": 218, "hann_window_length": 218, "140": 219, "module_list": 220, "t_tot": 220, "sustract": 221, "left_tim": 221, "right_tim": 221, "return_spectrum": 222, "electric_field_trac": 222, "signal_window_mask": 222, "noise_window_mask": 222, "original_sampling_frequ": 222, "ntap": 222, "impuls": 222, "tap": 222, "upsampled_trac": 222, "cutoff": 222, "filtered_trac": 222, "filtered_spectrum": 222, "delayed_sampl": 222, "crop": 222, "delayed_trac": 222, "choic": 223, "mm": [223, 236], "eplu": 223, "substanc": 223, "mole": 223, "lumin": 223, "intens": 223, "candela": 223, "steradian": 223, "si": 223, "esi": 223, "coulomb": 223, "offlin": [223, 227], "pierr": 223, "collabor": 223, "geant4": 223, "head": 226, "demand": 226, "sha1sum": 226, "hashlib": 226, "send": [226, 227], "christian": 226, "he": 226, "inf": 226, "imprecis": 226, "embed": 226, "10cm": 226, "3m": 226, "nose": 226, "58m": 226, "100m": 226, "200m": 226, "52cm": 226, "260cm": 226, "270mm": 226, "xf": 226, "inch": 226, "borehol": 226, "cubic": 226, "4200": 226, "halfwai": 226, "wall": 226, "574": 226, "ska": 226, "skala": 226, "350": 226, "ieeexplor": 226, "ieee": 226, "abstract": 226, "7297231": 226, "detector_tim": [227, 229], "lifetim": 227, "took": 227, "decomiss": 227, "compost": 227, "situat": 227, "varieti": 227, "ship": 227, "mostli": 227, "cumbersom": 227, "prone": 227, "declar": 227, "substitut": 227, "ant_com": 227, "rnog_vpol_4inch_center_n1": 227, "73": 227, "likewis": 227, "therebi": 227, "_event": 227, "event_read": [227, 232], "event_writ": [227, 232], "detector_brows": 227, "web": [227, 231], "127": [227, 231], "8080": [227, 231], "dropdown": 227, "position_x": 228, "position_i": 228, "position_z": 228, "rod": 228, "west": 228, "simplic": 228, "sidewai": 228, "tradit": 228, "upright": 228, "my_detector": 228, "deployment_tim": 228, "aka": 228, "accumul": 228, "euler": 228, "un": 228, "intuit": [228, 229], "everydai": 228, "intrins": 228, "trigger_adc_nbit": 228, "trigger_adc_reference_voltag": 228, "trigger_adc_sampling_frequ": 228, "context": 229, "mainten": 229, "ii": 229, "campaign": 229, "bring": 229, "concept": 229, "immedi": 229, "imagin": 229, "poor": 229, "dedic": [229, 232, 235], "datatim": 229, "reanalyz": 229, "todai": 229, "earlier": 229, "organ": [229, 232], "station_rnog": 229, "eventbrows": 231, "ly": 231, "webbrows": 231, "brows": 231, "press": 231, "ctrl": 231, "inotifi": 231, "reload": 231, "debugg": 231, "pin": 231, "224": 231, "474": 231, "503": 231, "favorit": 231, "nuradioview": 231, "simpler": 232, "obviou": 232, "hierarchi": 232, "onto": 232, "streamlin": 232, "nuradioreco_io": 232, "event_1": 232, "event_2": 232, "stnp": 232, "hist": 232, "children": 232, "zenith_uncertainti": 232, "respectr": 232, "despit": 232, "hybriddetector": 232, "divers": 232, "impract": 232, "impement": 232, "slot": 232, "pai": 233, "horitont": 233, "reliabl": 233, "ior": 233, "cherenkov_angl": 233, "arcco": 233, "efield_spec": 233, "e18": 233, "efield_templ": 233, "exactl": 233, "influenc": 233, "rougher": 233, "struggl": 233, "colormap": 233, "serious": 233, "freez": 233, "arrang": 235, "deem": 235, "cleanup": 235, "behaviour": 235, "getlogg": 235, "report": 235, "logging_level": 235, "setlevel": 235, "consol": 235, "f_handler": 235, "filehandl": 235, "addhandl": 235, "life": 236, "132": 236, "milli": 236, "2f": 236, "stai": 236, "omit": 236, "accomplish": 236, "superced": 236, "behavior": 236}, "objects": {"NuRadioMC": [[5, 0, 0, "-", "EvtGen"], [18, 0, 0, "-", "SignalGen"], [25, 0, 0, "-", "SignalProp"], [31, 0, 0, "-", "simulation"], [33, 0, 0, "-", "utilities"]], "NuRadioMC.EvtGen": [[6, 0, 0, "-", "NuRadioMCtoAraSim"], [7, 0, 0, "-", "NuRadioProposal"], [8, 0, 0, "-", "create_tau_tab"], [9, 0, 0, "-", "generate_cylinder"], [10, 0, 0, "-", "generate_unforced"], [11, 0, 0, "-", "generator"], [12, 0, 0, "-", "generator_ASCII"], [13, 0, 0, "-", "generator_skeleton"], [14, 0, 0, "-", "hdf5_to_ASCII"], [15, 0, 0, "-", "proposal_table_manager"], [16, 0, 0, "-", "readARAEventList"], [17, 0, 0, "-", "readEventList_ASCII"]], "NuRadioMC.EvtGen.NuRadioProposal": [[7, 1, 1, "", "ProposalFunctions"], [7, 1, 1, "", "SecondaryProperties"], [7, 3, 1, "", "is_em_primary"], [7, 3, 1, "", "is_had_primary"], [7, 3, 1, "", "is_shower_primary"], [7, 3, 1, "", "particle_code"]], "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions": [[7, 2, 1, "", "get_decays"], [7, 2, 1, "", "get_secondaries_array"]], "NuRadioMC.EvtGen.generate_unforced": [[10, 3, 1, "", "generate_eventlist_cylinder"]], "NuRadioMC.EvtGen.generator": [[11, 3, 1, "", "generate_eventlist_cylinder"], [11, 3, 1, "", "generate_surface_muons"], [11, 3, 1, "", "generate_vertex_positions"], [11, 3, 1, "", "get_energies"], [11, 3, 1, "", "get_energy_from_flux"], [11, 3, 1, "", "get_intersection_volume_neutrino"], [11, 3, 1, "", "get_product_position_time"], [11, 3, 1, "", "get_tau_95_length"], [11, 3, 1, "", "ice_cube_nu_fit"], [11, 3, 1, "", "ice_cube_nu_fit_2022"], [11, 3, 1, "", "intersection_box_ray"], [11, 3, 1, "", "is_in_fiducial_volume"], [11, 3, 1, "", "load_input_hdf5"], [11, 3, 1, "", "mask_arrival_azimuth"], [11, 3, 1, "", "primary_energy_from_deposited"], [11, 3, 1, "", "set_volume_attributes"], [11, 3, 1, "", "write_events_to_hdf5"]], "NuRadioMC.EvtGen.generator_ASCII": [[12, 3, 1, "", "generate_eventlist"]], "NuRadioMC.EvtGen.generator_skeleton": [[13, 3, 1, "", "generate_my_events"]], "NuRadioMC.EvtGen.proposal_table_manager": [[15, 3, 1, "", "download_proposal_tables"], [15, 3, 1, "", "get_compiler"], [15, 3, 1, "", "produce_proposal_tables"], [15, 3, 1, "", "produce_proposal_tables_tarball"]], "NuRadioMC.EvtGen.readARAEventList": [[16, 3, 1, "", "convert_to_hdf5"], [16, 3, 1, "", "read_ARA_eventlist"]], "NuRadioMC.EvtGen.readEventList_ASCII": [[17, 3, 1, "", "read_eventlist"]], "NuRadioMC.SignalGen": [[19, 0, 0, "-", "ARZ"], [21, 0, 0, "-", "HCRB2017"], [22, 0, 0, "-", "askaryan"], [23, 0, 0, "-", "emitter"], [24, 0, 0, "-", "parametrizations"]], "NuRadioMC.SignalGen.ARZ": [[20, 0, 0, "-", "ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ": [[20, 1, 1, "", "ARZ"], [20, 1, 1, "", "ARZ_tabulated"], [20, 3, 1, "", "get_vector_potential"], [20, 3, 1, "", "get_vector_potential_numba"], [20, 3, 1, "", "theta_to_thetaprime"], [20, 3, 1, "", "thetaprime_to_theta"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ": [[20, 2, 1, "", "em_fraction"], [20, 2, 1, "", "get_last_shower_profile_id"], [20, 2, 1, "", "get_shower_profile"], [20, 2, 1, "", "get_time_trace"], [20, 2, 1, "", "get_vector_potential"], [20, 2, 1, "", "get_vector_potential_fast"], [20, 2, 1, "", "set_interpolation_factor"], [20, 2, 1, "", "set_interpolation_factor2"], [20, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated": [[20, 2, 1, "", "get_time_trace"], [20, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.HCRB2017": [[21, 3, 1, "", "gauss"], [21, 3, 1, "", "get_N_AskDepthA"], [21, 3, 1, "", "get_frequency_spectrum"], [21, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.askaryan": [[22, 3, 1, "", "get_frequency_spectrum"], [22, 3, 1, "", "get_time_trace"], [22, 3, 1, "", "set_log_level"]], "NuRadioMC.SignalGen.emitter": [[23, 3, 1, "", "get_frequency_spectrum"], [23, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.parametrizations": [[24, 3, 1, "", "get_parametrizations"], [24, 3, 1, "", "get_time_trace"], [24, 3, 1, "", "set_log_level"]], "NuRadioMC.SignalProp": [[26, 0, 0, "-", "analyticraytracing"], [27, 0, 0, "-", "directRayTracing"], [28, 0, 0, "-", "propagation"], [29, 0, 0, "-", "propagation_base_class"], [30, 0, 0, "-", "radioproparaytracing"]], "NuRadioMC.SignalProp.analyticraytracing": [[26, 3, 1, "", "get_n_steps"], [26, 3, 1, "", "get_segments"], [26, 3, 1, "", "get_z_deep"], [26, 1, 1, "", "ray_tracing"], [26, 1, 1, "", "ray_tracing_2D"], [26, 4, 1, "", "speed_of_light"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing": [[26, 2, 1, "", "apply_propagation_effects"], [26, 2, 1, "", "find_solutions"], [26, 2, 1, "", "get_attenuation"], [26, 2, 1, "", "get_config"], [26, 2, 1, "", "get_focusing"], [26, 2, 1, "", "get_launch_vector"], [26, 2, 1, "", "get_number_of_raytracing_solutions"], [26, 2, 1, "", "get_number_of_solutions"], [26, 2, 1, "", "get_output_parameters"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_path_length"], [26, 2, 1, "", "get_ray_path"], [26, 2, 1, "", "get_raytracing_output"], [26, 2, 1, "", "get_receive_vector"], [26, 2, 1, "", "get_reflection_angle"], [26, 2, 1, "", "get_results"], [26, 2, 1, "", "get_solution_type"], [26, 2, 1, "", "get_travel_time"], [26, 2, 1, "", "has_solution"], [26, 2, 1, "", "reset_solutions"], [26, 2, 1, "", "set_config"], [26, 2, 1, "", "set_solution"], [26, 2, 1, "", "set_start_and_end_point"], [26, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D": [[26, 2, 1, "", "angular_diff"], [26, 2, 1, "", "apply_propagation_effects"], [26, 2, 1, "", "determine_solution_type"], [26, 2, 1, "", "ds"], [26, 2, 1, "", "find_solutions"], [26, 2, 1, "", "get_C0_from_log"], [26, 2, 1, "", "get_C_0_from_angle"], [26, 2, 1, "", "get_C_1"], [26, 2, 1, "", "get_angle"], [26, 2, 1, "", "get_angle_from_C_0"], [26, 2, 1, "", "get_angle_from_logC_0"], [26, 2, 1, "", "get_attenuation"], [26, 2, 1, "", "get_attenuation_along_path"], [26, 2, 1, "", "get_c"], [26, 2, 1, "", "get_config"], [26, 2, 1, "", "get_delta_y"], [26, 2, 1, "", "get_gamma"], [26, 2, 1, "", "get_launch_angle"], [26, 2, 1, "", "get_launch_vector"], [26, 2, 1, "", "get_number_of_raytracing_solutions"], [26, 2, 1, "", "get_number_of_solutions"], [26, 2, 1, "", "get_output_parameters"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_path_length"], [26, 2, 1, "", "get_path_length_analytic"], [26, 2, 1, "", "get_path_reflections"], [26, 2, 1, "", "get_path_segments"], [26, 2, 1, "", "get_raytracing_output"], [26, 2, 1, "", "get_receive_angle"], [26, 2, 1, "", "get_receive_vector"], [26, 2, 1, "", "get_reflection_angle"], [26, 2, 1, "", "get_reflection_point"], [26, 2, 1, "", "get_results"], [26, 2, 1, "", "get_solution_type"], [26, 2, 1, "", "get_surf_skim_angle"], [26, 2, 1, "", "get_surface_pulse"], [26, 2, 1, "", "get_tof_for_straight_line"], [26, 2, 1, "", "get_travel_time"], [26, 2, 1, "", "get_travel_time_analytic"], [26, 2, 1, "", "get_turning_point"], [26, 2, 1, "", "get_y"], [26, 2, 1, "", "get_y_diff"], [26, 2, 1, "", "get_y_turn"], [26, 2, 1, "", "get_y_with_z_mirror"], [26, 2, 1, "", "get_z_from_n"], [26, 2, 1, "", "get_z_mirrored"], [26, 2, 1, "", "get_z_unmirrored"], [26, 2, 1, "", "has_solution"], [26, 2, 1, "", "is_in_refraction_zone"], [26, 2, 1, "", "n"], [26, 2, 1, "", "obj_delta_y"], [26, 2, 1, "", "obj_delta_y_square"], [26, 2, 1, "", "plot_result"], [26, 2, 1, "", "reset_solutions"], [26, 2, 1, "", "set_config"], [26, 2, 1, "", "set_start_and_end_point"], [26, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.directRayTracing": [[27, 1, 1, "", "direct_ray_tracing"]], "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing": [[27, 2, 1, "", "apply_propagation_effects"], [27, 2, 1, "", "find_solutions"], [27, 2, 1, "", "get_attenuation"], [27, 2, 1, "", "get_config"], [27, 2, 1, "", "get_launch_vector"], [27, 2, 1, "", "get_number_of_raytracing_solutions"], [27, 2, 1, "", "get_number_of_solutions"], [27, 2, 1, "", "get_output_parameters"], [27, 2, 1, "", "get_path"], [27, 2, 1, "", "get_path_length"], [27, 2, 1, "", "get_raytracing_output"], [27, 2, 1, "", "get_receive_vector"], [27, 2, 1, "", "get_reflection_angle"], [27, 2, 1, "", "get_results"], [27, 2, 1, "", "get_solution_type"], [27, 2, 1, "", "get_travel_time"], [27, 2, 1, "", "has_solution"], [27, 2, 1, "", "reset_solutions"], [27, 2, 1, "", "set_config"], [27, 2, 1, "", "set_start_and_end_point"], [27, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.propagation": [[28, 3, 1, "", "get_propagation_module"]], "NuRadioMC.SignalProp.propagation_base_class": [[29, 1, 1, "", "ray_tracing_base"]], "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base": [[29, 2, 1, "", "apply_propagation_effects"], [29, 2, 1, "", "find_solutions"], [29, 2, 1, "", "get_attenuation"], [29, 2, 1, "", "get_config"], [29, 2, 1, "", "get_launch_vector"], [29, 2, 1, "", "get_number_of_raytracing_solutions"], [29, 2, 1, "", "get_number_of_solutions"], [29, 2, 1, "", "get_output_parameters"], [29, 2, 1, "", "get_path"], [29, 2, 1, "", "get_path_length"], [29, 2, 1, "", "get_raytracing_output"], [29, 2, 1, "", "get_receive_vector"], [29, 2, 1, "", "get_reflection_angle"], [29, 2, 1, "", "get_results"], [29, 2, 1, "", "get_solution_type"], [29, 2, 1, "", "get_travel_time"], [29, 2, 1, "", "has_solution"], [29, 2, 1, "", "reset_solutions"], [29, 2, 1, "", "set_config"], [29, 2, 1, "", "set_start_and_end_point"], [29, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.radioproparaytracing": [[30, 1, 1, "", "radiopropa_ray_tracing"]], "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing": [[30, 2, 1, "", "activate_auto_step_size"], [30, 2, 1, "", "apply_propagation_effects"], [30, 2, 1, "", "deactivate_auto_step_size"], [30, 2, 1, "", "delta_theta_bottom"], [30, 2, 1, "", "delta_theta_direct"], [30, 2, 1, "", "delta_theta_reflective"], [30, 2, 1, "", "find_solutions"], [30, 2, 1, "", "get_attenuation"], [30, 2, 1, "", "get_config"], [30, 2, 1, "", "get_correction_path_length"], [30, 2, 1, "", "get_correction_travel_time"], [30, 2, 1, "", "get_focusing"], [30, 2, 1, "", "get_frequencies_for_attenuation"], [30, 2, 1, "", "get_launch_vector"], [30, 2, 1, "", "get_number_of_raytracing_solutions"], [30, 2, 1, "", "get_number_of_solutions"], [30, 2, 1, "", "get_output_parameters"], [30, 2, 1, "", "get_path"], [30, 2, 1, "", "get_path_candidate"], [30, 2, 1, "", "get_path_length"], [30, 2, 1, "", "get_raytracing_output"], [30, 2, 1, "", "get_receive_vector"], [30, 2, 1, "", "get_reflection_angle"], [30, 2, 1, "", "get_results"], [30, 2, 1, "", "get_solution_type"], [30, 2, 1, "", "get_travel_time"], [30, 2, 1, "", "has_solution"], [30, 2, 1, "", "raytracer_iterative"], [30, 2, 1, "", "raytracer_minimizer"], [30, 2, 1, "", "reset_solutions"], [30, 2, 1, "", "set_config"], [30, 2, 1, "", "set_cut_viewing_angle"], [30, 2, 1, "", "set_iterative_sphere_sizes"], [30, 2, 1, "", "set_iterative_step_sizes"], [30, 2, 1, "", "set_maximum_trajectory_length"], [30, 2, 1, "", "set_minimizer_tolerance"], [30, 2, 1, "", "set_shower_axis"], [30, 2, 1, "", "set_solutions"], [30, 2, 1, "", "set_start_and_end_point"], [30, 2, 1, "", "use_optional_function"]], "NuRadioMC.simulation": [[32, 0, 0, "-", "simulation"]], "NuRadioMC.simulation.simulation": [[32, 3, 1, "", "merge_config"], [32, 3, 1, "", "pretty_time_delta"], [32, 1, 1, "", "simulation"]], "NuRadioMC.simulation.simulation.simulation": [[32, 2, 1, "", "calculate_Veff"], [32, 2, 1, "", "get_Vrms"], [32, 2, 1, "", "get_bandwidth"], [32, 2, 1, "", "get_sampling_rate"], [32, 5, 1, "", "integrated_channel_response"], [32, 2, 1, "", "run"]], "NuRadioMC.utilities": [[34, 0, 0, "-", "Veff"], [35, 0, 0, "-", "attenuation"], [36, 0, 0, "-", "cross_sections"], [37, 0, 0, "-", "dump_hdf5"], [38, 0, 0, "-", "earth_attenuation"], [39, 0, 0, "-", "fluxes"], [40, 0, 0, "-", "inelasticities"], [41, 0, 0, "-", "medium"], [42, 0, 0, "-", "medium_base"], [43, 0, 0, "-", "merge_hdf5"], [45, 0, 0, "-", "plotting"], [46, 0, 0, "-", "runner"], [47, 0, 0, "-", "runner_example"], [48, 0, 0, "-", "split_hdf5"]], "NuRadioMC.utilities.Veff": [[34, 3, 1, "", "FC_limits"], [34, 3, 1, "", "export"], [34, 3, 1, "", "get_Veff_Aeff"], [34, 3, 1, "", "get_Veff_Aeff_array"], [34, 3, 1, "", "get_Veff_Aeff_single"], [34, 3, 1, "", "get_Veff_Aeff_single_wrapper"], [34, 3, 1, "", "get_Veff_water_equivalent"], [34, 3, 1, "", "get_index"], [34, 3, 1, "", "get_veff_output"], [34, 3, 1, "", "remove_duplicate_triggers"]], "NuRadioMC.utilities.attenuation": [[35, 3, 1, "", "fit_GL1"], [35, 3, 1, "", "get_attenuation_length"], [35, 3, 1, "", "get_temperature"]], "NuRadioMC.utilities.cross_sections": [[36, 3, 1, "", "csms"], [36, 3, 1, "", "get_interaction_length"], [36, 3, 1, "", "get_nu_cross_section"], [36, 3, 1, "", "param"]], "NuRadioMC.utilities.dump_hdf5": [[37, 3, 1, "", "dump"]], "NuRadioMC.utilities.earth_attenuation": [[38, 1, 1, "", "CoreMantleCrustModel"], [38, 1, 1, "", "PREM"], [38, 3, 1, "", "get_core_mantle_crust_weight"], [38, 3, 1, "", "get_simple_weight"], [38, 3, 1, "", "get_weight"]], "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel": [[38, 6, 1, "", "densities"], [38, 2, 1, "", "density"], [38, 6, 1, "", "earth_radius"], [38, 6, 1, "", "radii"], [38, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.earth_attenuation.PREM": [[38, 6, 1, "", "densities"], [38, 2, 1, "", "density"], [38, 6, 1, "", "earth_radius"], [38, 6, 1, "", "radii"], [38, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.fluxes": [[39, 3, 1, "", "get_exposure"], [39, 3, 1, "", "get_fluence_limit"], [39, 3, 1, "", "get_integrated_exposure"], [39, 3, 1, "", "get_limit_e1_flux"], [39, 3, 1, "", "get_limit_e2_flux"], [39, 3, 1, "", "get_limit_flux"], [39, 3, 1, "", "get_limit_from_aeff"], [39, 3, 1, "", "get_number_of_events_for_flux"]], "NuRadioMC.utilities.inelasticities": [[40, 3, 1, "", "get_ccnc"], [40, 3, 1, "", "get_neutrino_inelasticity"], [40, 3, 1, "", "inelasticity_tau_decay"], [40, 3, 1, "", "random_tau_branch"], [40, 3, 1, "", "rejection_sampling"]], "NuRadioMC.utilities.medium": [[41, 1, 1, "", "ARAsim_southpole"], [41, 3, 1, "", "get_ice_model"], [41, 1, 1, "", "greenland_firn"], [41, 1, 1, "", "greenland_perturbation"], [41, 1, 1, "", "greenland_simple"], [41, 1, 1, "", "mooresbay_simple"], [41, 1, 1, "", "mooresbay_simple_2"], [41, 1, 1, "", "southpole_2015"], [41, 1, 1, "", "southpole_simple"], [41, 1, 1, "", "uniform_ice"]], "NuRadioMC.utilities.medium.ARAsim_southpole": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_firn": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_perturbation": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_simple": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple_2": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_2015": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_simple": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.uniform_ice": [[41, 2, 1, "", "add_reflective_bottom"], [41, 2, 1, "", "get_average_index_of_refraction"], [41, 2, 1, "", "get_gradient_of_index_of_refraction"], [41, 2, 1, "", "get_ice_model_radiopropa"], [41, 2, 1, "", "get_index_of_refraction"], [41, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base": [[42, 1, 1, "", "IceModel"], [42, 1, 1, "", "IceModelSimple"], [42, 1, 1, "", "RadioPropaIceWrapper"], [42, 1, 1, "", "ScalarFieldBuilder"]], "NuRadioMC.utilities.medium_base.IceModel": [[42, 2, 1, "", "add_reflective_bottom"], [42, 2, 1, "", "get_average_index_of_refraction"], [42, 2, 1, "", "get_gradient_of_index_of_refraction"], [42, 2, 1, "", "get_ice_model_radiopropa"], [42, 2, 1, "", "get_index_of_refraction"], [42, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.IceModelSimple": [[42, 2, 1, "", "add_reflective_bottom"], [42, 2, 1, "", "get_average_index_of_refraction"], [42, 2, 1, "", "get_gradient_of_index_of_refraction"], [42, 2, 1, "", "get_ice_model_radiopropa"], [42, 2, 1, "", "get_index_of_refraction"], [42, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper": [[42, 2, 1, "", "add_module"], [42, 2, 1, "", "get_module"], [42, 2, 1, "", "get_modules"], [42, 2, 1, "", "get_scalar_field"], [42, 2, 1, "", "remove_module"], [42, 2, 1, "", "replace_module"]], "NuRadioMC.utilities.medium_base.ScalarFieldBuilder": [[42, 2, 1, "", "getGradient"], [42, 2, 1, "", "getValue"]], "NuRadioMC.utilities.merge_hdf5": [[43, 3, 1, "", "merge2"]], "NuRadioMC.utilities.plotting": [[45, 3, 1, "", "plot_vertex_distribution"]], "NuRadioMC.utilities.runner": [[46, 1, 1, "", "NuRadioMCRunner"]], "NuRadioMC.utilities.runner.NuRadioMCRunner": [[46, 2, 1, "", "get_outputfilename"], [46, 2, 1, "", "run"]], "NuRadioMC.utilities.runner_example": [[47, 3, 1, "", "task"]], "NuRadioMC.utilities.split_hdf5": [[48, 3, 1, "", "split_hdf5_input_file"]], "NuRadioReco": [[63, 0, 0, "-", "detector"], [87, 0, 0, "-", "framework"], [104, 0, 0, "-", "modules"], [204, 0, 0, "-", "utilities"]], "NuRadioReco.detector": [[64, 0, 0, "-", "ARA"], [66, 0, 0, "-", "ARIANNA"], [69, 0, 0, "-", "LOFAR"], [70, 0, 0, "-", "RNO_G"], [75, 0, 0, "-", "amp"], [76, 0, 0, "-", "antennapattern"], [77, 0, 0, "-", "detector"], [78, 0, 0, "-", "detector_base"], [79, 0, 0, "-", "detector_sql"], [80, 0, 0, "-", "detector_sys_uncertainties"], [81, 0, 0, "-", "filterresponse"], [82, 0, 0, "-", "generic_detector"], [83, 0, 0, "-", "response"], [84, 0, 0, "-", "sql_to_json"], [85, 0, 0, "-", "test_detector_db"], [86, 0, 0, "-", "visualize_detector"]], "NuRadioReco.detector.ARA": [[65, 0, 0, "-", "analog_components"]], "NuRadioReco.detector.ARA.analog_components": [[65, 3, 1, "", "get_system_response"], [65, 3, 1, "", "load_system_response"]], "NuRadioReco.detector.ARIANNA": [[67, 0, 0, "-", "analog_components"], [68, 0, 0, "-", "preprocessAmpResponses"]], "NuRadioReco.detector.ARIANNA.analog_components": [[67, 3, 1, "", "get_amplifier_response"], [67, 3, 1, "", "get_available_amplifiers"], [67, 3, 1, "", "get_cable_response"], [67, 3, 1, "", "get_cable_response_parametrized"], [67, 3, 1, "", "load_amp_measurement"], [67, 3, 1, "", "load_amplifier_response"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses": [[68, 3, 1, "", "preprocess_300Amp"], [68, 3, 1, "", "save_preprocessed_Amps"]], "NuRadioReco.detector.RNO_G": [[71, 0, 0, "-", "analog_components"], [72, 0, 0, "-", "db_mongo_read"], [73, 0, 0, "-", "db_mongo_write"], [74, 0, 0, "-", "rnog_detector"]], "NuRadioReco.detector.RNO_G.analog_components": [[71, 3, 1, "", "get_available_amplifiers"], [71, 3, 1, "", "load_amp_response"]], "NuRadioReco.detector.RNO_G.db_mongo_read": [[72, 1, 1, "", "Database"], [72, 3, 1, "", "dictionarize_nested_lists"], [72, 3, 1, "", "dictionarize_nested_lists_as_tuples"]], "NuRadioReco.detector.RNO_G.db_mongo_read.Database": [[72, 2, 1, "", "find_primary_measurement"], [72, 2, 1, "", "get_all_available_signal_chain_configs"], [72, 2, 1, "", "get_channel_signal_chain"], [72, 2, 1, "", "get_channel_signal_chain_measurement"], [72, 2, 1, "", "get_collection_information"], [72, 2, 1, "", "get_collection_names"], [72, 2, 1, "", "get_complete_channel_information"], [72, 2, 1, "", "get_complete_device_information"], [72, 2, 1, "", "get_complete_station_information"], [72, 2, 1, "", "get_component_data"], [72, 2, 1, "", "get_database_time"], [72, 2, 1, "", "get_detector_time"], [72, 2, 1, "", "get_general_channel_information"], [72, 2, 1, "", "get_general_device_information"], [72, 2, 1, "", "get_general_station_information"], [72, 2, 1, "", "get_identifier"], [72, 2, 1, "", "get_object_names"], [72, 2, 1, "", "get_position"], [72, 2, 1, "", "get_quantity_names"], [72, 2, 1, "", "get_station_ids"], [72, 2, 1, "", "load_board_information"], [72, 2, 1, "", "query_modification_timestamps_per_station"], [72, 2, 1, "", "set_database_time"], [72, 2, 1, "", "set_detector_time"]], "NuRadioReco.detector.RNO_G.db_mongo_write": [[73, 1, 1, "", "Database"]], "NuRadioReco.detector.RNO_G.db_mongo_write.Database": [[73, 2, 1, "", "add_entry_to_database"], [73, 2, 1, "", "add_general_channel_info_to_station"], [73, 2, 1, "", "add_general_device_info_to_station"], [73, 2, 1, "", "add_general_station_info"], [73, 2, 1, "", "add_measurement_protocol"], [73, 2, 1, "", "change_primary_antenna_measurement"], [73, 2, 1, "", "change_primary_cable_measurement"], [73, 2, 1, "", "change_primary_downhole_measurement"], [73, 2, 1, "", "change_primary_drab_measurement"], [73, 2, 1, "", "change_primary_iglu_measurement"], [73, 2, 1, "", "change_primary_surface_measurement"], [73, 2, 1, "", "clone_collection_to_collection"], [73, 2, 1, "", "create_empty_collection"], [73, 2, 1, "", "decommission_a_channel"], [73, 2, 1, "", "decommission_a_device"], [73, 2, 1, "", "decommission_a_station"], [73, 2, 1, "", "find_primary_measurement"], [73, 2, 1, "", "get_all_available_signal_chain_configs"], [73, 2, 1, "", "get_channel_signal_chain"], [73, 2, 1, "", "get_channel_signal_chain_measurement"], [73, 2, 1, "", "get_collection_information"], [73, 2, 1, "", "get_collection_names"], [73, 2, 1, "", "get_complete_channel_information"], [73, 2, 1, "", "get_complete_device_information"], [73, 2, 1, "", "get_complete_station_information"], [73, 2, 1, "", "get_component_data"], [73, 2, 1, "", "get_database_time"], [73, 2, 1, "", "get_detector_time"], [73, 2, 1, "", "get_general_channel_information"], [73, 2, 1, "", "get_general_device_information"], [73, 2, 1, "", "get_general_station_information"], [73, 2, 1, "", "get_identifier"], [73, 2, 1, "", "get_object_names"], [73, 2, 1, "", "get_position"], [73, 2, 1, "", "get_quantity_names"], [73, 2, 1, "", "get_station_ids"], [73, 2, 1, "", "load_board_information"], [73, 2, 1, "", "query_modification_timestamps_per_station"], [73, 2, 1, "", "rename_database_collection"], [73, 2, 1, "", "set_database_time"], [73, 2, 1, "", "set_detector_time"], [73, 2, 1, "", "set_not_working"], [73, 2, 1, "", "update_current_primary"]], "NuRadioReco.detector.RNO_G.rnog_detector": [[74, 1, 1, "", "Detector"]], "NuRadioReco.detector.RNO_G.rnog_detector.Detector": [[74, 2, 1, "", "export"], [74, 2, 1, "", "export_as_string"], [74, 2, 1, "", "get_absolute_position"], [74, 2, 1, "", "get_amplifier_response"], [74, 2, 1, "", "get_antenna_model"], [74, 2, 1, "", "get_antenna_orientation"], [74, 2, 1, "", "get_antenna_type"], [74, 2, 1, "", "get_cable_delay"], [74, 2, 1, "", "get_channel"], [74, 2, 1, "", "get_channel_ids"], [74, 2, 1, "", "get_channel_orientation"], [74, 2, 1, "", "get_channel_signal_chain"], [74, 2, 1, "", "get_detector_time"], [74, 2, 1, "", "get_devices"], [74, 2, 1, "", "get_noise_temperature"], [74, 2, 1, "", "get_number_of_channels"], [74, 2, 1, "", "get_number_of_samples"], [74, 2, 1, "", "get_relative_position"], [74, 2, 1, "", "get_relative_position_device"], [74, 2, 1, "", "get_sampling_frequency"], [74, 2, 1, "", "get_signal_chain_components"], [74, 2, 1, "", "get_signal_chain_response"], [74, 2, 1, "", "get_site"], [74, 2, 1, "", "get_station"], [74, 2, 1, "", "get_station_ids"], [74, 2, 1, "", "get_time_delay"], [74, 2, 1, "", "has_station"], [74, 2, 1, "", "is_channel_noiseless"], [74, 2, 1, "", "update"]], "NuRadioReco.detector.amp": [[75, 3, 1, "", "get_amp_response"]], "NuRadioReco.detector.antennapattern": [[76, 1, 1, "", "AntennaPattern"], [76, 1, 1, "", "AntennaPatternAnalytic"], [76, 1, 1, "", "AntennaPatternBase"], [76, 1, 1, "", "AntennaPatternProvider"], [76, 3, 1, "", "get_group_delay"], [76, 3, 1, "", "get_pickle_antenna_response"], [76, 3, 1, "", "interpolate_linear"], [76, 3, 1, "", "interpolate_linear_vectorized"], [76, 3, 1, "", "parse_AERA_XML_file"], [76, 3, 1, "", "parse_ARA_file"], [76, 3, 1, "", "parse_HFSS_file"], [76, 3, 1, "", "parse_LOFAR_txt_file"], [76, 3, 1, "", "parse_RNOG_XFDTD_file"], [76, 3, 1, "", "parse_WIPLD_file"], [76, 3, 1, "", "preprocess_AERA"], [76, 3, 1, "", "preprocess_ARA"], [76, 3, 1, "", "preprocess_HFSS"], [76, 3, 1, "", "preprocess_LOFAR_txt"], [76, 3, 1, "", "preprocess_RNOG_XFDTD"], [76, 3, 1, "", "preprocess_WIPLD"], [76, 3, 1, "", "preprocess_WIPLD_old"], [76, 3, 1, "", "preprocess_XFDTD"], [76, 3, 1, "", "save_preprocessed_WIPLD"], [76, 3, 1, "", "save_preprocessed_WIPLD_forARA"], [76, 3, 1, "", "save_preprocessed_WIPLD_old"]], "NuRadioReco.detector.antennapattern.AntennaPattern": [[76, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic": [[76, 2, 1, "", "get_antenna_response_vectorized"], [76, 2, 1, "", "parametric_phase"]], "NuRadioReco.detector.antennapattern.AntennaPatternBase": [[76, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternProvider": [[76, 2, 1, "", "load_antenna_pattern"]], "NuRadioReco.detector.detector": [[77, 3, 1, "", "Detector"], [77, 3, 1, "", "find_path"], [77, 3, 1, "", "find_reference_entry"]], "NuRadioReco.detector.detector_base": [[78, 1, 1, "", "DateTimeSerializer"], [78, 1, 1, "", "DetectorBase"], [78, 3, 1, "", "buffer_db"]], "NuRadioReco.detector.detector_base.DateTimeSerializer": [[78, 6, 1, "", "OBJ_CLASS"], [78, 2, 1, "", "decode"], [78, 2, 1, "", "encode"]], "NuRadioReco.detector.detector_base.DetectorBase": [[78, 2, 1, "", "get_absolute_position"], [78, 2, 1, "", "get_absolute_position_site"], [78, 2, 1, "", "get_amplifier_measurement"], [78, 2, 1, "", "get_amplifier_response"], [78, 2, 1, "", "get_amplifier_type"], [78, 2, 1, "", "get_antenna_deployment_time"], [78, 2, 1, "", "get_antenna_model"], [78, 2, 1, "", "get_antenna_orientation"], [78, 2, 1, "", "get_antenna_type"], [78, 2, 1, "", "get_cable_delay"], [78, 2, 1, "", "get_cable_type_and_length"], [78, 2, 1, "", "get_channel"], [78, 2, 1, "", "get_channel_group_id"], [78, 2, 1, "", "get_channel_ids"], [78, 2, 1, "", "get_detector_time"], [78, 2, 1, "", "get_device"], [78, 2, 1, "", "get_device_ids"], [78, 2, 1, "", "get_noise_RMS"], [78, 2, 1, "", "get_noise_temperature"], [78, 2, 1, "", "get_number_of_channels"], [78, 2, 1, "", "get_number_of_devices"], [78, 2, 1, "", "get_number_of_samples"], [78, 2, 1, "", "get_parallel_channels"], [78, 2, 1, "", "get_relative_position"], [78, 2, 1, "", "get_sampling_frequency"], [78, 2, 1, "", "get_site"], [78, 2, 1, "", "get_site_coordinates"], [78, 2, 1, "", "get_station"], [78, 2, 1, "", "get_station_ids"], [78, 2, 1, "", "get_unique_time_periods"], [78, 2, 1, "", "has_station"], [78, 2, 1, "", "is_channel_noiseless"], [78, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sql": [[79, 1, 1, "", "Detector"], [79, 3, 1, "", "get_amplifier_type"], [79, 3, 1, "", "get_antenna_model_file"], [79, 3, 1, "", "get_antenna_type"], [79, 3, 1, "", "get_cable_delays"], [79, 3, 1, "", "get_number_of_channels"], [79, 3, 1, "", "get_relative_position"], [79, 3, 1, "", "get_relative_positions"], [79, 3, 1, "", "get_station_type"]], "NuRadioReco.detector.detector_sql.Detector": [[79, 2, 1, "", "get_absolute_position_site"], [79, 2, 1, "", "get_amplifier_type"], [79, 2, 1, "", "get_antenna_deployment_time"], [79, 2, 1, "", "get_antenna_model"], [79, 2, 1, "", "get_antenna_orientation"], [79, 2, 1, "", "get_antenna_type"], [79, 2, 1, "", "get_cable_delay"], [79, 2, 1, "", "get_cable_type_and_length"], [79, 2, 1, "", "get_everything"], [79, 2, 1, "", "get_everything_channels"], [79, 2, 1, "", "get_everything_positions"], [79, 2, 1, "", "get_everything_stations"], [79, 2, 1, "", "get_number_of_channels"], [79, 2, 1, "", "get_number_of_samples"], [79, 2, 1, "", "get_relative_position"], [79, 2, 1, "", "get_relative_positions"], [79, 2, 1, "", "get_sampling_frequency"], [79, 2, 1, "", "get_site"], [79, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sys_uncertainties": [[80, 1, 1, "", "DetectorSysUncertainties"]], "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties": [[80, 2, 1, "", "get_absolute_position"], [80, 2, 1, "", "get_absolute_position_site"], [80, 2, 1, "", "get_amplifier_measurement"], [80, 2, 1, "", "get_amplifier_response"], [80, 2, 1, "", "get_amplifier_type"], [80, 2, 1, "", "get_antenna_deployment_time"], [80, 2, 1, "", "get_antenna_model"], [80, 2, 1, "", "get_antenna_orientation"], [80, 2, 1, "", "get_antenna_type"], [80, 2, 1, "", "get_cable_delay"], [80, 2, 1, "", "get_cable_type_and_length"], [80, 2, 1, "", "get_channel"], [80, 2, 1, "", "get_channel_group_id"], [80, 2, 1, "", "get_channel_ids"], [80, 2, 1, "", "get_detector_time"], [80, 2, 1, "", "get_device"], [80, 2, 1, "", "get_device_ids"], [80, 2, 1, "", "get_noise_RMS"], [80, 2, 1, "", "get_noise_temperature"], [80, 2, 1, "", "get_number_of_channels"], [80, 2, 1, "", "get_number_of_devices"], [80, 2, 1, "", "get_number_of_samples"], [80, 2, 1, "", "get_parallel_channels"], [80, 2, 1, "", "get_relative_position"], [80, 2, 1, "", "get_sampling_frequency"], [80, 2, 1, "", "get_site"], [80, 2, 1, "", "get_site_coordinates"], [80, 2, 1, "", "get_station"], [80, 2, 1, "", "get_station_ids"], [80, 2, 1, "", "get_unique_time_periods"], [80, 2, 1, "", "has_station"], [80, 2, 1, "", "is_channel_noiseless"], [80, 2, 1, "", "reset_antenna_orientation_offsets"], [80, 2, 1, "", "reset_antenna_position_offsets"], [80, 2, 1, "", "set_antenna_orientation_offsets"], [80, 2, 1, "", "set_antenna_position_offsets"], [80, 2, 1, "", "update"]], "NuRadioReco.detector.filterresponse": [[81, 3, 1, "", "get_filter_response"], [81, 3, 1, "", "get_filter_response_mini_circuits"], [81, 3, 1, "", "get_filter_response_mini_circuits2"]], "NuRadioReco.detector.generic_detector": [[82, 1, 1, "", "GenericDetector"]], "NuRadioReco.detector.generic_detector.GenericDetector": [[82, 2, 1, "", "add_generic_station"], [82, 2, 1, "", "add_station_properties_for_event"], [82, 2, 1, "", "get_absolute_position"], [82, 2, 1, "", "get_absolute_position_site"], [82, 2, 1, "", "get_amplifier_measurement"], [82, 2, 1, "", "get_amplifier_response"], [82, 2, 1, "", "get_amplifier_type"], [82, 2, 1, "", "get_antenna_deployment_time"], [82, 2, 1, "", "get_antenna_model"], [82, 2, 1, "", "get_antenna_orientation"], [82, 2, 1, "", "get_antenna_type"], [82, 2, 1, "", "get_cable_delay"], [82, 2, 1, "", "get_cable_type_and_length"], [82, 2, 1, "", "get_channel"], [82, 2, 1, "", "get_channel_group_id"], [82, 2, 1, "", "get_channel_ids"], [82, 2, 1, "", "get_default_channel"], [82, 2, 1, "", "get_default_channel_id"], [82, 2, 1, "", "get_default_station"], [82, 2, 1, "", "get_default_station_id"], [82, 2, 1, "", "get_detector_time"], [82, 2, 1, "", "get_device"], [82, 2, 1, "", "get_device_ids"], [82, 2, 1, "", "get_noise_RMS"], [82, 2, 1, "", "get_noise_temperature"], [82, 2, 1, "", "get_number_of_channels"], [82, 2, 1, "", "get_number_of_devices"], [82, 2, 1, "", "get_number_of_samples"], [82, 2, 1, "", "get_parallel_channels"], [82, 2, 1, "", "get_raw_channel"], [82, 2, 1, "", "get_raw_station"], [82, 2, 1, "", "get_reference_station"], [82, 2, 1, "", "get_reference_station_id"], [82, 2, 1, "", "get_reference_station_ids"], [82, 2, 1, "", "get_reference_stations"], [82, 2, 1, "", "get_relative_position"], [82, 2, 1, "", "get_sampling_frequency"], [82, 2, 1, "", "get_site"], [82, 2, 1, "", "get_site_coordinates"], [82, 2, 1, "", "get_station"], [82, 2, 1, "", "get_station_ids"], [82, 2, 1, "", "get_station_properties_for_event"], [82, 2, 1, "", "get_unique_time_periods"], [82, 2, 1, "", "has_station"], [82, 2, 1, "", "is_channel_noiseless"], [82, 2, 1, "", "set_event"], [82, 2, 1, "", "update"]], "NuRadioReco.detector.response": [[83, 1, 1, "", "Response"], [83, 3, 1, "", "subtract_time_delay_from_response"]], "NuRadioReco.detector.response.Response": [[83, 2, 1, "", "get_names"], [83, 2, 1, "", "get_time_delay"], [83, 2, 1, "", "plot"]], "NuRadioReco.framework": [[88, 0, 0, "-", "base_shower"], [89, 0, 0, "-", "base_station"], [90, 0, 0, "-", "base_trace"], [91, 0, 0, "-", "channel"], [92, 0, 0, "-", "electric_field"], [93, 0, 0, "-", "event"], [94, 0, 0, "-", "hybrid_information"], [95, 0, 0, "-", "hybrid_shower"], [96, 0, 0, "-", "parameter_serialization"], [97, 0, 0, "-", "parameters"], [98, 0, 0, "-", "particle"], [99, 0, 0, "-", "radio_shower"], [100, 0, 0, "-", "sim_channel"], [101, 0, 0, "-", "sim_station"], [102, 0, 0, "-", "station"], [103, 0, 0, "-", "trigger"]], "NuRadioReco.framework.base_shower": [[88, 1, 1, "", "BaseShower"]], "NuRadioReco.framework.base_shower.BaseShower": [[88, 2, 1, "", "deserialize"], [88, 2, 1, "", "get_axis"], [88, 2, 1, "", "get_coordinatesystem"], [88, 2, 1, "", "get_id"], [88, 2, 1, "", "get_parameter"], [88, 2, 1, "", "has_parameter"], [88, 2, 1, "", "serialize"], [88, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.base_station": [[89, 1, 1, "", "BaseStation"]], "NuRadioReco.framework.base_station.BaseStation": [[89, 2, 1, "", "add_electric_field"], [89, 2, 1, "", "deserialize"], [89, 2, 1, "", "get_ARIANNA_parameter"], [89, 2, 1, "", "get_ARIANNA_parameters"], [89, 2, 1, "", "get_electric_fields"], [89, 2, 1, "", "get_electric_fields_for_channels"], [89, 2, 1, "", "get_id"], [89, 2, 1, "", "get_parameter"], [89, 2, 1, "", "get_parameter_error"], [89, 2, 1, "", "get_parameters"], [89, 2, 1, "", "get_station_time"], [89, 2, 1, "", "get_station_time_dict"], [89, 2, 1, "", "get_trigger"], [89, 2, 1, "", "get_triggers"], [89, 2, 1, "", "has_ARIANNA_parameter"], [89, 2, 1, "", "has_parameter"], [89, 2, 1, "", "has_trigger"], [89, 2, 1, "", "has_triggered"], [89, 2, 1, "", "is_cosmic_ray"], [89, 2, 1, "", "is_neutrino"], [89, 2, 1, "", "remove_parameter"], [89, 2, 1, "", "remove_triggers"], [89, 2, 1, "", "serialize"], [89, 2, 1, "", "set_ARIANNA_parameter"], [89, 2, 1, "", "set_electric_fields"], [89, 2, 1, "", "set_is_cosmic_ray"], [89, 2, 1, "", "set_is_neutrino"], [89, 2, 1, "", "set_parameter"], [89, 2, 1, "", "set_parameter_error"], [89, 2, 1, "", "set_station_time"], [89, 2, 1, "", "set_trigger"], [89, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.base_trace": [[90, 1, 1, "", "BaseTrace"]], "NuRadioReco.framework.base_trace.BaseTrace": [[90, 2, 1, "", "add_trace_start_time"], [90, 2, 1, "", "apply_time_shift"], [90, 2, 1, "", "deserialize"], [90, 2, 1, "", "get_filtered_trace"], [90, 2, 1, "", "get_frequencies"], [90, 2, 1, "", "get_frequency_spectrum"], [90, 2, 1, "", "get_hilbert_envelope"], [90, 2, 1, "", "get_hilbert_envelope_mag"], [90, 2, 1, "", "get_number_of_samples"], [90, 2, 1, "", "get_sampling_rate"], [90, 2, 1, "", "get_times"], [90, 2, 1, "", "get_trace"], [90, 2, 1, "", "get_trace_start_time"], [90, 2, 1, "", "resample"], [90, 2, 1, "", "serialize"], [90, 2, 1, "", "set_frequency_spectrum"], [90, 2, 1, "", "set_trace"], [90, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.channel": [[91, 1, 1, "", "Channel"]], "NuRadioReco.framework.channel.Channel": [[91, 2, 1, "", "add_trace_start_time"], [91, 2, 1, "", "apply_time_shift"], [91, 2, 1, "", "deserialize"], [91, 2, 1, "", "get_filtered_trace"], [91, 2, 1, "", "get_frequencies"], [91, 2, 1, "", "get_frequency_spectrum"], [91, 2, 1, "", "get_group_id"], [91, 2, 1, "", "get_hilbert_envelope"], [91, 2, 1, "", "get_hilbert_envelope_mag"], [91, 2, 1, "", "get_id"], [91, 2, 1, "", "get_number_of_samples"], [91, 2, 1, "", "get_parameter"], [91, 2, 1, "", "get_parameters"], [91, 2, 1, "", "get_sampling_rate"], [91, 2, 1, "", "get_times"], [91, 2, 1, "", "get_trace"], [91, 2, 1, "", "get_trace_start_time"], [91, 2, 1, "", "has_parameter"], [91, 2, 1, "", "resample"], [91, 2, 1, "", "serialize"], [91, 2, 1, "", "set_frequency_spectrum"], [91, 2, 1, "", "set_parameter"], [91, 2, 1, "", "set_trace"], [91, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.electric_field": [[92, 1, 1, "", "ElectricField"]], "NuRadioReco.framework.electric_field.ElectricField": [[92, 2, 1, "", "add_trace_start_time"], [92, 2, 1, "", "apply_time_shift"], [92, 2, 1, "", "deserialize"], [92, 2, 1, "", "get_channel_ids"], [92, 2, 1, "", "get_filtered_trace"], [92, 2, 1, "", "get_frequencies"], [92, 2, 1, "", "get_frequency_spectrum"], [92, 2, 1, "", "get_hilbert_envelope"], [92, 2, 1, "", "get_hilbert_envelope_mag"], [92, 2, 1, "", "get_number_of_samples"], [92, 2, 1, "", "get_parameter"], [92, 2, 1, "", "get_parameter_error"], [92, 2, 1, "", "get_parameters"], [92, 2, 1, "", "get_position"], [92, 2, 1, "", "get_ray_tracing_solution_id"], [92, 2, 1, "", "get_sampling_rate"], [92, 2, 1, "", "get_shower_id"], [92, 2, 1, "", "get_times"], [92, 2, 1, "", "get_trace"], [92, 2, 1, "", "get_trace_start_time"], [92, 2, 1, "", "get_unique_identifier"], [92, 2, 1, "", "has_channel_ids"], [92, 2, 1, "", "has_parameter"], [92, 2, 1, "", "has_parameter_error"], [92, 2, 1, "", "resample"], [92, 2, 1, "", "serialize"], [92, 2, 1, "", "set_channel_ids"], [92, 2, 1, "", "set_frequency_spectrum"], [92, 2, 1, "", "set_parameter"], [92, 2, 1, "", "set_parameter_error"], [92, 2, 1, "", "set_position"], [92, 2, 1, "", "set_trace"], [92, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.event": [[93, 1, 1, "", "Event"]], "NuRadioReco.framework.event.Event": [[93, 2, 1, "", "add_particle"], [93, 2, 1, "", "add_shower"], [93, 2, 1, "", "add_sim_shower"], [93, 2, 1, "", "deserialize"], [93, 2, 1, "", "get_first_shower"], [93, 2, 1, "", "get_first_sim_shower"], [93, 2, 1, "", "get_generator_info"], [93, 2, 1, "", "get_hybrid_information"], [93, 2, 1, "", "get_id"], [93, 2, 1, "", "get_interaction_products"], [93, 2, 1, "", "get_parameter"], [93, 2, 1, "", "get_parent"], [93, 2, 1, "", "get_particle"], [93, 2, 1, "", "get_particles"], [93, 2, 1, "", "get_primary"], [93, 2, 1, "", "get_run_number"], [93, 2, 1, "", "get_shower"], [93, 2, 1, "", "get_showers"], [93, 2, 1, "", "get_sim_shower"], [93, 2, 1, "", "get_sim_showers"], [93, 2, 1, "", "get_station"], [93, 2, 1, "", "get_station_ids"], [93, 2, 1, "", "get_stations"], [93, 2, 1, "", "has_generator_info"], [93, 2, 1, "", "has_parameter"], [93, 2, 1, "", "has_particle"], [93, 2, 1, "", "has_shower"], [93, 2, 1, "", "has_sim_shower"], [93, 2, 1, "", "has_triggered"], [93, 2, 1, "", "iter_modules"], [93, 2, 1, "", "register_module_event"], [93, 2, 1, "", "register_module_station"], [93, 2, 1, "", "serialize"], [93, 2, 1, "", "set_generator_info"], [93, 2, 1, "", "set_id"], [93, 2, 1, "", "set_parameter"], [93, 2, 1, "", "set_station"]], "NuRadioReco.framework.hybrid_information": [[94, 1, 1, "", "HybridInformation"]], "NuRadioReco.framework.hybrid_information.HybridInformation": [[94, 2, 1, "", "add_hybrid_shower"], [94, 2, 1, "", "deserialize"], [94, 2, 1, "", "get_hybrid_shower"], [94, 2, 1, "", "get_hybrid_showers"], [94, 2, 1, "", "serialize"]], "NuRadioReco.framework.hybrid_shower": [[95, 1, 1, "", "HybridShower"]], "NuRadioReco.framework.hybrid_shower.HybridShower": [[95, 2, 1, "", "deserialize"], [95, 2, 1, "", "get_axis"], [95, 2, 1, "", "get_coordinatesystem"], [95, 2, 1, "", "get_hybrid_detector"], [95, 2, 1, "", "get_id"], [95, 2, 1, "", "get_name"], [95, 2, 1, "", "get_parameter"], [95, 2, 1, "", "has_parameter"], [95, 2, 1, "", "serialize"], [95, 2, 1, "", "set_hybrid_detector"], [95, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.parameter_serialization": [[96, 3, 1, "", "deserialize"], [96, 3, 1, "", "deserialize_covariances"], [96, 3, 1, "", "serialize"], [96, 3, 1, "", "serialize_covariances"]], "NuRadioReco.framework.parameters": [[97, 1, 1, "", "ARIANNAParameters"], [97, 1, 1, "", "channelParameters"], [97, 1, 1, "", "electricFieldParameters"], [97, 1, 1, "", "eventParameters"], [97, 1, 1, "", "generatorAttributes"], [97, 1, 1, "", "particleParameters"], [97, 1, 1, "", "showerParameters"], [97, 1, 1, "", "stationParameters"]], "NuRadioReco.framework.parameters.ARIANNAParameters": [[97, 6, 1, "", "comm_duration"], [97, 6, 1, "", "comm_period"], [97, 6, 1, "", "internal_clock_time"], [97, 6, 1, "", "l1_supression_value"], [97, 6, 1, "", "seq_num"], [97, 6, 1, "", "seq_start_time"], [97, 6, 1, "", "seq_stop_time"], [97, 6, 1, "", "trigger_thresholds"]], "NuRadioReco.framework.parameters.channelParameters": [[97, 6, 1, "", "P2P_amplitude"], [97, 6, 1, "", "SNR"], [97, 6, 1, "", "azimuth"], [97, 6, 1, "", "block_offsets"], [97, 6, 1, "", "cr_xcorrelations"], [97, 6, 1, "", "maximum_amplitude"], [97, 6, 1, "", "maximum_amplitude_envelope"], [97, 6, 1, "", "noise_regions"], [97, 6, 1, "", "noise_rms"], [97, 6, 1, "", "nu_xcorrelations"], [97, 6, 1, "", "signal_ray_type"], [97, 6, 1, "", "signal_receiving_azimuth"], [97, 6, 1, "", "signal_receiving_zenith"], [97, 6, 1, "", "signal_regions"], [97, 6, 1, "", "signal_time"], [97, 6, 1, "", "signal_time_offset"], [97, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.electricFieldParameters": [[97, 6, 1, "", "azimuth"], [97, 6, 1, "", "cr_spectrum_quadratic_term"], [97, 6, 1, "", "cr_spectrum_slope"], [97, 6, 1, "", "energy_fluence_ratios"], [97, 6, 1, "", "max_amp_antenna"], [97, 6, 1, "", "max_amp_antenna_envelope"], [97, 6, 1, "", "nu_vertex_distance"], [97, 6, 1, "", "nu_viewing_angle"], [97, 6, 1, "", "polarization_angle"], [97, 6, 1, "", "polarization_angle_expectation"], [97, 6, 1, "", "ray_path_type"], [97, 6, 1, "", "reflection_coefficient_phi"], [97, 6, 1, "", "reflection_coefficient_theta"], [97, 6, 1, "", "signal_energy_fluence"], [97, 6, 1, "", "signal_time"], [97, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.eventParameters": [[97, 6, 1, "", "hash_NuRadioMC"], [97, 6, 1, "", "hash_NuRadioReco"], [97, 6, 1, "", "sim_config"]], "NuRadioReco.framework.parameters.generatorAttributes": [[97, 6, 1, "", "Emax"], [97, 6, 1, "", "Emin"], [97, 6, 1, "", "NuRadioMC_EvtGen_version"], [97, 6, 1, "", "NuRadioMC_EvtGen_version_hash"], [97, 6, 1, "", "NuRadioMC_version"], [97, 6, 1, "", "NuRadioMC_version_hash"], [97, 6, 1, "", "area"], [97, 6, 1, "", "deposited"], [97, 6, 1, "", "dt"], [97, 6, 1, "", "fiducial_rmax"], [97, 6, 1, "", "fiducial_rmin"], [97, 6, 1, "", "fiducial_xmax"], [97, 6, 1, "", "fiducial_xmin"], [97, 6, 1, "", "fiducial_ymax"], [97, 6, 1, "", "fiducial_ymin"], [97, 6, 1, "", "fiducial_zmax"], [97, 6, 1, "", "fiducial_zmin"], [97, 6, 1, "", "flavors"], [97, 6, 1, "", "n_events"], [97, 6, 1, "", "n_samples"], [97, 6, 1, "", "phimax"], [97, 6, 1, "", "phimin"], [97, 6, 1, "", "rmax"], [97, 6, 1, "", "rmin"], [97, 6, 1, "", "start_event_id"], [97, 6, 1, "", "thetamax"], [97, 6, 1, "", "thetamin"], [97, 6, 1, "", "total_number_of_events"], [97, 6, 1, "", "volume"], [97, 6, 1, "", "xmax"], [97, 6, 1, "", "xmin"], [97, 6, 1, "", "ymax"], [97, 6, 1, "", "ymin"], [97, 6, 1, "", "zmax"], [97, 6, 1, "", "zmin"]], "NuRadioReco.framework.parameters.particleParameters": [[97, 6, 1, "", "azimuth"], [97, 6, 1, "", "cr_azimuth"], [97, 6, 1, "", "cr_energy"], [97, 6, 1, "", "cr_energy_em"], [97, 6, 1, "", "cr_zenith"], [97, 6, 1, "", "energy"], [97, 6, 1, "", "flavor"], [97, 6, 1, "", "inelasticity"], [97, 6, 1, "", "interaction_type"], [97, 6, 1, "", "n_interaction"], [97, 6, 1, "", "parent_id"], [97, 6, 1, "", "vertex"], [97, 6, 1, "", "vertex_time"], [97, 6, 1, "", "weight"], [97, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.showerParameters": [[97, 6, 1, "", "atmospheric_model"], [97, 6, 1, "", "azimuth"], [97, 6, 1, "", "charge_excess_profile_id"], [97, 6, 1, "", "core"], [97, 6, 1, "", "distance_shower_maximum_geometric"], [97, 6, 1, "", "distance_shower_maximum_grammage"], [97, 6, 1, "", "electromagnetic_energy"], [97, 6, 1, "", "electromagnetic_radiation_energy"], [97, 6, 1, "", "energy"], [97, 6, 1, "", "flavor"], [97, 6, 1, "", "interaction_type"], [97, 6, 1, "", "interferometric_core"], [97, 6, 1, "", "interferometric_shower_axis"], [97, 6, 1, "", "interferometric_shower_maximum"], [97, 6, 1, "", "k_L"], [97, 6, 1, "", "magnetic_field_rotation"], [97, 6, 1, "", "magnetic_field_vector"], [97, 6, 1, "", "observation_level"], [97, 6, 1, "", "parent_id"], [97, 6, 1, "", "primary_particle"], [97, 6, 1, "", "radiation_energy"], [97, 6, 1, "", "refractive_index_at_ground"], [97, 6, 1, "", "shower_maximum"], [97, 6, 1, "", "type"], [97, 6, 1, "", "vertex"], [97, 6, 1, "", "vertex_time"], [97, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.stationParameters": [[97, 6, 1, "", "azimuth"], [97, 6, 1, "", "ccnc"], [97, 6, 1, "", "channels_max_amplitude"], [97, 6, 1, "", "chi2_efield_time_direction_fit"], [97, 6, 1, "", "cr_azimuth"], [97, 6, 1, "", "cr_dominant_polarisation"], [97, 6, 1, "", "cr_energy"], [97, 6, 1, "", "cr_energy_em"], [97, 6, 1, "", "cr_xcorrelations"], [97, 6, 1, "", "cr_xmax"], [97, 6, 1, "", "cr_zenith"], [97, 6, 1, "", "dirty_fft_channels"], [97, 6, 1, "", "distance_correlations"], [97, 6, 1, "", "flagged_channels"], [97, 6, 1, "", "inelasticity"], [97, 6, 1, "", "ndf_efield_time_direction_fit"], [97, 6, 1, "", "nu_azimuth"], [97, 6, 1, "", "nu_energy"], [97, 6, 1, "", "nu_flavor"], [97, 6, 1, "", "nu_inttype"], [97, 6, 1, "", "nu_vertex"], [97, 6, 1, "", "nu_xcorrelations"], [97, 6, 1, "", "nu_zenith"], [97, 6, 1, "", "shower_energy"], [97, 6, 1, "", "station_time"], [97, 6, 1, "", "triggered"], [97, 6, 1, "", "vertex_2D_fit"], [97, 6, 1, "", "viewing_angles"], [97, 6, 1, "", "zenith"], [97, 6, 1, "", "zenith_cr_templatefit"], [97, 6, 1, "", "zenith_nu_templatefit"]], "NuRadioReco.framework.particle": [[98, 1, 1, "", "Particle"]], "NuRadioReco.framework.particle.Particle": [[98, 2, 1, "", "as_hdf5_dict"], [98, 2, 1, "", "deserialize"], [98, 2, 1, "", "get_id"], [98, 2, 1, "", "get_parameter"], [98, 2, 1, "", "has_parameter"], [98, 2, 1, "", "serialize"], [98, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.radio_shower": [[99, 1, 1, "", "RadioShower"]], "NuRadioReco.framework.radio_shower.RadioShower": [[99, 2, 1, "", "deserialize"], [99, 2, 1, "", "get_axis"], [99, 2, 1, "", "get_coordinatesystem"], [99, 2, 1, "", "get_id"], [99, 2, 1, "", "get_parameter"], [99, 2, 1, "", "get_station_ids"], [99, 2, 1, "", "has_parameter"], [99, 2, 1, "", "has_station_ids"], [99, 2, 1, "", "serialize"], [99, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.sim_channel": [[100, 1, 1, "", "SimChannel"]], "NuRadioReco.framework.sim_channel.SimChannel": [[100, 2, 1, "", "add_trace_start_time"], [100, 2, 1, "", "apply_time_shift"], [100, 2, 1, "", "deserialize"], [100, 2, 1, "", "get_filtered_trace"], [100, 2, 1, "", "get_frequencies"], [100, 2, 1, "", "get_frequency_spectrum"], [100, 2, 1, "", "get_group_id"], [100, 2, 1, "", "get_hilbert_envelope"], [100, 2, 1, "", "get_hilbert_envelope_mag"], [100, 2, 1, "", "get_id"], [100, 2, 1, "", "get_number_of_samples"], [100, 2, 1, "", "get_parameter"], [100, 2, 1, "", "get_parameters"], [100, 2, 1, "", "get_ray_tracing_solution_id"], [100, 2, 1, "", "get_sampling_rate"], [100, 2, 1, "", "get_shower_id"], [100, 2, 1, "", "get_times"], [100, 2, 1, "", "get_trace"], [100, 2, 1, "", "get_trace_start_time"], [100, 2, 1, "", "get_unique_identifier"], [100, 2, 1, "", "has_parameter"], [100, 2, 1, "", "resample"], [100, 2, 1, "", "serialize"], [100, 2, 1, "", "set_frequency_spectrum"], [100, 2, 1, "", "set_parameter"], [100, 2, 1, "", "set_trace"], [100, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.sim_station": [[101, 1, 1, "", "SimStation"]], "NuRadioReco.framework.sim_station.SimStation": [[101, 2, 1, "", "add_channel"], [101, 2, 1, "", "add_electric_field"], [101, 2, 1, "", "deserialize"], [101, 2, 1, "", "get_ARIANNA_parameter"], [101, 2, 1, "", "get_ARIANNA_parameters"], [101, 2, 1, "", "get_channel"], [101, 2, 1, "", "get_channel_ids"], [101, 2, 1, "", "get_channels_by_channel_id"], [101, 2, 1, "", "get_channels_by_ray_tracing_id"], [101, 2, 1, "", "get_channels_by_shower_id"], [101, 2, 1, "", "get_electric_fields"], [101, 2, 1, "", "get_electric_fields_for_channels"], [101, 2, 1, "", "get_id"], [101, 2, 1, "", "get_magnetic_field_vector"], [101, 2, 1, "", "get_parameter"], [101, 2, 1, "", "get_parameter_error"], [101, 2, 1, "", "get_parameters"], [101, 2, 1, "", "get_ray_tracing_ids"], [101, 2, 1, "", "get_shower_ids"], [101, 2, 1, "", "get_simulation_weight"], [101, 2, 1, "", "get_station_time"], [101, 2, 1, "", "get_station_time_dict"], [101, 2, 1, "", "get_trigger"], [101, 2, 1, "", "get_triggers"], [101, 2, 1, "", "has_ARIANNA_parameter"], [101, 2, 1, "", "has_parameter"], [101, 2, 1, "", "has_trigger"], [101, 2, 1, "", "has_triggered"], [101, 2, 1, "", "is_cosmic_ray"], [101, 2, 1, "", "is_neutrino"], [101, 2, 1, "", "iter_channels"], [101, 2, 1, "", "remove_parameter"], [101, 2, 1, "", "remove_triggers"], [101, 2, 1, "", "serialize"], [101, 2, 1, "", "set_ARIANNA_parameter"], [101, 2, 1, "", "set_electric_fields"], [101, 2, 1, "", "set_is_cosmic_ray"], [101, 2, 1, "", "set_is_neutrino"], [101, 2, 1, "", "set_magnetic_field_vector"], [101, 2, 1, "", "set_parameter"], [101, 2, 1, "", "set_parameter_error"], [101, 2, 1, "", "set_simulation_weight"], [101, 2, 1, "", "set_station_time"], [101, 2, 1, "", "set_trigger"], [101, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.station": [[102, 1, 1, "", "Station"]], "NuRadioReco.framework.station.Station": [[102, 2, 1, "", "add_channel"], [102, 2, 1, "", "add_electric_field"], [102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_ARIANNA_parameter"], [102, 2, 1, "", "get_ARIANNA_parameters"], [102, 2, 1, "", "get_channel"], [102, 2, 1, "", "get_channel_ids"], [102, 2, 1, "", "get_electric_fields"], [102, 2, 1, "", "get_electric_fields_for_channels"], [102, 2, 1, "", "get_id"], [102, 2, 1, "", "get_magnetic_field_vector"], [102, 2, 1, "", "get_number_of_channels"], [102, 2, 1, "", "get_parameter"], [102, 2, 1, "", "get_parameter_error"], [102, 2, 1, "", "get_parameters"], [102, 2, 1, "", "get_reference_direction"], [102, 2, 1, "", "get_reference_reconstruction"], [102, 2, 1, "", "get_sim_station"], [102, 2, 1, "", "get_station_time"], [102, 2, 1, "", "get_station_time_dict"], [102, 2, 1, "", "get_trigger"], [102, 2, 1, "", "get_triggers"], [102, 2, 1, "", "has_ARIANNA_parameter"], [102, 2, 1, "", "has_parameter"], [102, 2, 1, "", "has_sim_station"], [102, 2, 1, "", "has_trigger"], [102, 2, 1, "", "has_triggered"], [102, 2, 1, "", "is_cosmic_ray"], [102, 2, 1, "", "is_neutrino"], [102, 2, 1, "", "iter_channel_group"], [102, 2, 1, "", "iter_channels"], [102, 2, 1, "", "remove_channel"], [102, 2, 1, "", "remove_parameter"], [102, 2, 1, "", "remove_triggers"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_ARIANNA_parameter"], [102, 2, 1, "", "set_electric_fields"], [102, 2, 1, "", "set_is_cosmic_ray"], [102, 2, 1, "", "set_is_neutrino"], [102, 2, 1, "", "set_parameter"], [102, 2, 1, "", "set_parameter_error"], [102, 2, 1, "", "set_reference_reconstruction"], [102, 2, 1, "", "set_sim_station"], [102, 2, 1, "", "set_station_time"], [102, 2, 1, "", "set_trigger"], [102, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.trigger": [[103, 1, 1, "", "EnvelopePhasedTrigger"], [103, 1, 1, "", "EnvelopeTrigger"], [103, 1, 1, "", "HighLowTrigger"], [103, 1, 1, "", "IntegratedPowerTrigger"], [103, 1, 1, "", "RNOGSurfaceTrigger"], [103, 1, 1, "", "SimplePhasedTrigger"], [103, 1, 1, "", "SimpleThresholdTrigger"], [103, 1, 1, "", "Trigger"], [103, 3, 1, "", "deserialize"]], "NuRadioReco.framework.trigger.EnvelopePhasedTrigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.EnvelopeTrigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.HighLowTrigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.IntegratedPowerTrigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.RNOGSurfaceTrigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"], [103, 6, 1, "", "units"]], "NuRadioReco.framework.trigger.SimplePhasedTrigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.SimpleThresholdTrigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.Trigger": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_name"], [103, 2, 1, "", "get_pre_trigger_times"], [103, 2, 1, "", "get_trigger_settings"], [103, 2, 1, "", "get_trigger_time"], [103, 2, 1, "", "get_trigger_times"], [103, 2, 1, "", "get_triggered_channels"], [103, 2, 1, "", "get_type"], [103, 2, 1, "", "has_triggered"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_pre_trigger_times"], [103, 2, 1, "", "set_trigger_time"], [103, 2, 1, "", "set_trigger_times"], [103, 2, 1, "", "set_triggered"], [103, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.modules": [[105, 0, 0, "-", "ARA"], [108, 0, 0, "-", "ARIANNA"], [110, 0, 0, "-", "LOFAR"], [116, 0, 0, "-", "RNO_G"], [119, 0, 0, "-", "analogToDigitalConverter"], [120, 0, 0, "-", "base"], [122, 0, 0, "-", "beamFormingDirectionFitter"], [123, 0, 0, "-", "channelAddCableDelay"], [124, 0, 0, "-", "channelAntennaDedispersion"], [125, 0, 0, "-", "channelBandPassFilter"], [126, 0, 0, "-", "channelGalacticNoiseAdder"], [127, 0, 0, "-", "channelGenericNoiseAdder"], [128, 0, 0, "-", "channelLengthAdjuster"], [129, 0, 0, "-", "channelResampler"], [130, 0, 0, "-", "channelSignalReconstructor"], [131, 0, 0, "-", "channelStopFilter"], [132, 0, 0, "-", "channelTemplateCorrelation"], [133, 0, 0, "-", "channelTimeOffsetCalculator"], [134, 0, 0, "-", "channelTimeWindow"], [135, 0, 0, "-", "correlationDirectionFitter"], [136, 0, 0, "-", "cosmicRayEnergyReconstructor"], [137, 0, 0, "-", "custom"], [140, 0, 0, "-", "efieldAirToIcePropagator"], [141, 0, 0, "-", "efieldRadioInterferometricReconstruction"], [142, 0, 0, "-", "efieldTimeDirectionFitter"], [143, 0, 0, "-", "efieldToVoltageConverter"], [144, 0, 0, "-", "efieldToVoltageConverterPerEfield"], [145, 0, 0, "-", "electricFieldBandPassFilter"], [146, 0, 0, "-", "electricFieldResampler"], [147, 0, 0, "-", "electricFieldSignalReconstructor"], [148, 0, 0, "-", "eventTypeIdentifier"], [149, 0, 0, "-", "iftElectricFieldReconstructor"], [152, 0, 0, "-", "io"], [176, 0, 0, "-", "measured_noise"], [182, 0, 0, "-", "neutrinoDirectionReconstructor"], [184, 0, 0, "-", "neutrinoVertexReconstructor"], [188, 0, 0, "-", "phasedarray"], [190, 0, 0, "-", "sphericalWaveFitter"], [191, 0, 0, "-", "templateDirectionFitter"], [192, 0, 0, "-", "trigger"], [200, 0, 0, "-", "triggerTimeAdjuster"], [201, 0, 0, "-", "voltageToAnalyticEfieldConverter"], [202, 0, 0, "-", "voltageToEfieldConverter"], [203, 0, 0, "-", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.ARA": [[106, 0, 0, "-", "hardwareResponseIncorporator"], [107, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator": [[106, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[106, 2, 1, "", "begin"], [106, 2, 1, "", "end"], [106, 2, 1, "", "run"]], "NuRadioReco.modules.ARA.triggerSimulator": [[107, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator": [[107, 2, 1, "", "end"], [107, 2, 1, "", "has_triggered"], [107, 2, 1, "", "run"]], "NuRadioReco.modules.ARIANNA": [[109, 0, 0, "-", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator": [[109, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[109, 2, 1, "", "begin"], [109, 2, 1, "", "end"], [109, 2, 1, "", "get_filter"], [109, 2, 1, "", "get_mingainlin"], [109, 2, 1, "", "get_time_delay"], [109, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR": [[111, 0, 0, "-", "beamformingDirectionFitter_LOFAR"], [112, 0, 0, "-", "beamforming_utilities"], [113, 0, 0, "-", "stationGalacticCalibrator"], [114, 0, 0, "-", "stationPulseFinder"], [115, 0, 0, "-", "stationRFIFilter"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR": [[111, 1, 1, "", "beamformingDirectionFitter"], [111, 3, 1, "", "geometric_delays"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter": [[111, 2, 1, "", "begin"], [111, 2, 1, "", "end"], [111, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.beamforming_utilities": [[112, 3, 1, "", "GeometricDelayFarField"], [112, 3, 1, "", "beamformer"], [112, 3, 1, "", "geometric_delays"], [112, 3, 1, "", "mini_beamformer"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator": [[113, 3, 1, "", "fourier_series"], [113, 1, 1, "", "stationGalacticCalibrator"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator": [[113, 2, 1, "", "begin"], [113, 2, 1, "", "end"], [113, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.stationPulseFinder": [[114, 3, 1, "", "find_snr_of_timeseries"], [114, 1, 1, "", "stationPulseFinder"]], "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder": [[114, 2, 1, "", "begin"], [114, 2, 1, "", "end"], [114, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.stationRFIFilter": [[115, 3, 1, "", "FindRFI_LOFAR"], [115, 3, 1, "", "median_sorted_by_power"], [115, 3, 1, "", "num_double_zeros"], [115, 1, 1, "", "stationRFIFilter"]], "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter": [[115, 2, 1, "", "begin"], [115, 2, 1, "", "end"], [115, 5, 1, "", "metadata_dir"], [115, 2, 1, "", "run"], [115, 5, 1, "", "station_list"]], "NuRadioReco.modules.RNO_G": [[117, 0, 0, "-", "channelBlockOffsetFitter"], [118, 0, 0, "-", "hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter": [[117, 1, 1, "", "channelBlockOffsets"], [117, 3, 1, "", "fit_block_offsets"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets": [[117, 2, 1, "", "add_offsets"], [117, 2, 1, "", "remove_offsets"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator": [[118, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator": [[118, 2, 1, "", "begin"], [118, 2, 1, "", "end"], [118, 2, 1, "", "get_filter"], [118, 2, 1, "", "get_mingainlin"], [118, 2, 1, "", "get_time_delay"], [118, 2, 1, "", "run"]], "NuRadioReco.modules.analogToDigitalConverter": [[119, 1, 1, "", "analogToDigitalConverter"], [119, 3, 1, "", "apply_saturation"], [119, 3, 1, "", "perfect_ceiling_comparator"], [119, 3, 1, "", "perfect_comparator"], [119, 3, 1, "", "perfect_floor_comparator"], [119, 3, 1, "", "round_to_int"]], "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter": [[119, 2, 1, "", "end"], [119, 2, 1, "", "get_digital_trace"], [119, 2, 1, "", "run"]], "NuRadioReco.modules.base": [[121, 0, 0, "-", "module"]], "NuRadioReco.modules.base.module": [[121, 3, 1, "", "register_run"], [121, 3, 1, "", "setup_logger"]], "NuRadioReco.modules.beamFormingDirectionFitter": [[122, 1, 1, "", "beamFormingDirectionFitter"], [122, 3, 1, "", "get_array_of_channels"]], "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter": [[122, 2, 1, "", "begin"], [122, 2, 1, "", "end"], [122, 2, 1, "", "run"]], "NuRadioReco.modules.channelAddCableDelay": [[123, 1, 1, "", "channelAddCableDelay"]], "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay": [[123, 2, 1, "", "run"]], "NuRadioReco.modules.channelAntennaDedispersion": [[124, 1, 1, "", "channelAntennaDedispersion"]], "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion": [[124, 2, 1, "", "end"], [124, 2, 1, "", "run"]], "NuRadioReco.modules.channelBandPassFilter": [[125, 1, 1, "", "channelBandPassFilter"], [125, 3, 1, "", "test_equality"]], "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter": [[125, 2, 1, "", "begin"], [125, 2, 1, "", "end"], [125, 2, 1, "", "get_filter"], [125, 2, 1, "", "get_filter_arguments"], [125, 2, 1, "", "run"]], "NuRadioReco.modules.channelGalacticNoiseAdder": [[126, 1, 1, "", "channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder": [[126, 2, 1, "", "begin"], [126, 2, 1, "", "run"]], "NuRadioReco.modules.channelGenericNoiseAdder": [[127, 1, 1, "", "channelGenericNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder": [[127, 2, 1, "", "add_random_phases"], [127, 2, 1, "", "bandlimited_noise"], [127, 2, 1, "", "bandlimited_noise_from_precalculated_parameters"], [127, 2, 1, "", "begin"], [127, 2, 1, "", "end"], [127, 2, 1, "", "fftnoise_fullfft"], [127, 2, 1, "", "precalculate_bandlimited_noise_parameters"], [127, 2, 1, "", "run"]], "NuRadioReco.modules.channelLengthAdjuster": [[128, 1, 1, "", "channelLengthAdjuster"]], "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster": [[128, 2, 1, "", "begin"], [128, 2, 1, "", "end"], [128, 2, 1, "", "run"]], "NuRadioReco.modules.channelResampler": [[129, 1, 1, "", "channelResampler"]], "NuRadioReco.modules.channelResampler.channelResampler": [[129, 2, 1, "", "begin"], [129, 2, 1, "", "end"], [129, 2, 1, "", "run"]], "NuRadioReco.modules.channelSignalReconstructor": [[130, 1, 1, "", "channelSignalReconstructor"]], "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor": [[130, 2, 1, "", "begin"], [130, 2, 1, "", "end"], [130, 2, 1, "", "get_SNR"], [130, 2, 1, "", "run"]], "NuRadioReco.modules.channelStopFilter": [[131, 1, 1, "", "channelStopFilter"]], "NuRadioReco.modules.channelStopFilter.channelStopFilter": [[131, 2, 1, "", "begin"], [131, 2, 1, "", "end"], [131, 2, 1, "", "run"]], "NuRadioReco.modules.channelTemplateCorrelation": [[132, 1, 1, "", "channelTemplateCorrelation"]], "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation": [[132, 2, 1, "", "begin"], [132, 2, 1, "", "end"], [132, 2, 1, "", "match_sampling"], [132, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeOffsetCalculator": [[133, 1, 1, "", "channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator": [[133, 2, 1, "", "begin"], [133, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeWindow": [[134, 1, 1, "", "channelTimeWindow"]], "NuRadioReco.modules.channelTimeWindow.channelTimeWindow": [[134, 2, 1, "", "begin"], [134, 2, 1, "", "end"], [134, 2, 1, "", "run"]], "NuRadioReco.modules.correlationDirectionFitter": [[135, 1, 1, "", "correlationDirectionFitter"]], "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter": [[135, 2, 1, "", "begin"], [135, 2, 1, "", "end"], [135, 2, 1, "", "run"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor": [[136, 1, 1, "", "cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor": [[136, 2, 1, "", "begin"], [136, 2, 1, "", "run"]], "NuRadioReco.modules.custom": [[138, 0, 0, "-", "deltaT"]], "NuRadioReco.modules.custom.deltaT": [[139, 0, 0, "-", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution": [[139, 1, 1, "", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution": [[139, 2, 1, "", "begin"], [139, 2, 1, "", "end"], [139, 2, 1, "", "run"]], "NuRadioReco.modules.efieldAirToIcePropagator": [[140, 1, 1, "", "efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator": [[140, 2, 1, "", "begin"], [140, 2, 1, "", "end"], [140, 2, 1, "", "run"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction": [[141, 1, 1, "", "efieldInterferometricAxisReco"], [141, 1, 1, "", "efieldInterferometricDepthReco"], [141, 3, 1, "", "get_geometry_and_transformation"], [141, 3, 1, "", "get_station_data"], [141, 4, 1, "", "logger"], [141, 3, 1, "", "plot_lateral_cross_section"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco": [[141, 2, 1, "", "begin"], [141, 2, 1, "", "end"], [141, 2, 1, "", "find_maximum_in_plane"], [141, 2, 1, "", "reconstruct_interferometric_depth"], [141, 2, 1, "", "reconstruct_shower_axis"], [141, 2, 1, "", "run"], [141, 2, 1, "", "sample_lateral_cross_section"], [141, 2, 1, "", "sample_longitudinal_profile"], [141, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco": [[141, 2, 1, "", "begin"], [141, 2, 1, "", "end"], [141, 2, 1, "", "reconstruct_interferometric_depth"], [141, 2, 1, "", "run"], [141, 2, 1, "", "sample_longitudinal_profile"], [141, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldTimeDirectionFitter": [[142, 1, 1, "", "efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter": [[142, 2, 1, "", "begin"], [142, 2, 1, "", "end"], [142, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverter": [[143, 1, 1, "", "efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter": [[143, 2, 1, "", "begin"], [143, 2, 1, "", "end"], [143, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield": [[144, 1, 1, "", "efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield": [[144, 2, 1, "", "end"], [144, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldBandPassFilter": [[145, 1, 1, "", "electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter": [[145, 2, 1, "", "begin"], [145, 2, 1, "", "end"], [145, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldResampler": [[146, 1, 1, "", "electricFieldResampler"]], "NuRadioReco.modules.electricFieldResampler.electricFieldResampler": [[146, 2, 1, "", "begin"], [146, 2, 1, "", "end"], [146, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldSignalReconstructor": [[147, 1, 1, "", "electricFieldSignalReconstructor"]], "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor": [[147, 2, 1, "", "begin"], [147, 2, 1, "", "end"], [147, 2, 1, "", "run"]], "NuRadioReco.modules.eventTypeIdentifier": [[148, 1, 1, "", "eventTypeIdentifier"]], "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier": [[148, 2, 1, "", "begin"], [148, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor": [[150, 0, 0, "-", "iftElectricFieldReconstructor"], [151, 0, 0, "-", "operators"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor": [[150, 1, 1, "", "IftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor": [[150, 2, 1, "", "begin"], [150, 2, 1, "", "make_priors_plot"], [150, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators": [[151, 1, 1, "", "DomainFlipper"], [151, 1, 1, "", "Inserter"], [151, 1, 1, "", "LinearSlopeOperator"], [151, 3, 1, "", "SlopeSpectrumOperator"], [151, 1, 1, "", "SymmetrizingOperator"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper": [[151, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter": [[151, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator": [[151, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator": [[151, 2, 1, "", "apply"]], "NuRadioReco.modules.io": [[153, 0, 0, "-", "LOFAR"], [158, 0, 0, "-", "NuRadioRecoio"], [159, 0, 0, "-", "RNO_G"], [161, 0, 0, "-", "araroot"], [163, 0, 0, "-", "coreas"], [170, 0, 0, "-", "eventReader"], [171, 0, 0, "-", "eventWriter"], [172, 0, 0, "-", "event_parser_factory"], [173, 0, 0, "-", "snowshovel"]], "NuRadioReco.modules.io.LOFAR": [[154, 0, 0, "-", "rawTBBio"], [155, 0, 0, "-", "rawTBBio_metadata"], [156, 0, 0, "-", "rawTBBio_utilities"], [157, 0, 0, "-", "readLOFARData"]], "NuRadioReco.modules.io.LOFAR.rawTBBio": [[154, 1, 1, "", "MultiFile_Dal1"], [154, 1, 1, "", "TBBData_Dal1"], [154, 3, 1, "", "decode_if_needed"], [154, 3, 1, "", "read_antenna_delays"], [154, 3, 1, "", "read_antenna_pol_flips"], [154, 3, 1, "", "read_bad_antennas"], [154, 3, 1, "", "read_station_delays"]], "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1": [[154, 2, 1, "", "close_file"], [154, 2, 1, "", "find_and_set_polarization_delay"], [154, 2, 1, "", "get_ITRF_antenna_positions"], [154, 2, 1, "", "get_LOFAR_centered_positions"], [154, 2, 1, "", "get_all_sample_numbers"], [154, 2, 1, "", "get_antenna_names"], [154, 2, 1, "", "get_antenna_set"], [154, 2, 1, "", "get_data"], [154, 2, 1, "", "get_filter_selection"], [154, 2, 1, "", "get_full_data_lengths"], [154, 2, 1, "", "get_geometric_delays"], [154, 2, 1, "", "get_nominal_data_lengths"], [154, 2, 1, "", "get_nominal_sample_number"], [154, 2, 1, "", "get_sample_frequency"], [154, 2, 1, "", "get_station_ID"], [154, 2, 1, "", "get_station_name"], [154, 2, 1, "", "get_time_from_second"], [154, 2, 1, "", "get_timestamp"], [154, 2, 1, "", "get_timestamp_as_datetime"], [154, 2, 1, "", "get_timing_callibration_delays"], [154, 2, 1, "", "get_timing_callibration_phases"], [154, 2, 1, "", "get_total_delays"], [154, 2, 1, "", "has_antenna"], [154, 2, 1, "", "needs_metadata"], [154, 2, 1, "", "set_odd_polarization_delay"], [154, 2, 1, "", "set_polarization_flips"], [154, 2, 1, "", "set_station_delay"]], "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1": [[154, 2, 1, "", "close_file"], [154, 2, 1, "", "get_ITRF_antenna_positions"], [154, 2, 1, "", "get_LOFAR_centered_positions"], [154, 2, 1, "", "get_all_sample_numbers"], [154, 2, 1, "", "get_antenna_names"], [154, 2, 1, "", "get_antenna_set"], [154, 2, 1, "", "get_data"], [154, 2, 1, "", "get_filter_selection"], [154, 2, 1, "", "get_full_data_lengths"], [154, 2, 1, "", "get_nominal_data_lengths"], [154, 2, 1, "", "get_nominal_sample_number"], [154, 2, 1, "", "get_sample_frequency"], [154, 2, 1, "", "get_station_ID"], [154, 2, 1, "", "get_station_name"], [154, 2, 1, "", "get_timestamp"], [154, 2, 1, "", "get_timing_callibration_delays"], [154, 2, 1, "", "get_timing_callibration_phases"], [154, 2, 1, "", "needs_metadata"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata": [[155, 3, 1, "", "convertITRFToLocal"], [155, 3, 1, "", "convertPhase_to_Timing"], [155, 3, 1, "", "getClockCorrectionFromParsetAddition"], [155, 3, 1, "", "getClockCorrections"], [155, 3, 1, "", "getItrfAntennaPosition"], [155, 3, 1, "", "getStationPhaseCalibration"], [155, 3, 1, "", "getStationPositions"], [155, 3, 1, "", "make_antennaID_filter"], [155, 3, 1, "", "mapAntennasetKeyword"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities": [[156, 3, 1, "", "antName_is_even"], [156, 3, 1, "", "even_antName_to_odd"]], "NuRadioReco.modules.io.LOFAR.readLOFARData": [[157, 1, 1, "", "getLOFARtraces"], [157, 3, 1, "", "get_metadata"], [157, 3, 1, "", "lora_timestamp_to_blocknumber"], [157, 1, 1, "", "readLOFARData"], [157, 3, 1, "", "tbb_filetag_from_utc"]], "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces": [[157, 2, 1, "", "check_trace_quality"], [157, 2, 1, "", "close_file"], [157, 2, 1, "", "get_trace"], [157, 2, 1, "", "setup_trace_loading"]], "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData": [[157, 2, 1, "", "begin"], [157, 2, 1, "", "end"], [157, 2, 1, "", "get_stations"], [157, 2, 1, "", "run"]], "NuRadioReco.modules.io.NuRadioRecoio": [[158, 1, 1, "", "NuRadioRecoio"]], "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio": [[158, 2, 1, "", "close_files"], [158, 2, 1, "", "get_detector"], [158, 2, 1, "", "get_event"], [158, 2, 1, "", "get_event_i"], [158, 2, 1, "", "get_event_ids"], [158, 2, 1, "", "get_events"], [158, 2, 1, "", "get_filenames"], [158, 2, 1, "", "get_header"], [158, 2, 1, "", "get_n_events"], [158, 2, 1, "", "openFile"]], "NuRadioReco.modules.io.RNO_G": [[160, 0, 0, "-", "readRNOGDataMattak"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak": [[160, 3, 1, "", "get_time_offset"], [160, 1, 1, "", "readRNOGData"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData": [[160, 2, 1, "", "begin"], [160, 2, 1, "", "end"], [160, 2, 1, "", "get_event"], [160, 2, 1, "", "get_event_by_index"], [160, 2, 1, "", "get_events_information"], [160, 2, 1, "", "run"], [160, 2, 1, "", "set_selectors"]], "NuRadioReco.modules.io.coreas": [[164, 0, 0, "-", "coreas"], [165, 0, 0, "-", "readCoREAS"], [166, 0, 0, "-", "readCoREASShower"], [167, 0, 0, "-", "readCoREASStation"], [168, 0, 0, "-", "readCoREASStationGrid"], [169, 0, 0, "-", "simulationSelector"]], "NuRadioReco.modules.io.coreas.coreas": [[164, 3, 1, "", "calculate_simulation_weights"], [164, 3, 1, "", "get_angles"], [164, 3, 1, "", "make_sim_shower"], [164, 3, 1, "", "make_sim_station"]], "NuRadioReco.modules.io.coreas.readCoREAS": [[165, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS": [[165, 2, 1, "", "begin"], [165, 2, 1, "", "end"], [165, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASShower": [[166, 3, 1, "", "antenna_id"], [166, 1, 1, "", "readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower": [[166, 2, 1, "", "begin"], [166, 2, 1, "", "end"], [166, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStation": [[167, 1, 1, "", "readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation": [[167, 2, 1, "", "begin"], [167, 2, 1, "", "end"], [167, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid": [[168, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS": [[168, 2, 1, "", "begin"], [168, 2, 1, "", "end"], [168, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.simulationSelector": [[169, 1, 1, "", "simulationSelector"]], "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector": [[169, 2, 1, "", "begin"], [169, 2, 1, "", "end"], [169, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventReader": [[170, 1, 1, "", "eventReader"]], "NuRadioReco.modules.io.eventReader.eventReader": [[170, 2, 1, "", "begin"], [170, 2, 1, "", "end"], [170, 2, 1, "", "get_detector"], [170, 2, 1, "", "get_header"], [170, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventWriter": [[171, 1, 1, "", "eventWriter"], [171, 3, 1, "", "get_header"]], "NuRadioReco.modules.io.eventWriter.eventWriter": [[171, 2, 1, "", "begin"], [171, 2, 1, "", "end"], [171, 2, 1, "", "run"]], "NuRadioReco.modules.io.event_parser_factory": [[172, 3, 1, "", "iter_events_function"], [172, 3, 1, "", "scan_files_function"]], "NuRadioReco.modules.io.snowshovel": [[174, 0, 0, "-", "readARIANNAData"], [175, 0, 0, "-", "readARIANNADataCalib"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData": [[174, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData": [[174, 2, 1, "", "begin"], [174, 2, 1, "", "end"], [174, 2, 1, "", "run"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib": [[175, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData": [[175, 2, 1, "", "begin"], [175, 2, 1, "", "end"], [175, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise": [[177, 0, 0, "-", "ARIANNA"], [179, 0, 0, "-", "RNO_G"], [181, 0, 0, "-", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.ARIANNA": [[178, 0, 0, "-", "noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT": [[178, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter": [[178, 2, 1, "", "begin"], [178, 2, 1, "", "end"], [178, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.RNO_G": [[180, 0, 0, "-", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter": [[180, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter": [[180, 2, 1, "", "begin"], [180, 2, 1, "", "end"], [180, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder": [[181, 1, 1, "", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder": [[181, 2, 1, "", "begin"], [181, 2, 1, "", "end"], [181, 2, 1, "", "get_noise_station"], [181, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoDirectionReconstructor": [[183, 0, 0, "-", "voltageToEfieldAnalyticConverterForNeutrinos"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos": [[183, 1, 1, "", "voltageToAnalyticEfieldConverterNeutrinos"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos": [[183, 2, 1, "", "begin"], [183, 2, 1, "", "end"], [183, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor": [[185, 0, 0, "-", "create_lookup_table"], [186, 0, 0, "-", "neutrino2DVertexReconstructor"], [187, 0, 0, "-", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor": [[186, 1, 1, "", "neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor": [[186, 2, 1, "", "begin"], [186, 2, 1, "", "find_ray_type"], [186, 2, 1, "", "find_receiving_zenith"], [186, 2, 1, "", "get_correlation_array_2d"], [186, 2, 1, "", "get_correlation_for_pos"], [186, 2, 1, "", "get_signal_travel_time"], [186, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor": [[187, 1, 1, "", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor": [[187, 2, 1, "", "begin"], [187, 2, 1, "", "get_correlation_array_2d"], [187, 2, 1, "", "get_correlation_array_3d"], [187, 2, 1, "", "get_correlation_for_pos"], [187, 2, 1, "", "get_signal_travel_time"], [187, 2, 1, "", "run"]], "NuRadioReco.modules.phasedarray": [[189, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator": [[189, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator": [[189, 2, 1, "", "begin"], [189, 2, 1, "", "calculate_time_delays"], [189, 2, 1, "", "check_vertical_string"], [189, 2, 1, "", "end"], [189, 2, 1, "", "get_antenna_positions"], [189, 2, 1, "", "get_channel_trace_start_time"], [189, 2, 1, "", "phase_signals"], [189, 2, 1, "", "phased_trigger"], [189, 2, 1, "", "power_sum"], [189, 2, 1, "", "run"]], "NuRadioReco.modules.sphericalWaveFitter": [[190, 1, 1, "", "sphericalWaveFitter"]], "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter": [[190, 2, 1, "", "begin"], [190, 2, 1, "", "end"], [190, 2, 1, "", "run"]], "NuRadioReco.modules.templateDirectionFitter": [[191, 1, 1, "", "templateDirectionFitter"]], "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter": [[191, 2, 1, "", "begin"], [191, 2, 1, "", "end"], [191, 2, 1, "", "run"]], "NuRadioReco.modules.trigger": [[193, 0, 0, "-", "calc_parameters_for_rnog_surface_trigger"], [194, 0, 0, "-", "envelopeTrigger"], [195, 0, 0, "-", "highLowThreshold"], [196, 0, 0, "-", "multiHighLowThreshold"], [197, 0, 0, "-", "powerIntegration"], [198, 0, 0, "-", "rnog_surface_trigger"], [199, 0, 0, "-", "simpleThreshold"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[193, 3, 1, "", "linear_fit"]], "NuRadioReco.modules.trigger.envelopeTrigger": [[194, 3, 1, "", "get_envelope_triggers"], [194, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator": [[194, 2, 1, "", "begin"], [194, 2, 1, "", "end"], [194, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.highLowThreshold": [[195, 3, 1, "", "get_high_low_triggers"], [195, 3, 1, "", "get_majority_logic"], [195, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator": [[195, 2, 1, "", "begin"], [195, 2, 1, "", "end"], [195, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.multiHighLowThreshold": [[196, 3, 1, "", "get_high_triggers"], [196, 3, 1, "", "get_low_triggers"], [196, 3, 1, "", "get_multiple_high_low_trigger"], [196, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator": [[196, 2, 1, "", "begin"], [196, 2, 1, "", "end"], [196, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.powerIntegration": [[197, 3, 1, "", "get_power_int_triggers"], [197, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator": [[197, 2, 1, "", "begin"], [197, 2, 1, "", "end"], [197, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.rnog_surface_trigger": [[198, 3, 1, "", "schottky_diode"], [198, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator": [[198, 2, 1, "", "begin"], [198, 2, 1, "", "end"], [198, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.simpleThreshold": [[199, 3, 1, "", "get_threshold_triggers"], [199, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator": [[199, 2, 1, "", "begin"], [199, 2, 1, "", "end"], [199, 2, 1, "", "run"]], "NuRadioReco.modules.triggerTimeAdjuster": [[200, 1, 1, "", "triggerTimeAdjuster"]], "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster": [[200, 2, 1, "", "begin"], [200, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter": [[201, 3, 1, "", "covariance"], [201, 3, 1, "", "stacked_lstsq"], [201, 1, 1, "", "voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter": [[201, 2, 1, "", "begin"], [201, 2, 1, "", "end"], [201, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverter": [[202, 3, 1, "", "get_array_of_channels"], [202, 3, 1, "", "stacked_lstsq"], [202, 1, 1, "", "voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter": [[202, 2, 1, "", "begin"], [202, 2, 1, "", "end"], [202, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel": [[203, 1, 1, "", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel": [[203, 2, 1, "", "begin"], [203, 2, 1, "", "end"], [203, 2, 1, "", "run"]], "NuRadioReco.utilities": [[205, 0, 0, "-", "analytic_pulse"], [206, 0, 0, "-", "bandpass_filter"], [207, 0, 0, "-", "cr_flux"], [208, 0, 0, "-", "diodeSimulator"], [209, 0, 0, "-", "fft"], [210, 0, 0, "-", "geometryUtilities"], [211, 0, 0, "-", "ice"], [212, 0, 0, "-", "interferometry"], [213, 0, 0, "-", "io_utilities"], [214, 0, 0, "-", "logging"], [215, 0, 0, "-", "metaclasses"], [216, 0, 0, "-", "noise"], [217, 0, 0, "-", "particle_names"], [218, 0, 0, "-", "signal_processing"], [219, 0, 0, "-", "templates"], [220, 0, 0, "-", "timing"], [221, 0, 0, "-", "traceWindows"], [222, 0, 0, "-", "trace_utilities"], [223, 0, 0, "-", "units"], [224, 0, 0, "-", "version"]], "NuRadioReco.utilities.analytic_pulse": [[205, 3, 1, "", "amp_from_energy"], [205, 3, 1, "", "get_analytic_pulse"], [205, 3, 1, "", "get_analytic_pulse_freq"]], "NuRadioReco.utilities.bandpass_filter": [[206, 3, 1, "", "get_filter_response"]], "NuRadioReco.utilities.cr_flux": [[207, 3, 1, "", "get_analytic_cr_flux"], [207, 3, 1, "", "get_cr_event_rate"], [207, 3, 1, "", "get_flux_per_energy_bin"], [207, 3, 1, "", "get_interpolated_cr_flux"], [207, 3, 1, "", "get_measured_data"], [207, 3, 1, "", "plot_measured_spectrum"]], "NuRadioReco.utilities.diodeSimulator": [[208, 1, 1, "", "diodeSimulator"]], "NuRadioReco.utilities.diodeSimulator.diodeSimulator": [[208, 2, 1, "", "calculate_noise_parameters"], [208, 2, 1, "", "end"], [208, 2, 1, "", "tunnel_diode"]], "NuRadioReco.utilities.fft": [[209, 3, 1, "", "freq2time"], [209, 3, 1, "", "time2freq"]], "NuRadioReco.utilities.geometryUtilities": [[210, 3, 1, "", "get_efield_in_spherical_coords"], [210, 3, 1, "", "get_fresnel_angle"], [210, 3, 1, "", "get_fresnel_r_p"], [210, 3, 1, "", "get_fresnel_r_s"], [210, 3, 1, "", "get_fresnel_t_p"], [210, 3, 1, "", "get_fresnel_t_s"], [210, 3, 1, "", "get_time_delay_from_direction"], [210, 3, 1, "", "rot_x"], [210, 3, 1, "", "rot_y"], [210, 3, 1, "", "rot_z"]], "NuRadioReco.utilities.ice": [[211, 3, 1, "", "get_refractive_index"]], "NuRadioReco.utilities.interferometry": [[212, 3, 1, "", "fit_axis"], [212, 3, 1, "", "get_intersection_between_line_and_plane"], [212, 3, 1, "", "get_signal"], [212, 3, 1, "", "get_time_shifts"], [212, 3, 1, "", "interfere_traces_interpolation"]], "NuRadioReco.utilities.io_utilities": [[213, 3, 1, "", "read_pickle"]], "NuRadioReco.utilities.logging": [[214, 3, 1, "", "addLoggingLevel"], [214, 3, 1, "", "setup_logger"]], "NuRadioReco.utilities.metaclasses": [[215, 1, 1, "", "Singleton"]], "NuRadioReco.utilities.metaclasses.Singleton": [[215, 2, 1, "", "mro"]], "NuRadioReco.utilities.noise": [[216, 3, 1, "", "rolled_sum_roll"], [216, 3, 1, "", "rolled_sum_slicing"], [216, 3, 1, "", "rolled_sum_take"], [216, 3, 1, "", "rolling_indices"], [216, 1, 1, "", "thermalNoiseGenerator"], [216, 1, 1, "", "thermalNoiseGeneratorPhasedArray"]], "NuRadioReco.utilities.noise.thermalNoiseGenerator": [[216, 2, 1, "", "generate_noise"]], "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray": [[216, 2, 1, "", "generate_noise"], [216, 2, 1, "", "generate_noise2"]], "NuRadioReco.utilities.particle_names": [[217, 3, 1, "", "particle_id"], [217, 3, 1, "", "particle_name"]], "NuRadioReco.utilities.signal_processing": [[218, 3, 1, "", "half_hann_window"]], "NuRadioReco.utilities.templates": [[219, 1, 1, "", "Templates"]], "NuRadioReco.utilities.templates.Templates": [[219, 2, 1, "", "get_cr_ref_template"], [219, 2, 1, "", "get_cr_ref_templates"], [219, 2, 1, "", "get_nu_ref_template"], [219, 2, 1, "", "get_nu_ref_templates"], [219, 2, 1, "", "get_set_of_cr_templates"], [219, 2, 1, "", "get_set_of_cr_templates_full"], [219, 2, 1, "", "get_set_of_nu_templates"], [219, 2, 1, "", "set_template_directory"]], "NuRadioReco.utilities.timing": [[220, 3, 1, "", "analyze_timing"]], "NuRadioReco.utilities.traceWindows": [[221, 3, 1, "", "get_window_around_maximum"]], "NuRadioReco.utilities.trace_utilities": [[222, 3, 1, "", "apply_butterworth"], [222, 3, 1, "", "butterworth_filter_trace"], [222, 3, 1, "", "delay_trace"], [222, 3, 1, "", "get_channel_voltage_from_efield"], [222, 3, 1, "", "get_efield_antenna_factor"], [222, 3, 1, "", "get_electric_field_energy_fluence"], [222, 3, 1, "", "upsampling_fir"]], "NuRadioReco.utilities.version": [[224, 3, 1, "", "get_NuRadioMC_commit_hash"], [224, 3, 1, "", "get_NuRadioReco_commit_hash"], [224, 3, 1, "", "get_git_commit_hash"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": 0, "nuradiomc": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 54, 62], "workflow": 0, "code": [0, 51, 60, 225], "convent": [0, 1], "how": [0, 57, 232], "write": [0, 227, 232], "docstr": 0, "updat": 0, "version": [0, 2, 224], "number": 0, "depend": [0, 2], "addit": [0, 226], "document": [0, 60, 62, 225, 237, 238], "compil": 0, "head": 0, "text": 0, "list": [0, 59, 232], "link": 0, "cross": 0, "refer": 0, "show": 0, "some": 1, "note": 1, "coordin": [1, 228], "default": 1, "system": [1, 223, 236], "point": 1, "angl": 1, "direct": 1, "unit": [1, 223, 236], "particl": [1, 51, 98, 232], "type": 1, "fourier": [1, 236], "transform": [1, 236], "instal": 2, "nuradioreco": [2, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 237], "requir": 2, "us": [2, 51, 54, 56, 232, 233], "pip": 2, "develop": [2, 57, 232], "pythonpath": 2, "manual": [2, 61, 234], "core": 2, "option": 2, "Not": 2, "packag": [2, 5, 18, 19, 25, 31, 33, 63, 64, 66, 69, 70, 87, 104, 105, 108, 110, 116, 120, 137, 138, 149, 152, 153, 159, 161, 163, 173, 176, 177, 179, 182, 184, 188, 192, 204], "introduct": [3, 4], "evtgen": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "submodul": [5, 18, 19, 25, 31, 33, 63, 64, 66, 70, 87, 104, 105, 108, 110, 116, 120, 138, 149, 152, 153, 159, 161, 163, 173, 176, 177, 179, 182, 184, 188, 192, 204], "nuradiomctoarasim": 6, "modul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 57, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 233, 235], "nuradiopropos": [7, 51], "create_tau_tab": 8, "generate_cylind": 9, "generate_unforc": 10, "gener": [11, 51, 52, 55, 56, 59], "generator_ascii": 12, "generator_skeleton": 13, "hdf5_to_ascii": 14, "proposal_table_manag": 15, "readaraeventlist": 16, "readeventlist_ascii": 17, "signalgen": [18, 19, 20, 21, 22, 23, 24], "subpackag": [18, 63, 104, 137, 152, 176], "arz": [19, 20, 56], "hcrb2017": 21, "askaryan": 22, "emitt": 23, "parametr": 24, "signalprop": [25, 26, 27, 28, 29, 30], "analyticraytrac": 26, "directraytrac": 27, "propag": [28, 57], "propagation_base_class": 29, "radioproparaytrac": 30, "simul": [31, 32, 52, 58, 59], "util": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 236], "veff": 34, "attenu": [35, 54], "cross_sect": 36, "dump_hdf5": 37, "earth_attenu": 38, "flux": 39, "inelast": 40, "medium": 41, "medium_bas": 42, "merge_hdf5": 43, "muon_flux": 44, "plot": 45, "runner": 46, "runner_exampl": 47, "split_hdf5": 48, "hdf5": [49, 50, 55], "output": [49, 50, 52, 55], "structur": [49, 50, 229, 232, 235], "open": [49, 50], "file": [49, 50, 55, 58, 59, 227, 232], "what": [49, 50], "": [49, 50, 238], "behind": [49, 50], "attribut": [49, 50, 51], "station": [49, 50, 52, 102, 232], "content": [49, 50, 238], "item": 49, "data": [49, 50, 51, 229, 232], "v2": 50, "2": [50, 52, 55], "event": [51, 59, 93, 227, 231, 232], "cylindr": 51, "volum": [51, 59], "input": [51, 55, 59], "paramet": [51, 97, 232], "set": 51, "atmospher": 51, "muon": 51, "flat": 51, "surfac": 51, "standalon": 51, "exampl": [52, 53, 54, 57, 59], "multi": 52, "coincid": 52, "1": [52, 55], "detector": [52, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 227, 228, 229, 230, 232], "layout": 52, "3": [52, 55], "run": [52, 55, 59], "4": [52, 55, 226], "analyz": 52, "calcul": [53, 57, 59], "expect": 53, "sensit": 53, "ic": [54, 211], "model": [54, 56, 226], "implement": 54, "The": [54, 223, 227, 229], "icemodel": 54, "icemodel_simpl": 54, "class": [54, 227, 229, 232], "radiopropaicewrapp": 54, "avail": [54, 226], "simpl": 54, "radiopropa": [54, 57], "specif": [54, 227], "script": [54, 55, 57], "cluster": 55, "job": 55, "sh": 55, "submit": 55, "merg": 55, "individu": 55, "signal": [56, 57, 227], "electr": [56, 232, 233], "field": [56, 232, 233], "frequenc": 56, "domain": 56, "parameteris": 56, "semi": 56, "analyt": [56, 57], "valid": 56, "time": [56, 220, 229], "same": 56, "shower": [56, 232], "random": 56, "seed": 56, "fft": [56, 209], "normalis": 56, "rai": 57, "trace": 57, "tracer": 57, "gsl": 57, "speed": 57, "boost": 57, "numer": 57, "an": [57, 59], "path": 57, "configur": 58, "steer": 58, "config": [58, 59], "descript": [58, 59, 227, 228, 230], "effect": 59, "more": 59, "detail": 59, "visual": 59, "result": 59, "ara": [64, 65, 105, 106, 107], "analog_compon": [65, 67, 71], "arianna": [66, 67, 68, 108, 109, 177, 178], "preprocessamprespons": 68, "lofar": [69, 110, 111, 112, 113, 114, 115, 153, 154, 155, 156, 157], "rno_g": [70, 71, 72, 73, 74, 116, 117, 118, 159, 160, 179, 180], "db_mongo_read": 72, "db_mongo_writ": 73, "rnog_detector": 74, "amp": 75, "antennapattern": 76, "detector_bas": 78, "detector_sql": 79, "detector_sys_uncertainti": 80, "filterrespons": 81, "generic_detector": 82, "respons": [83, 227], "sql_to_json": 84, "test_detector_db": 85, "visualize_detector": 86, "framework": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "base_show": 88, "base_st": 89, "base_trac": 90, "channel": [91, 232], "electric_field": 92, "hybrid_inform": 94, "hybrid_show": 95, "parameter_seri": 96, "radio_show": 99, "sim_channel": 100, "sim_stat": 101, "trigger": [103, 192, 193, 194, 195, 196, 197, 198, 199, 232], "hardwareresponseincorpor": [106, 109, 118], "triggersimul": [107, 189], "beamformingdirectionfitter_lofar": 111, "beamforming_util": 112, "stationgalacticcalibr": 113, "stationpulsefind": 114, "stationrfifilt": 115, "channelblockoffsetfitt": 117, "analogtodigitalconvert": 119, "base": [120, 121, 223], "beamformingdirectionfitt": 122, "channeladdcabledelai": 123, "channelantennadedispers": 124, "channelbandpassfilt": 125, "channelgalacticnoiseadd": 126, "channelgenericnoiseadd": 127, "channellengthadjust": 128, "channelresampl": 129, "channelsignalreconstructor": 130, "channelstopfilt": 131, "channeltemplatecorrel": 132, "channeltimeoffsetcalcul": 133, "channeltimewindow": 134, "correlationdirectionfitt": 135, "cosmicrayenergyreconstructor": 136, "custom": [137, 138, 139], "deltat": [138, 139], "calculateamplitudeperraysolut": 139, "efieldairtoicepropag": 140, "efieldradiointerferometricreconstruct": 141, "efieldtimedirectionfitt": 142, "efieldtovoltageconvert": 143, "efieldtovoltageconverterperefield": 144, "electricfieldbandpassfilt": 145, "electricfieldresampl": 146, "electricfieldsignalreconstructor": 147, "eventtypeidentifi": 148, "iftelectricfieldreconstructor": [149, 150, 151], "oper": 151, "io": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "rawtbbio": 154, "rawtbbio_metadata": 155, "rawtbbio_util": 156, "readlofardata": 157, "nuradiorecoio": 158, "readrnogdatamattak": 160, "araroot": [161, 162], "readaradata": 162, "corea": [163, 164, 165, 166, 167, 168, 169], "readcorea": 165, "readcoreasshow": 166, "readcoreasst": 167, "readcoreasstationgrid": 168, "simulationselector": 169, "eventread": 170, "eventwrit": 171, "event_parser_factori": 172, "snowshovel": [173, 174, 175], "readariannadata": 174, "readariannadatacalib": 175, "measured_nois": [176, 177, 178, 179, 180, 181], "noiseimporterroot": 178, "noiseimport": 180, "channelmeasurednoiseadd": 181, "neutrinodirectionreconstructor": [182, 183], "voltagetoefieldanalyticconverterforneutrino": 183, "neutrinovertexreconstructor": [184, 185, 186, 187], "create_lookup_t": 185, "neutrino2dvertexreconstructor": 186, "neutrino3dvertexreconstructor": 187, "phasedarrai": [188, 189], "sphericalwavefitt": 190, "templatedirectionfitt": 191, "calc_parameters_for_rnog_surface_trigg": 193, "envelopetrigg": 194, "highlowthreshold": 195, "multihighlowthreshold": 196, "powerintegr": 197, "rnog_surface_trigg": 198, "simplethreshold": 199, "triggertimeadjust": 200, "voltagetoanalyticefieldconvert": 201, "voltagetoefieldconvert": 202, "voltagetoefieldconverterperchannel": 203, "analytic_puls": 205, "bandpass_filt": 206, "cr_flux": 207, "diodesimul": 208, "geometryutil": 210, "interferometri": 212, "io_util": 213, "log": [214, 235], "metaclass": [215, 236], "nois": 216, "particle_nam": 217, "signal_process": 218, "templat": [219, 233], "tracewindow": 221, "trace_util": 222, "standard": 223, "ar": 223, "antenna": [226, 228], "overview": 226, "bicone_v8_infair": 226, "bicone_v8_inffirn": 226, "bicone_v8_inf_n1": 226, "32": 226, "78": 226, "createlpda_100mhz_inffirn": 226, "createlpda_inffirn_n1": 226, "createlpda_100mhz_z1cm_infirn_rg": 226, "createlpda_100mhz_z1cm_infirn_boresighttoboundari": 226, "createlpda_100mhz_z10cm_infirn_rg": 226, "createlpda_100mhz_z1m_infirn_rg": 226, "createlpda_100mhz_z2m_infirn_rg": 226, "createlpda_100mhz_z2m_infirn_backlobe_norg": 226, "createlpda_100mhz_z3m_inair_rg": 226, "createlpda_100mhz_z3m_infirn_boresighttoboundari": 226, "createlpda_100mhz_z3mandlpdalen_infirn_boresighttoboundari": 226, "createlpda_100mhz_z5m_infirn_rg": 226, "createlpda_100mhz_z10m_infirn_rg": 226, "createlpda_100mhz_z100m_infirn_rg": 226, "createlpda_100mhz_z200m_infirn_rg": 226, "createlpda_100mhz_infair": 226, "createlpda_100mhz_z1cm_inair_rg": 226, "createlpda_100mhz_z1m_infirn_rg_v2": 226, "dip7cm_hpol_inffirn": 226, "dip7cm_z260mm_infirn_rg": 226, "dip7cm_z1m_infirn_rg": 226, "dip7cm_z2m_infirn_rg": 226, "dip7cm_z3m_infirn_rg_nearhorizontalhd": 226, "dip7cm_z5m_infirn_rg": 226, "dip7cm_z10m_infirn_rg": 226, "dip7cm_z200m_infirn_rg": 226, "dip7cm_z100m_infirn_rg": 226, "dip7cm_infair_s12": 226, "dip7cm_z270mm_inair": 226, "dip7cm_z1m_inair": 226, "dip7cm_z1m_inair_rg_nearhorizontalhd": 226, "dip7cm_z1m_inair_rg_nearhorizontalhd2": 226, "dip7cm_z2m_inair": 226, "dip7cm_z5m_inair": 226, "rnog_vpol_4inch_center_n1": 226, "73": 226, "rnog_vpol_4inch_half_n1": 226, "rnog_vpol_4inch_wall_n1": 226, "rnog_quadslot_v1_n1": 226, "74": 226, "rnog_quadslot_v2_n1": 226, "rnog_quadslot_v2_rescaled_finefreq": 226, "rnog_quadslot_v3_air_rescaled_to_n1": 226, "skala_inffirn": 226, "rnog_vpol_v1_n1": 226, "fourslot_inffirn": 226, "greenland_vpol_inffirn": 226, "trislot_rnog": 226, "dipole_ara_bicone_infinitefirn": 226, "xfdtd_hpol_150mmhole_n1": 226, "xfdtd_vpol_crossfeed_150mmhole_n1": 226, "78_inffirn": 226, "format": 227, "databas": [227, 229], "json": 227, "dictionari": 227, "chain": 227, "genericdetector": 227, "chang": 227, "read": [227, 232], "viewer": 227, "properti": 228, "tabl": [228, 233, 238], "further": 228, "discuss": 228, "adc": 228, "rno": 229, "g": 229, "interfac": 229, "displai": 231, "nur": 232, "them": 232, "philosophi": 232, "basic": [232, 235], "storag": 232, "For": 232, "radio": 232, "simshow": 232, "simstat": 232, "basetrac": 232, "hybrid": 232, "inform": 232, "vertex": 233, "reconstruct": 233, "creat": 233, "lookup": 233, "2d": 233, "v": 233, "3d": 233, "reconstructor": 233, "singleton": 236, "welcom": 238, "nuradio": 238, "indic": 238}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributing to NuRadioMC": [[0, "contributing-to-nuradiomc"]], "Workflow": [[0, "workflow"]], "Coding conventions": [[0, "coding-conventions"]], "How to": [[0, "how-to"]], "Writing docstrings": [[0, "writing-docstrings"]], "Update the version number / dependencies": [[0, "update-the-version-number-dependencies"]], "Writing additional documentation": [[0, "writing-additional-documentation"]], "Compiling the documentation": [[0, "compiling-the-documentation"]], "Headings and text": [[0, "headings-and-text"]], "Lists": [[0, "lists"]], "Links and cross-references": [[0, "links-and-cross-references"]], "Showing code": [[0, "showing-code"]], "Some notes on conventions": [[1, "some-notes-on-conventions"]], "Coordinates": [[1, "coordinates"]], "Default coordinate system": [[1, "default-coordinate-system"]], "Points": [[1, "points"]], "Angles": [[1, "angles"]], "Directions": [[1, "directions"]], "Units": [[1, "units"]], "Particle types": [[1, "particle-types"]], "Fourier transformations": [[1, "fourier-transformations"]], "Installing NuRadioMC / NuRadioReco": [[2, "installing-nuradiomc-nuradioreco"]], "Requirements": [[2, "requirements"]], "Installation using Pip": [[2, "installation-using-pip"]], "Development version": [[2, "development-version"]], "PYTHONPATH": [[2, "pythonpath"]], "Manual installation": [[2, "manual-installation"]], "Pip-installable dependencies": [[2, "pip-installable-dependencies"]], "Core Dependencies": [[2, "core-dependencies"]], "Optional Dependencies": [[2, "optional-dependencies"]], "Not pip-installable packages": [[2, "not-pip-installable-packages"]], "Introduction": [[3, "introduction"], [4, "introduction"]], "NuRadioMC.EvtGen package": [[5, "module-NuRadioMC.EvtGen"]], "Submodules": [[5, "submodules"], [18, "submodules"], [19, "submodules"], [25, "submodules"], [31, "submodules"], [33, "submodules"], [63, "submodules"], [64, "submodules"], [66, "submodules"], [70, "submodules"], [87, "submodules"], [104, "submodules"], [105, "submodules"], [108, "submodules"], [110, "submodules"], [116, "submodules"], [120, "submodules"], [138, "submodules"], [149, "submodules"], [152, "submodules"], [153, "submodules"], [159, "submodules"], [161, "submodules"], [163, "submodules"], [173, "submodules"], [176, "submodules"], [177, "submodules"], [179, "submodules"], [182, "submodules"], [184, "submodules"], [188, "submodules"], [192, "submodules"], [204, "submodules"]], "NuRadioMC.EvtGen.NuRadioMCtoAraSim module": [[6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "NuRadioMC.EvtGen.NuRadioProposal module": [[7, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "NuRadioMC.EvtGen.create_tau_tab module": [[8, "module-NuRadioMC.EvtGen.create_tau_tab"]], "NuRadioMC.EvtGen.generate_cylinder module": [[9, "module-NuRadioMC.EvtGen.generate_cylinder"]], "NuRadioMC.EvtGen.generate_unforced module": [[10, "module-NuRadioMC.EvtGen.generate_unforced"]], "NuRadioMC.EvtGen.generator module": [[11, "module-NuRadioMC.EvtGen.generator"]], "NuRadioMC.EvtGen.generator_ASCII module": [[12, "module-NuRadioMC.EvtGen.generator_ASCII"]], "NuRadioMC.EvtGen.generator_skeleton module": [[13, "module-NuRadioMC.EvtGen.generator_skeleton"]], "NuRadioMC.EvtGen.hdf5_to_ASCII module": [[14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "NuRadioMC.EvtGen.proposal_table_manager module": [[15, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "NuRadioMC.EvtGen.readARAEventList module": [[16, "module-NuRadioMC.EvtGen.readARAEventList"]], "NuRadioMC.EvtGen.readEventList_ASCII module": [[17, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "NuRadioMC.SignalGen package": [[18, "module-NuRadioMC.SignalGen"]], "Subpackages": [[18, "subpackages"], [63, "subpackages"], [104, "subpackages"], [137, "subpackages"], [152, "subpackages"], [176, "subpackages"]], "NuRadioMC.SignalGen.ARZ package": [[19, "module-NuRadioMC.SignalGen.ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ module": [[20, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "NuRadioMC.SignalGen.HCRB2017 module": [[21, "module-NuRadioMC.SignalGen.HCRB2017"]], "NuRadioMC.SignalGen.askaryan module": [[22, "module-NuRadioMC.SignalGen.askaryan"]], "NuRadioMC.SignalGen.emitter module": [[23, "module-NuRadioMC.SignalGen.emitter"]], "NuRadioMC.SignalGen.parametrizations module": [[24, "module-NuRadioMC.SignalGen.parametrizations"]], "NuRadioMC.SignalProp package": [[25, "module-NuRadioMC.SignalProp"]], "NuRadioMC.SignalProp.analyticraytracing module": [[26, "module-NuRadioMC.SignalProp.analyticraytracing"]], "NuRadioMC.SignalProp.directRayTracing module": [[27, "module-NuRadioMC.SignalProp.directRayTracing"]], "NuRadioMC.SignalProp.propagation module": [[28, "module-NuRadioMC.SignalProp.propagation"]], "NuRadioMC.SignalProp.propagation_base_class module": [[29, "module-NuRadioMC.SignalProp.propagation_base_class"]], "NuRadioMC.SignalProp.radioproparaytracing module": [[30, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "NuRadioMC.simulation package": [[31, "module-NuRadioMC.simulation"]], "NuRadioMC.simulation.simulation module": [[32, "module-NuRadioMC.simulation.simulation"]], "NuRadioMC.utilities package": [[33, "module-NuRadioMC.utilities"]], "NuRadioMC.utilities.Veff module": [[34, "module-NuRadioMC.utilities.Veff"]], "NuRadioMC.utilities.attenuation module": [[35, "module-NuRadioMC.utilities.attenuation"]], "NuRadioMC.utilities.cross_sections module": [[36, "module-NuRadioMC.utilities.cross_sections"]], "NuRadioMC.utilities.dump_hdf5 module": [[37, "module-NuRadioMC.utilities.dump_hdf5"]], "NuRadioMC.utilities.earth_attenuation module": [[38, "module-NuRadioMC.utilities.earth_attenuation"]], "NuRadioMC.utilities.fluxes module": [[39, "module-NuRadioMC.utilities.fluxes"]], "NuRadioMC.utilities.inelasticities module": [[40, "module-NuRadioMC.utilities.inelasticities"]], "NuRadioMC.utilities.medium module": [[41, "module-NuRadioMC.utilities.medium"]], "NuRadioMC.utilities.medium_base module": [[42, "module-NuRadioMC.utilities.medium_base"]], "NuRadioMC.utilities.merge_hdf5 module": [[43, "module-NuRadioMC.utilities.merge_hdf5"]], "NuRadioMC.utilities.muon_flux module": [[44, "nuradiomc-utilities-muon-flux-module"]], "NuRadioMC.utilities.plotting module": [[45, "module-NuRadioMC.utilities.plotting"]], "NuRadioMC.utilities.runner module": [[46, "module-NuRadioMC.utilities.runner"]], "NuRadioMC.utilities.runner_example module": [[47, "module-NuRadioMC.utilities.runner_example"]], "NuRadioMC.utilities.split_hdf5 module": [[48, "module-NuRadioMC.utilities.split_hdf5"]], "HDF5 output structure": [[49, "hdf5-output-structure"]], "Opening the HDF5 file": [[49, "opening-the-hdf5-file"], [50, "opening-the-hdf5-file"]], "What\u2019s behind the HDF5 files": [[49, "what-s-behind-the-hdf5-files"], [50, "what-s-behind-the-hdf5-files"]], "HDF5 structure": [[49, "hdf5-structure"], [50, "hdf5-structure"]], "HDF5 file attributes": [[49, "hdf5-file-attributes"], [50, "hdf5-file-attributes"]], "HDF5 attributes": [[49, "id1"]], "HDF5 station attributes": [[49, "id2"]], "HDF5 file contents": [[49, "hdf5-file-contents"], [50, "hdf5-file-contents"]], "HDF5 items": [[49, "id3"]], "Station data": [[49, "station-data"], [50, "station-data"]], "HDF5 station items": [[49, "id4"]], "HDF5 output structure (v2.2)": [[50, "hdf5-output-structure-v2-2"]], "Event Generation": [[51, "event-generation"]], "Events in a cylindrical volume": [[51, "events-in-a-cylindrical-volume"]], "Input parameters": [[51, "input-parameters"]], "Data sets and attributes": [[51, "data-sets-and-attributes"]], "Particle codes used in NuRadioMC": [[51, "id1"]], "Atmospheric muons generated on a flat surface": [[51, "atmospheric-muons-generated-on-a-flat-surface"]], "NuRadioProposal as a standalone module": [[51, "nuradioproposal-as-a-standalone-module"]], "Example: Multi-station coincidences": [[52, "example-multi-station-coincidences"]], "1. Generation of detector layout": [[52, "generation-of-detector-layout"]], "2. Detector simulation": [[52, "detector-simulation"]], "3. Running the simulation": [[52, "running-the-simulation"]], "4. Analyzing the output": [[52, "analyzing-the-output"]], "Example: Calculating expected sensitivities": [[53, "example-calculating-expected-sensitivities"]], "Ice and attenuation models": [[54, "ice-and-attenuation-models"]], "Ice model implementation": [[54, "ice-model-implementation"]], "The IceModel and IceModel_Simple class": [[54, "the-icemodel-and-icemodel-simple-class"]], "RadioPropaIceWrapper": [[54, "radiopropaicewrapper"]], "Available models in NuRadioMC": [[54, "available-models-in-nuradiomc"]], "Simple ice models": [[54, "simple-ice-models"]], "Simple Ice Models": [[54, "id1"]], "RadioPropa ice models": [[54, "radiopropa-ice-models"]], "Attenuation model": [[54, "attenuation-model"]], "Using specific models": [[54, "using-specific-models"]], "Example script": [[54, "example-script"]], "Running on a cluster": [[55, "running-on-a-cluster"]], "1. Generate input files": [[55, "generate-input-files"]], "2. Generate job *.sh scripts": [[55, "generate-job-sh-scripts"]], "3. Submit jobs to the cluster": [[55, "submit-jobs-to-the-cluster"]], "4. Merge individual hdf5 output files": [[55, "merge-individual-hdf5-output-files"]], "Signal Generation (electric field)": [[56, "signal-generation-electric-field"]], "Frequency-domain parameterisations": [[56, "frequency-domain-parameterisations"]], "ARZ - semi-analytical model": [[56, "arz-semi-analytical-model"]], "Validity of the parameterisations and the ARZ model": [[56, "validity-of-the-parameterisations-and-the-arz-model"]], "Timing": [[56, "timing"]], "Using the same shower. Random seed": [[56, "using-the-same-shower-random-seed"]], "FFT normalisation": [[56, "fft-normalisation"]], "Signal Propagation": [[57, "signal-propagation"]], "Propagation module": [[57, "propagation-module"]], "Ray tracing": [[57, "ray-tracing"]], "Analytical ray tracer": [[57, "analytical-ray-tracer"]], "GSL speed-boost": [[57, "gsl-speed-boost"]], "RadioPropa numerical ray tracer (in development)": [[57, "radiopropa-numerical-ray-tracer-in-development"]], "Example scripts": [[57, "example-scripts"]], "How to calculate an analytic ray path": [[57, "how-to-calculate-an-analytic-ray-path"]], "How to calculate an radiopropa ray path": [[57, "how-to-calculate-an-radiopropa-ray-path"]], "Simulation and configuration": [[58, "simulation-and-configuration"]], "Steering files": [[58, "steering-files"]], "Config files": [[58, "config-files"]], "Detector description": [[58, "detector-description"]], "Detector simulation": [[58, "detector-simulation"]], "Example: Calculating effective volume": [[59, "example-calculating-effective-volume"]], "Run an effective volume simulation": [[59, "run-an-effective-volume-simulation"]], "Generating the input event list": [[59, "generating-the-input-event-list"]], "Running the simulation": [[59, "running-the-simulation"]], "More details: the detector description": [[59, "more-details-the-detector-description"]], "More details: the config file": [[59, "more-details-the-config-file"]], "Visualization of results": [[59, "visualization-of-results"]], "Code Documentation": [[60, "code-documentation"], [225, "code-documentation"]], "Manuals": [[61, "manuals"], [234, "manuals"]], "NuRadioMC Documentation": [[62, "nuradiomc-documentation"]], "NuRadioReco.detector package": [[63, "module-NuRadioReco.detector"]], "NuRadioReco.detector.ARA package": [[64, "module-NuRadioReco.detector.ARA"]], "NuRadioReco.detector.ARA.analog_components module": [[65, "module-NuRadioReco.detector.ARA.analog_components"]], "NuRadioReco.detector.ARIANNA package": [[66, "module-NuRadioReco.detector.ARIANNA"]], "NuRadioReco.detector.ARIANNA.analog_components module": [[67, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module": [[68, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "NuRadioReco.detector.LOFAR package": [[69, "module-NuRadioReco.detector.LOFAR"]], "NuRadioReco.detector.RNO_G package": [[70, "module-NuRadioReco.detector.RNO_G"]], "NuRadioReco.detector.RNO_G.analog_components module": [[71, "module-NuRadioReco.detector.RNO_G.analog_components"]], "NuRadioReco.detector.RNO_G.db_mongo_read module": [[72, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "NuRadioReco.detector.RNO_G.db_mongo_write module": [[73, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "NuRadioReco.detector.RNO_G.rnog_detector module": [[74, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "NuRadioReco.detector.amp module": [[75, "module-NuRadioReco.detector.amp"]], "NuRadioReco.detector.antennapattern module": [[76, "module-NuRadioReco.detector.antennapattern"]], "NuRadioReco.detector.detector module": [[77, "module-NuRadioReco.detector.detector"]], "NuRadioReco.detector.detector_base module": [[78, "module-NuRadioReco.detector.detector_base"]], "NuRadioReco.detector.detector_sql module": [[79, "module-NuRadioReco.detector.detector_sql"]], "NuRadioReco.detector.detector_sys_uncertainties module": [[80, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "NuRadioReco.detector.filterresponse module": [[81, "module-NuRadioReco.detector.filterresponse"]], "NuRadioReco.detector.generic_detector module": [[82, "module-NuRadioReco.detector.generic_detector"]], "NuRadioReco.detector.response module": [[83, "module-NuRadioReco.detector.response"]], "NuRadioReco.detector.sql_to_json module": [[84, "module-NuRadioReco.detector.sql_to_json"]], "NuRadioReco.detector.test_detector_db module": [[85, "module-NuRadioReco.detector.test_detector_db"]], "NuRadioReco.detector.visualize_detector module": [[86, "module-NuRadioReco.detector.visualize_detector"]], "NuRadioReco.framework package": [[87, "module-NuRadioReco.framework"]], "NuRadioReco.framework.base_shower module": [[88, "module-NuRadioReco.framework.base_shower"]], "NuRadioReco.framework.base_station module": [[89, "module-NuRadioReco.framework.base_station"]], "NuRadioReco.framework.base_trace module": [[90, "module-NuRadioReco.framework.base_trace"]], "NuRadioReco.framework.channel module": [[91, "module-NuRadioReco.framework.channel"]], "NuRadioReco.framework.electric_field module": [[92, "module-NuRadioReco.framework.electric_field"]], "NuRadioReco.framework.event module": [[93, "module-NuRadioReco.framework.event"]], "NuRadioReco.framework.hybrid_information module": [[94, "module-NuRadioReco.framework.hybrid_information"]], "NuRadioReco.framework.hybrid_shower module": [[95, "module-NuRadioReco.framework.hybrid_shower"]], "NuRadioReco.framework.parameter_serialization module": [[96, "module-NuRadioReco.framework.parameter_serialization"]], "NuRadioReco.framework.parameters module": [[97, "module-NuRadioReco.framework.parameters"]], "NuRadioReco.framework.particle module": [[98, "module-NuRadioReco.framework.particle"]], "NuRadioReco.framework.radio_shower module": [[99, "module-NuRadioReco.framework.radio_shower"]], "NuRadioReco.framework.sim_channel module": [[100, "module-NuRadioReco.framework.sim_channel"]], "NuRadioReco.framework.sim_station module": [[101, "module-NuRadioReco.framework.sim_station"]], "NuRadioReco.framework.station module": [[102, "module-NuRadioReco.framework.station"]], "NuRadioReco.framework.trigger module": [[103, "module-NuRadioReco.framework.trigger"]], "NuRadioReco.modules package": [[104, "module-NuRadioReco.modules"]], "NuRadioReco.modules.ARA package": [[105, "module-NuRadioReco.modules.ARA"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator module": [[106, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.triggerSimulator module": [[107, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "NuRadioReco.modules.ARIANNA package": [[108, "module-NuRadioReco.modules.ARIANNA"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module": [[109, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "NuRadioReco.modules.LOFAR package": [[110, "module-NuRadioReco.modules.LOFAR"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR module": [[111, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"]], "NuRadioReco.modules.LOFAR.beamforming_utilities module": [[112, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator module": [[113, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"]], "NuRadioReco.modules.LOFAR.stationPulseFinder module": [[114, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"]], "NuRadioReco.modules.LOFAR.stationRFIFilter module": [[115, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"]], "NuRadioReco.modules.RNO_G package": [[116, "module-NuRadioReco.modules.RNO_G"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module": [[117, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module": [[118, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "NuRadioReco.modules.analogToDigitalConverter module": [[119, "module-NuRadioReco.modules.analogToDigitalConverter"]], "NuRadioReco.modules.base package": [[120, "module-NuRadioReco.modules.base"]], "NuRadioReco.modules.base.module module": [[121, "module-NuRadioReco.modules.base.module"]], "NuRadioReco.modules.beamFormingDirectionFitter module": [[122, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "NuRadioReco.modules.channelAddCableDelay module": [[123, "module-NuRadioReco.modules.channelAddCableDelay"]], "NuRadioReco.modules.channelAntennaDedispersion module": [[124, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "NuRadioReco.modules.channelBandPassFilter module": [[125, "module-NuRadioReco.modules.channelBandPassFilter"]], "NuRadioReco.modules.channelGalacticNoiseAdder module": [[126, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder module": [[127, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "NuRadioReco.modules.channelLengthAdjuster module": [[128, "module-NuRadioReco.modules.channelLengthAdjuster"]], "NuRadioReco.modules.channelResampler module": [[129, "module-NuRadioReco.modules.channelResampler"]], "NuRadioReco.modules.channelSignalReconstructor module": [[130, "module-NuRadioReco.modules.channelSignalReconstructor"]], "NuRadioReco.modules.channelStopFilter module": [[131, "module-NuRadioReco.modules.channelStopFilter"]], "NuRadioReco.modules.channelTemplateCorrelation module": [[132, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "NuRadioReco.modules.channelTimeOffsetCalculator module": [[133, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeWindow module": [[134, "module-NuRadioReco.modules.channelTimeWindow"]], "NuRadioReco.modules.correlationDirectionFitter module": [[135, "module-NuRadioReco.modules.correlationDirectionFitter"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor module": [[136, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.custom package": [[137, "module-NuRadioReco.modules.custom"]], "NuRadioReco.modules.custom.deltaT package": [[138, "module-NuRadioReco.modules.custom.deltaT"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module": [[139, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.efieldAirToIcePropagator module": [[140, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction module": [[141, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "NuRadioReco.modules.efieldTimeDirectionFitter module": [[142, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldToVoltageConverter module": [[143, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield module": [[144, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.electricFieldBandPassFilter module": [[145, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldResampler module": [[146, "module-NuRadioReco.modules.electricFieldResampler"]], "NuRadioReco.modules.electricFieldSignalReconstructor module": [[147, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "NuRadioReco.modules.eventTypeIdentifier module": [[148, "module-NuRadioReco.modules.eventTypeIdentifier"]], "NuRadioReco.modules.iftElectricFieldReconstructor package": [[149, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module": [[150, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators module": [[151, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "NuRadioReco.modules.io package": [[152, "module-NuRadioReco.modules.io"]], "NuRadioReco.modules.io.LOFAR package": [[153, "module-NuRadioReco.modules.io.LOFAR"]], "NuRadioReco.modules.io.LOFAR.rawTBBio module": [[154, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata module": [[155, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities module": [[156, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"]], "NuRadioReco.modules.io.LOFAR.readLOFARData module": [[157, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"]], "NuRadioReco.modules.io.NuRadioRecoio module": [[158, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "NuRadioReco.modules.io.RNO_G package": [[159, "module-NuRadioReco.modules.io.RNO_G"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module": [[160, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "NuRadioReco.modules.io.araroot package": [[161, "module-NuRadioReco.modules.io.araroot"]], "NuRadioReco.modules.io.araroot.readARAData module": [[162, "nuradioreco-modules-io-araroot-readaradata-module"]], "NuRadioReco.modules.io.coreas package": [[163, "module-NuRadioReco.modules.io.coreas"]], "NuRadioReco.modules.io.coreas.coreas module": [[164, "module-NuRadioReco.modules.io.coreas.coreas"]], "NuRadioReco.modules.io.coreas.readCoREAS module": [[165, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASShower module": [[166, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASStation module": [[167, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid module": [[168, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "NuRadioReco.modules.io.coreas.simulationSelector module": [[169, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "NuRadioReco.modules.io.eventReader module": [[170, "module-NuRadioReco.modules.io.eventReader"]], "NuRadioReco.modules.io.eventWriter module": [[171, "module-NuRadioReco.modules.io.eventWriter"]], "NuRadioReco.modules.io.event_parser_factory module": [[172, "module-NuRadioReco.modules.io.event_parser_factory"]], "NuRadioReco.modules.io.snowshovel package": [[173, "module-NuRadioReco.modules.io.snowshovel"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData module": [[174, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module": [[175, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "NuRadioReco.modules.measured_noise package": [[176, "module-NuRadioReco.modules.measured_noise"]], "NuRadioReco.modules.measured_noise.ARIANNA package": [[177, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module": [[178, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.RNO_G package": [[179, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module": [[180, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module": [[181, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "NuRadioReco.modules.neutrinoDirectionReconstructor package": [[182, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module": [[183, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"]], "NuRadioReco.modules.neutrinoVertexReconstructor package": [[184, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module": [[185, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module": [[186, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module": [[187, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "NuRadioReco.modules.phasedarray package": [[188, "module-NuRadioReco.modules.phasedarray"]], "NuRadioReco.modules.phasedarray.triggerSimulator module": [[189, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "NuRadioReco.modules.sphericalWaveFitter module": [[190, "module-NuRadioReco.modules.sphericalWaveFitter"]], "NuRadioReco.modules.templateDirectionFitter module": [[191, "module-NuRadioReco.modules.templateDirectionFitter"]], "NuRadioReco.modules.trigger package": [[192, "module-NuRadioReco.modules.trigger"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module": [[193, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "NuRadioReco.modules.trigger.envelopeTrigger module": [[194, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "NuRadioReco.modules.trigger.highLowThreshold module": [[195, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "NuRadioReco.modules.trigger.multiHighLowThreshold module": [[196, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "NuRadioReco.modules.trigger.powerIntegration module": [[197, "module-NuRadioReco.modules.trigger.powerIntegration"]], "NuRadioReco.modules.trigger.rnog_surface_trigger module": [[198, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "NuRadioReco.modules.trigger.simpleThreshold module": [[199, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "NuRadioReco.modules.triggerTimeAdjuster module": [[200, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter module": [[201, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter module": [[202, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel module": [[203, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "NuRadioReco.utilities package": [[204, "module-NuRadioReco.utilities"]], "NuRadioReco.utilities.analytic_pulse module": [[205, "module-NuRadioReco.utilities.analytic_pulse"]], "NuRadioReco.utilities.bandpass_filter module": [[206, "module-NuRadioReco.utilities.bandpass_filter"]], "NuRadioReco.utilities.cr_flux module": [[207, "module-NuRadioReco.utilities.cr_flux"]], "NuRadioReco.utilities.diodeSimulator module": [[208, "module-NuRadioReco.utilities.diodeSimulator"]], "NuRadioReco.utilities.fft module": [[209, "module-NuRadioReco.utilities.fft"]], "NuRadioReco.utilities.geometryUtilities module": [[210, "module-NuRadioReco.utilities.geometryUtilities"]], "NuRadioReco.utilities.ice module": [[211, "module-NuRadioReco.utilities.ice"]], "NuRadioReco.utilities.interferometry module": [[212, "module-NuRadioReco.utilities.interferometry"]], "NuRadioReco.utilities.io_utilities module": [[213, "module-NuRadioReco.utilities.io_utilities"]], "NuRadioReco.utilities.logging module": [[214, "module-NuRadioReco.utilities.logging"]], "NuRadioReco.utilities.metaclasses module": [[215, "module-NuRadioReco.utilities.metaclasses"]], "NuRadioReco.utilities.noise module": [[216, "module-NuRadioReco.utilities.noise"]], "NuRadioReco.utilities.particle_names module": [[217, "module-NuRadioReco.utilities.particle_names"]], "NuRadioReco.utilities.signal_processing module": [[218, "module-NuRadioReco.utilities.signal_processing"]], "NuRadioReco.utilities.templates module": [[219, "module-NuRadioReco.utilities.templates"]], "NuRadioReco.utilities.timing module": [[220, "module-NuRadioReco.utilities.timing"]], "NuRadioReco.utilities.traceWindows module": [[221, "module-NuRadioReco.utilities.traceWindows"]], "NuRadioReco.utilities.trace_utilities module": [[222, "module-NuRadioReco.utilities.trace_utilities"]], "NuRadioReco.utilities.units module": [[223, "module-NuRadioReco.utilities.units"]], "standard system of units": [[223, "standard-system-of-units"]], "The base units are:": [[223, "the-base-units-are"]], "NuRadioReco.utilities.version module": [[224, "module-NuRadioReco.utilities.version"]], "Antenna Models": [[226, "antenna-models"]], "Overview of available Antenna Models": [[226, "overview-of-available-antenna-models"]], "bicone_v8_InfAir": [[226, "bicone-v8-infair"]], "bicone_v8_InfFirn": [[226, "bicone-v8-inffirn"]], "bicone_v8_inf_n1.32": [[226, "bicone-v8-inf-n1-32"]], "bicone_v8_inf_n1.4": [[226, "bicone-v8-inf-n1-4"]], "bicone_v8_inf_n1.78": [[226, "bicone-v8-inf-n1-78"]], "createLPDA_100MHz_InfFirn": [[226, "createlpda-100mhz-inffirn"]], "createLPDA_InfFirn_n1.4": [[226, "createlpda-inffirn-n1-4"]], "createLPDA_100MHz_z1cm_InFirn_RG": [[226, "createlpda-100mhz-z1cm-infirn-rg"]], "createLPDA_100MHz_z1cm_InFirn_BoresightToBoundary": [[226, "createlpda-100mhz-z1cm-infirn-boresighttoboundary"]], "createLPDA_100MHz_z10cm_InFirn_RG": [[226, "createlpda-100mhz-z10cm-infirn-rg"]], "createLPDA_100MHz_z1m_InFirn_RG": [[226, "createlpda-100mhz-z1m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_RG": [[226, "createlpda-100mhz-z2m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_Backlobe_NoRG": [[226, "createlpda-100mhz-z2m-infirn-backlobe-norg"]], "createLPDA_100MHz_z3m_InAir_RG": [[226, "createlpda-100mhz-z3m-inair-rg"]], "createLPDA_100MHz_z3m_InFirn_BoresightToBoundary": [[226, "createlpda-100mhz-z3m-infirn-boresighttoboundary"]], "createLPDA_100MHz_z3mAndLPDALen_InFirn_BoresightToBoundary": [[226, "createlpda-100mhz-z3mandlpdalen-infirn-boresighttoboundary"]], "createLPDA_100MHz_z5m_InFirn_RG": [[226, "createlpda-100mhz-z5m-infirn-rg"]], "createLPDA_100MHz_z10m_InFirn_RG": [[226, "createlpda-100mhz-z10m-infirn-rg"]], "createLPDA_100MHz_z100m_InFirn_RG": [[226, "createlpda-100mhz-z100m-infirn-rg"]], "createLPDA_100MHz_z200m_InFirn_RG": [[226, "createlpda-100mhz-z200m-infirn-rg"]], "createLPDA_100MHz_InfAir": [[226, "createlpda-100mhz-infair"]], "createLPDA_100MHz_z1cm_InAir_RG": [[226, "createlpda-100mhz-z1cm-inair-rg"]], "createLPDA_100MHz_z1m_InFirn_RG_v2": [[226, "createlpda-100mhz-z1m-infirn-rg-v2"]], "dip7cm_hpol_infFirn": [[226, "dip7cm-hpol-inffirn"]], "dip7cm_z260mm_InFirn_RG": [[226, "dip7cm-z260mm-infirn-rg"]], "dip7cm_z1m_InFirn_RG": [[226, "dip7cm-z1m-infirn-rg"]], "dip7cm_z2m_InFirn_RG": [[226, "dip7cm-z2m-infirn-rg"]], "dip7cm_z3m_InFirn_RG_NearHorizontalHD": [[226, "dip7cm-z3m-infirn-rg-nearhorizontalhd"]], "dip7cm_z5m_InFirn_RG": [[226, "dip7cm-z5m-infirn-rg"]], "dip7cm_z10m_InFirn_RG": [[226, "dip7cm-z10m-infirn-rg"]], "dip7cm_z200m_InFirn_RG": [[226, "dip7cm-z200m-infirn-rg"]], "dip7cm_z100m_InFirn_RG": [[226, "dip7cm-z100m-infirn-rg"]], "dip7cm_infAir_s12": [[226, "dip7cm-infair-s12"]], "dip7cm_z270mm_InAir": [[226, "dip7cm-z270mm-inair"]], "dip7cm_z1m_InAir": [[226, "dip7cm-z1m-inair"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD": [[226, "dip7cm-z1m-inair-rg-nearhorizontalhd"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD2": [[226, "dip7cm-z1m-inair-rg-nearhorizontalhd2"]], "dip7cm_z2m_InAir": [[226, "dip7cm-z2m-inair"]], "dip7cm_z5m_InAir": [[226, "dip7cm-z5m-inair"]], "RNOG_vpol_4inch_center_n1.73": [[226, "rnog-vpol-4inch-center-n1-73"]], "RNOG_vpol_4inch_half_n1.73": [[226, "rnog-vpol-4inch-half-n1-73"]], "RNOG_vpol_4inch_wall_n1.73": [[226, "rnog-vpol-4inch-wall-n1-73"]], "RNOG_quadslot_v1_n1.74": [[226, "rnog-quadslot-v1-n1-74"]], "RNOG_quadslot_v2_n1.74": [[226, "rnog-quadslot-v2-n1-74"]], "RNOG_quadslot_v2_rescaled_fineFreq": [[226, "rnog-quadslot-v2-rescaled-finefreq"]], "RNOG_quadslot_v3_air_rescaled_to_n1.74": [[226, "rnog-quadslot-v3-air-rescaled-to-n1-74"]], "SKALA_InfFirn": [[226, "skala-inffirn"]], "Additional Models": [[226, "additional-models"]], "RNOG_vpol_v1_n1.4": [[226, "rnog-vpol-v1-n1-4"]], "RNOG_vpol_v1_n1.73": [[226, "rnog-vpol-v1-n1-73"]], "fourslot_InfFirn": [[226, "fourslot-inffirn"]], "greenland_vpol_InfFirn": [[226, "greenland-vpol-inffirn"]], "trislot_RNOG": [[226, "trislot-rnog"]], "dipole_ARA_bicone_infinitefirn": [[226, "dipole-ara-bicone-infinitefirn"]], "XFDTD_Hpol_150mmHole_n1.78": [[226, "xfdtd-hpol-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78": [[226, "xfdtd-vpol-crossfeed-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78_InfFirn": [[226, "xfdtd-vpol-crossfeed-150mmhole-n1-78-inffirn"]], "Detector Description": [[227, "detector-description"], [230, "detector-description"]], "The Detector Class": [[227, "the-detector-class"]], "Detector Description Formats": [[227, "detector-description-formats"]], "DataBase": [[227, "database"]], "JSON": [[227, "json"]], "Dictionary": [[227, "dictionary"]], "Signal Chain Responses": [[227, "signal-chain-responses"]], "GenericDetector": [[227, "genericdetector"]], "Event-Specific Changes": [[227, "event-specific-changes"]], "Detector Description in Event Files": [[227, "detector-description-in-event-files"]], "Writing the Detector": [[227, "writing-the-detector"]], "Reading the Detector": [[227, "reading-the-detector"]], "Detector Viewer": [[227, "detector-viewer"]], "Properties of Detector Description": [[228, "properties-of-detector-description"]], "Antenna Table": [[228, "antenna-table"]], "Further Discussion on Antenna Coordinates": [[228, "further-discussion-on-antenna-coordinates"]], "ADC Table": [[228, "adc-table"]], "The RNO-G detector class and database interface": [[229, "the-rno-g-detector-class-and-database-interface"]], "Detector time and database time": [[229, "detector-time-and-database-time"]], "Database data structure": [[229, "database-data-structure"]], "Detector class": [[229, "detector-class"]], "Event Display": [[231, "event-display"]], "Data Structure": [[232, "data-structure"]], ".nur Files and How to Use Them": [[232, "nur-files-and-how-to-use-them"]], "Philosophy and Basic Structure": [[232, "philosophy-and-basic-structure"]], "Reading and Writing .nur Files": [[232, "reading-and-writing-nur-files"]], "Parameter Storage": [[232, "parameter-storage"]], "For Developers": [[232, null]], "List of Data Classes": [[232, "list-of-data-classes"]], "Event": [[232, "event"]], "Radio Shower": [[232, "radio-shower"]], "SimShower": [[232, "simshower"]], "Particle": [[232, "particle"]], "Station": [[232, "station"]], "Trigger": [[232, "trigger"]], "SimStation": [[232, "simstation"]], "BaseTrace": [[232, "basetrace"]], "Electric Field": [[232, "electric-field"]], "Channel": [[232, "channel"]], "Hybrid Information": [[232, "hybrid-information"]], "Hybrid Shower": [[232, "hybrid-shower"]], "Hybrid Detector": [[232, "hybrid-detector"]], "Use the Vertex Reconstruction Modules": [[233, "use-the-vertex-reconstruction-modules"]], "Creating Lookup Tables": [[233, "creating-lookup-tables"]], "Creating Electric Field Templates": [[233, "creating-electric-field-templates"]], "2D vs. 3D Vertex Reconstructor": [[233, "d-vs-3d-vertex-reconstructor"]], "Modules": [[235, "modules"]], "Basic Module Structure": [[235, "basic-module-structure"]], "Logging": [[235, "logging"]], "Utilities": [[236, "utilities"]], "Unit System": [[236, "unit-system"]], "Fourier Transformation": [[236, "fourier-transformation"]], "Metaclasses": [[236, "metaclasses"]], "Singleton": [[236, "singleton"]], "NuRadioReco Documentation": [[237, "nuradioreco-documentation"]], "Welcome to NuRadio\u2019s documentation!": [[238, "welcome-to-nuradio-s-documentation"]], "Contents:": [[238, null]], "Indices and tables": [[238, "indices-and-tables"]]}, "indexentries": {"nuradiomc.evtgen": [[5, "module-NuRadioMC.EvtGen"]], "module": [[5, "module-NuRadioMC.EvtGen"], [6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"], [7, "module-NuRadioMC.EvtGen.NuRadioProposal"], [8, "module-NuRadioMC.EvtGen.create_tau_tab"], [9, "module-NuRadioMC.EvtGen.generate_cylinder"], [10, "module-NuRadioMC.EvtGen.generate_unforced"], [11, "module-NuRadioMC.EvtGen.generator"], [12, "module-NuRadioMC.EvtGen.generator_ASCII"], [13, "module-NuRadioMC.EvtGen.generator_skeleton"], [14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"], [15, "module-NuRadioMC.EvtGen.proposal_table_manager"], [16, "module-NuRadioMC.EvtGen.readARAEventList"], [17, "module-NuRadioMC.EvtGen.readEventList_ASCII"], [18, "module-NuRadioMC.SignalGen"], [19, "module-NuRadioMC.SignalGen.ARZ"], [20, "module-NuRadioMC.SignalGen.ARZ.ARZ"], [21, "module-NuRadioMC.SignalGen.HCRB2017"], [22, "module-NuRadioMC.SignalGen.askaryan"], [23, "module-NuRadioMC.SignalGen.emitter"], [24, "module-NuRadioMC.SignalGen.parametrizations"], [25, "module-NuRadioMC.SignalProp"], [26, "module-NuRadioMC.SignalProp.analyticraytracing"], [27, "module-NuRadioMC.SignalProp.directRayTracing"], [28, "module-NuRadioMC.SignalProp.propagation"], [29, "module-NuRadioMC.SignalProp.propagation_base_class"], [30, "module-NuRadioMC.SignalProp.radioproparaytracing"], [31, "module-NuRadioMC.simulation"], [32, "module-NuRadioMC.simulation.simulation"], [33, "module-NuRadioMC.utilities"], [34, "module-NuRadioMC.utilities.Veff"], [35, "module-NuRadioMC.utilities.attenuation"], [36, "module-NuRadioMC.utilities.cross_sections"], [37, "module-NuRadioMC.utilities.dump_hdf5"], [38, "module-NuRadioMC.utilities.earth_attenuation"], [39, "module-NuRadioMC.utilities.fluxes"], [40, "module-NuRadioMC.utilities.inelasticities"], [41, "module-NuRadioMC.utilities.medium"], [42, "module-NuRadioMC.utilities.medium_base"], [43, "module-NuRadioMC.utilities.merge_hdf5"], [45, "module-NuRadioMC.utilities.plotting"], [46, "module-NuRadioMC.utilities.runner"], [47, "module-NuRadioMC.utilities.runner_example"], [48, "module-NuRadioMC.utilities.split_hdf5"], [63, "module-NuRadioReco.detector"], [64, "module-NuRadioReco.detector.ARA"], [65, "module-NuRadioReco.detector.ARA.analog_components"], [66, "module-NuRadioReco.detector.ARIANNA"], [67, "module-NuRadioReco.detector.ARIANNA.analog_components"], [68, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"], [69, "module-NuRadioReco.detector.LOFAR"], [70, "module-NuRadioReco.detector.RNO_G"], [71, "module-NuRadioReco.detector.RNO_G.analog_components"], [72, "module-NuRadioReco.detector.RNO_G.db_mongo_read"], [73, "module-NuRadioReco.detector.RNO_G.db_mongo_write"], [74, "module-NuRadioReco.detector.RNO_G.rnog_detector"], [75, "module-NuRadioReco.detector.amp"], [76, "module-NuRadioReco.detector.antennapattern"], [77, "module-NuRadioReco.detector.detector"], [78, "module-NuRadioReco.detector.detector_base"], [79, "module-NuRadioReco.detector.detector_sql"], [80, "module-NuRadioReco.detector.detector_sys_uncertainties"], [81, "module-NuRadioReco.detector.filterresponse"], [82, "module-NuRadioReco.detector.generic_detector"], [83, "module-NuRadioReco.detector.response"], [84, "module-NuRadioReco.detector.sql_to_json"], [85, "module-NuRadioReco.detector.test_detector_db"], [86, "module-NuRadioReco.detector.visualize_detector"], [87, "module-NuRadioReco.framework"], [88, "module-NuRadioReco.framework.base_shower"], [89, "module-NuRadioReco.framework.base_station"], [90, "module-NuRadioReco.framework.base_trace"], [91, "module-NuRadioReco.framework.channel"], [92, "module-NuRadioReco.framework.electric_field"], [93, "module-NuRadioReco.framework.event"], [94, "module-NuRadioReco.framework.hybrid_information"], [95, "module-NuRadioReco.framework.hybrid_shower"], [96, "module-NuRadioReco.framework.parameter_serialization"], [97, "module-NuRadioReco.framework.parameters"], [98, "module-NuRadioReco.framework.particle"], [99, "module-NuRadioReco.framework.radio_shower"], [100, "module-NuRadioReco.framework.sim_channel"], [101, "module-NuRadioReco.framework.sim_station"], [102, "module-NuRadioReco.framework.station"], [103, "module-NuRadioReco.framework.trigger"], [104, "module-NuRadioReco.modules"], [105, "module-NuRadioReco.modules.ARA"], [106, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"], [107, "module-NuRadioReco.modules.ARA.triggerSimulator"], [108, "module-NuRadioReco.modules.ARIANNA"], [109, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"], [110, "module-NuRadioReco.modules.LOFAR"], [111, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"], [112, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"], [113, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"], [114, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"], [115, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"], [116, "module-NuRadioReco.modules.RNO_G"], [117, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"], [118, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"], [119, "module-NuRadioReco.modules.analogToDigitalConverter"], [120, "module-NuRadioReco.modules.base"], [121, "module-NuRadioReco.modules.base.module"], [122, "module-NuRadioReco.modules.beamFormingDirectionFitter"], [123, "module-NuRadioReco.modules.channelAddCableDelay"], [124, "module-NuRadioReco.modules.channelAntennaDedispersion"], [125, "module-NuRadioReco.modules.channelBandPassFilter"], [126, "module-NuRadioReco.modules.channelGalacticNoiseAdder"], [127, "module-NuRadioReco.modules.channelGenericNoiseAdder"], [128, "module-NuRadioReco.modules.channelLengthAdjuster"], [129, "module-NuRadioReco.modules.channelResampler"], [130, "module-NuRadioReco.modules.channelSignalReconstructor"], [131, "module-NuRadioReco.modules.channelStopFilter"], [132, "module-NuRadioReco.modules.channelTemplateCorrelation"], [133, "module-NuRadioReco.modules.channelTimeOffsetCalculator"], [134, "module-NuRadioReco.modules.channelTimeWindow"], [135, "module-NuRadioReco.modules.correlationDirectionFitter"], [136, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"], [137, "module-NuRadioReco.modules.custom"], [138, "module-NuRadioReco.modules.custom.deltaT"], [139, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"], [140, "module-NuRadioReco.modules.efieldAirToIcePropagator"], [141, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"], [142, "module-NuRadioReco.modules.efieldTimeDirectionFitter"], [143, "module-NuRadioReco.modules.efieldToVoltageConverter"], [144, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"], [145, "module-NuRadioReco.modules.electricFieldBandPassFilter"], [146, "module-NuRadioReco.modules.electricFieldResampler"], [147, "module-NuRadioReco.modules.electricFieldSignalReconstructor"], [148, "module-NuRadioReco.modules.eventTypeIdentifier"], [149, "module-NuRadioReco.modules.iftElectricFieldReconstructor"], [150, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"], [151, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"], [152, "module-NuRadioReco.modules.io"], [153, "module-NuRadioReco.modules.io.LOFAR"], [154, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"], [155, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"], [156, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"], [157, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"], [158, "module-NuRadioReco.modules.io.NuRadioRecoio"], [159, "module-NuRadioReco.modules.io.RNO_G"], [160, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"], [161, "module-NuRadioReco.modules.io.araroot"], [163, "module-NuRadioReco.modules.io.coreas"], [164, "module-NuRadioReco.modules.io.coreas.coreas"], [165, "module-NuRadioReco.modules.io.coreas.readCoREAS"], [166, "module-NuRadioReco.modules.io.coreas.readCoREASShower"], [167, "module-NuRadioReco.modules.io.coreas.readCoREASStation"], [168, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"], [169, "module-NuRadioReco.modules.io.coreas.simulationSelector"], [170, "module-NuRadioReco.modules.io.eventReader"], [171, "module-NuRadioReco.modules.io.eventWriter"], [172, "module-NuRadioReco.modules.io.event_parser_factory"], [173, "module-NuRadioReco.modules.io.snowshovel"], [174, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"], [175, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"], [176, "module-NuRadioReco.modules.measured_noise"], [177, "module-NuRadioReco.modules.measured_noise.ARIANNA"], [178, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"], [179, "module-NuRadioReco.modules.measured_noise.RNO_G"], [180, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"], [181, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"], [182, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"], [183, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"], [184, "module-NuRadioReco.modules.neutrinoVertexReconstructor"], [185, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"], [186, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"], [187, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"], [188, "module-NuRadioReco.modules.phasedarray"], [189, "module-NuRadioReco.modules.phasedarray.triggerSimulator"], [190, "module-NuRadioReco.modules.sphericalWaveFitter"], [191, "module-NuRadioReco.modules.templateDirectionFitter"], [192, "module-NuRadioReco.modules.trigger"], [193, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"], [194, "module-NuRadioReco.modules.trigger.envelopeTrigger"], [195, "module-NuRadioReco.modules.trigger.highLowThreshold"], [196, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"], [197, "module-NuRadioReco.modules.trigger.powerIntegration"], [198, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"], [199, "module-NuRadioReco.modules.trigger.simpleThreshold"], [200, "module-NuRadioReco.modules.triggerTimeAdjuster"], [201, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"], [202, "module-NuRadioReco.modules.voltageToEfieldConverter"], [203, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"], [204, "module-NuRadioReco.utilities"], [205, "module-NuRadioReco.utilities.analytic_pulse"], [206, "module-NuRadioReco.utilities.bandpass_filter"], [207, "module-NuRadioReco.utilities.cr_flux"], [208, "module-NuRadioReco.utilities.diodeSimulator"], [209, "module-NuRadioReco.utilities.fft"], [210, "module-NuRadioReco.utilities.geometryUtilities"], [211, "module-NuRadioReco.utilities.ice"], [212, "module-NuRadioReco.utilities.interferometry"], [213, "module-NuRadioReco.utilities.io_utilities"], [214, "module-NuRadioReco.utilities.logging"], [215, "module-NuRadioReco.utilities.metaclasses"], [216, "module-NuRadioReco.utilities.noise"], [217, "module-NuRadioReco.utilities.particle_names"], [218, "module-NuRadioReco.utilities.signal_processing"], [219, "module-NuRadioReco.utilities.templates"], [220, "module-NuRadioReco.utilities.timing"], [221, "module-NuRadioReco.utilities.traceWindows"], [222, "module-NuRadioReco.utilities.trace_utilities"], [223, "module-NuRadioReco.utilities.units"], [224, "module-NuRadioReco.utilities.version"]], "nuradiomc.evtgen.nuradiomctoarasim": [[6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "nuradiomc.evtgen.nuradioproposal": [[7, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "proposalfunctions (class in nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions"]], "secondaryproperties (class in nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.SecondaryProperties"]], "get_decays() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_decays"]], "get_secondaries_array() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_secondaries_array"]], "is_em_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_em_primary"]], "is_had_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_had_primary"]], "is_shower_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_shower_primary"]], "particle_code() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.particle_code"]], "nuradiomc.evtgen.create_tau_tab": [[8, "module-NuRadioMC.EvtGen.create_tau_tab"]], "nuradiomc.evtgen.generate_cylinder": [[9, "module-NuRadioMC.EvtGen.generate_cylinder"]], "nuradiomc.evtgen.generate_unforced": [[10, "module-NuRadioMC.EvtGen.generate_unforced"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generate_unforced)": [[10, "NuRadioMC.EvtGen.generate_unforced.generate_eventlist_cylinder"]], "nuradiomc.evtgen.generator": [[11, "module-NuRadioMC.EvtGen.generator"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_eventlist_cylinder"]], "generate_surface_muons() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_surface_muons"]], "generate_vertex_positions() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_vertex_positions"]], "get_energies() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_energies"]], "get_energy_from_flux() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_energy_from_flux"]], "get_intersection_volume_neutrino() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_intersection_volume_neutrino"]], "get_product_position_time() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_product_position_time"]], "get_tau_95_length() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_tau_95_length"]], "ice_cube_nu_fit() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit"]], "ice_cube_nu_fit_2022() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit_2022"]], "intersection_box_ray() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.intersection_box_ray"]], "is_in_fiducial_volume() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.is_in_fiducial_volume"]], "load_input_hdf5() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.load_input_hdf5"]], "mask_arrival_azimuth() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.mask_arrival_azimuth"]], "primary_energy_from_deposited() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.primary_energy_from_deposited"]], "set_volume_attributes() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.set_volume_attributes"]], "write_events_to_hdf5() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.write_events_to_hdf5"]], "nuradiomc.evtgen.generator_ascii": [[12, "module-NuRadioMC.EvtGen.generator_ASCII"]], "generate_eventlist() (in module nuradiomc.evtgen.generator_ascii)": [[12, "NuRadioMC.EvtGen.generator_ASCII.generate_eventlist"]], "nuradiomc.evtgen.generator_skeleton": [[13, "module-NuRadioMC.EvtGen.generator_skeleton"]], "generate_my_events() (in module nuradiomc.evtgen.generator_skeleton)": [[13, "NuRadioMC.EvtGen.generator_skeleton.generate_my_events"]], "nuradiomc.evtgen.hdf5_to_ascii": [[14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "nuradiomc.evtgen.proposal_table_manager": [[15, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "download_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.download_proposal_tables"]], "get_compiler() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.get_compiler"]], "produce_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables"]], "produce_proposal_tables_tarball() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables_tarball"]], "nuradiomc.evtgen.readaraeventlist": [[16, "module-NuRadioMC.EvtGen.readARAEventList"]], "convert_to_hdf5() (in module nuradiomc.evtgen.readaraeventlist)": [[16, "NuRadioMC.EvtGen.readARAEventList.convert_to_hdf5"]], "read_ara_eventlist() (in module nuradiomc.evtgen.readaraeventlist)": [[16, "NuRadioMC.EvtGen.readARAEventList.read_ARA_eventlist"]], "nuradiomc.evtgen.readeventlist_ascii": [[17, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "read_eventlist() (in module nuradiomc.evtgen.readeventlist_ascii)": [[17, "NuRadioMC.EvtGen.readEventList_ASCII.read_eventlist"]], "nuradiomc.signalgen": [[18, "module-NuRadioMC.SignalGen"]], "nuradiomc.signalgen.arz": [[19, "module-NuRadioMC.SignalGen.ARZ"]], "arz (class in nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ"]], "arz_tabulated (class in nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated"]], "nuradiomc.signalgen.arz.arz": [[20, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "em_fraction() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.em_fraction"]], "get_last_shower_profile_id() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_last_shower_profile_id"]], "get_shower_profile() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_shower_profile"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_time_trace"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.get_time_trace"]], "get_vector_potential() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential"]], "get_vector_potential() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential"]], "get_vector_potential_fast() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential_fast"]], "get_vector_potential_numba() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential_numba"]], "set_interpolation_factor() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor"]], "set_interpolation_factor2() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor2"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_seed"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.set_seed"]], "theta_to_thetaprime() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.theta_to_thetaprime"]], "thetaprime_to_theta() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.thetaprime_to_theta"]], "nuradiomc.signalgen.hcrb2017": [[21, "module-NuRadioMC.SignalGen.HCRB2017"]], "gauss() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.gauss"]], "get_n_askdeptha() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_N_AskDepthA"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_time_trace"]], "nuradiomc.signalgen.askaryan": [[22, "module-NuRadioMC.SignalGen.askaryan"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.get_time_trace"]], "set_log_level() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.set_log_level"]], "nuradiomc.signalgen.emitter": [[23, "module-NuRadioMC.SignalGen.emitter"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.emitter)": [[23, "NuRadioMC.SignalGen.emitter.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.emitter)": [[23, "NuRadioMC.SignalGen.emitter.get_time_trace"]], "nuradiomc.signalgen.parametrizations": [[24, "module-NuRadioMC.SignalGen.parametrizations"]], "get_parametrizations() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.get_parametrizations"]], "get_time_trace() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.get_time_trace"]], "set_log_level() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.set_log_level"]], "nuradiomc.signalprop": [[25, "module-NuRadioMC.SignalProp"]], "nuradiomc.signalprop.analyticraytracing": [[26, "module-NuRadioMC.SignalProp.analyticraytracing"]], "angular_diff() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.angular_diff"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.apply_propagation_effects"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.apply_propagation_effects"]], "determine_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.determine_solution_type"]], "ds() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.ds"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.find_solutions"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.find_solutions"]], "get_c0_from_log() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C0_from_log"]], "get_c_0_from_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_0_from_angle"]], "get_c_1() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_1"]], "get_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle"]], "get_angle_from_c_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_C_0"]], "get_angle_from_logc_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_logC_0"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_attenuation"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation"]], "get_attenuation_along_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation_along_path"]], "get_c() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_c"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_config"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_config"]], "get_delta_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_delta_y"]], "get_focusing() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_focusing"]], "get_gamma() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_gamma"]], "get_launch_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_angle"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_launch_vector"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_vector"]], "get_n_steps() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_n_steps"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_output_parameters"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_output_parameters"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path_length"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length"]], "get_path_length_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length_analytic"]], "get_path_reflections() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_reflections"]], "get_path_segments() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_segments"]], "get_ray_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_ray_path"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_raytracing_output"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_raytracing_output"]], "get_receive_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_angle"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_receive_vector"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_reflection_angle"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_reflection_angle"]], "get_reflection_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_reflection_point"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_results"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_results"]], "get_segments() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_segments"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_solution_type"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_solution_type"]], "get_surf_skim_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surf_skim_angle"]], "get_surface_pulse() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surface_pulse"]], "get_tof_for_straight_line() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_tof_for_straight_line"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_travel_time"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time"]], "get_travel_time_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time_analytic"]], "get_turning_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_turning_point"]], "get_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y"]], "get_y_diff() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y_diff"]], "get_y_turn() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y_turn"]], "get_y_with_z_mirror() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_y_with_z_mirror"]], "get_z_deep() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_z_deep"]], "get_z_from_n() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_from_n"]], "get_z_mirrored() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_mirrored"]], "get_z_unmirrored() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_unmirrored"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.has_solution"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.has_solution"]], "is_in_refraction_zone() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.is_in_refraction_zone"]], "n() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.n"]], "obj_delta_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.obj_delta_y"]], "obj_delta_y_square() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.obj_delta_y_square"]], "plot_result() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.plot_result"]], "ray_tracing (class in nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing"]], "ray_tracing_2d (class in nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.reset_solutions"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.reset_solutions"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_config"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_config"]], "set_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_solution"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_start_and_end_point"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_start_and_end_point"]], "speed_of_light (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.speed_of_light"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.use_optional_function"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.use_optional_function"]], "nuradiomc.signalprop.directraytracing": [[27, "module-NuRadioMC.SignalProp.directRayTracing"]], "apply_propagation_effects() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.apply_propagation_effects"]], "direct_ray_tracing (class in nuradiomc.signalprop.directraytracing)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing"]], "find_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_config"]], "get_launch_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path"]], "get_path_length() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.has_solution"]], "reset_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.use_optional_function"]], "nuradiomc.signalprop.propagation": [[28, "module-NuRadioMC.SignalProp.propagation"]], "get_propagation_module() (in module nuradiomc.signalprop.propagation)": [[28, "NuRadioMC.SignalProp.propagation.get_propagation_module"]], "nuradiomc.signalprop.propagation_base_class": [[29, "module-NuRadioMC.SignalProp.propagation_base_class"]], "apply_propagation_effects() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.apply_propagation_effects"]], "find_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_attenuation"]], "get_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_config"]], "get_launch_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_output_parameters"]], "get_path() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path"]], "get_path_length() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_results"]], "get_solution_type() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_travel_time"]], "has_solution() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.has_solution"]], "ray_tracing_base (class in nuradiomc.signalprop.propagation_base_class)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base"]], "reset_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.reset_solutions"]], "set_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.use_optional_function"]], "nuradiomc.signalprop.radioproparaytracing": [[30, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "activate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.activate_auto_step_size"]], "apply_propagation_effects() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.apply_propagation_effects"]], "deactivate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.deactivate_auto_step_size"]], "delta_theta_bottom() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_bottom"]], "delta_theta_direct() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_direct"]], "delta_theta_reflective() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_reflective"]], "find_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_config"]], "get_correction_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_path_length"]], "get_correction_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_travel_time"]], "get_focusing() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_focusing"]], "get_frequencies_for_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_frequencies_for_attenuation"]], "get_launch_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path"]], "get_path_candidate() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_candidate"]], "get_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.has_solution"]], "radiopropa_ray_tracing (class in nuradiomc.signalprop.radioproparaytracing)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing"]], "raytracer_iterative() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_iterative"]], "raytracer_minimizer() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_minimizer"]], "reset_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_config"]], "set_cut_viewing_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_cut_viewing_angle"]], "set_iterative_sphere_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_sphere_sizes"]], "set_iterative_step_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_step_sizes"]], "set_maximum_trajectory_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_maximum_trajectory_length"]], "set_minimizer_tolerance() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_minimizer_tolerance"]], "set_shower_axis() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_shower_axis"]], "set_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_solutions"]], "set_start_and_end_point() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.use_optional_function"]], "nuradiomc.simulation": [[31, "module-NuRadioMC.simulation"]], "nuradiomc.simulation.simulation": [[32, "module-NuRadioMC.simulation.simulation"]], "calculate_veff() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.calculate_Veff"]], "get_vrms() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.get_Vrms"]], "get_bandwidth() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.get_bandwidth"]], "get_sampling_rate() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.get_sampling_rate"]], "integrated_channel_response (nuradiomc.simulation.simulation.simulation property)": [[32, "NuRadioMC.simulation.simulation.simulation.integrated_channel_response"]], "merge_config() (in module nuradiomc.simulation.simulation)": [[32, "NuRadioMC.simulation.simulation.merge_config"]], "pretty_time_delta() (in module nuradiomc.simulation.simulation)": [[32, "NuRadioMC.simulation.simulation.pretty_time_delta"]], "run() (nuradiomc.simulation.simulation.simulation method)": [[32, "NuRadioMC.simulation.simulation.simulation.run"]], "simulation (class in nuradiomc.simulation.simulation)": [[32, "NuRadioMC.simulation.simulation.simulation"]], "nuradiomc.utilities": [[33, "module-NuRadioMC.utilities"]], "fc_limits() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.FC_limits"]], "nuradiomc.utilities.veff": [[34, "module-NuRadioMC.utilities.Veff"]], "export() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.export"]], "get_veff_aeff() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff"]], "get_veff_aeff_array() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff_array"]], "get_veff_aeff_single() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single"]], "get_veff_aeff_single_wrapper() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single_wrapper"]], "get_veff_water_equivalent() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_Veff_water_equivalent"]], "get_index() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_index"]], "get_veff_output() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.get_veff_output"]], "remove_duplicate_triggers() (in module nuradiomc.utilities.veff)": [[34, "NuRadioMC.utilities.Veff.remove_duplicate_triggers"]], "nuradiomc.utilities.attenuation": [[35, "module-NuRadioMC.utilities.attenuation"]], "fit_gl1() (in module nuradiomc.utilities.attenuation)": [[35, "NuRadioMC.utilities.attenuation.fit_GL1"]], "get_attenuation_length() (in module nuradiomc.utilities.attenuation)": [[35, "NuRadioMC.utilities.attenuation.get_attenuation_length"]], "get_temperature() (in module nuradiomc.utilities.attenuation)": [[35, "NuRadioMC.utilities.attenuation.get_temperature"]], "nuradiomc.utilities.cross_sections": [[36, "module-NuRadioMC.utilities.cross_sections"]], "csms() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.csms"]], "get_interaction_length() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.get_interaction_length"]], "get_nu_cross_section() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.get_nu_cross_section"]], "param() (in module nuradiomc.utilities.cross_sections)": [[36, "NuRadioMC.utilities.cross_sections.param"]], "nuradiomc.utilities.dump_hdf5": [[37, "module-NuRadioMC.utilities.dump_hdf5"]], "dump() (in module nuradiomc.utilities.dump_hdf5)": [[37, "NuRadioMC.utilities.dump_hdf5.dump"]], "coremantlecrustmodel (class in nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel"]], "nuradiomc.utilities.earth_attenuation": [[38, "module-NuRadioMC.utilities.earth_attenuation"]], "prem (class in nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM"]], "densities (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.densities"]], "densities (nuradiomc.utilities.earth_attenuation.prem attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.densities"]], "density() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.density"]], "density() (nuradiomc.utilities.earth_attenuation.prem method)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.density"]], "earth_radius (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.earth_radius"]], "earth_radius (nuradiomc.utilities.earth_attenuation.prem attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.earth_radius"]], "get_core_mantle_crust_weight() (in module nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.get_core_mantle_crust_weight"]], "get_simple_weight() (in module nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.get_simple_weight"]], "get_weight() (in module nuradiomc.utilities.earth_attenuation)": [[38, "NuRadioMC.utilities.earth_attenuation.get_weight"]], "radii (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.radii"]], "radii (nuradiomc.utilities.earth_attenuation.prem attribute)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.radii"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[38, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.slant_depth"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.prem method)": [[38, "NuRadioMC.utilities.earth_attenuation.PREM.slant_depth"]], "nuradiomc.utilities.fluxes": [[39, "module-NuRadioMC.utilities.fluxes"]], "get_exposure() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_exposure"]], "get_fluence_limit() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_fluence_limit"]], "get_integrated_exposure() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_integrated_exposure"]], "get_limit_e1_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_e1_flux"]], "get_limit_e2_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_e2_flux"]], "get_limit_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_flux"]], "get_limit_from_aeff() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_limit_from_aeff"]], "get_number_of_events_for_flux() (in module nuradiomc.utilities.fluxes)": [[39, "NuRadioMC.utilities.fluxes.get_number_of_events_for_flux"]], "nuradiomc.utilities.inelasticities": [[40, "module-NuRadioMC.utilities.inelasticities"]], "get_ccnc() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.get_ccnc"]], "get_neutrino_inelasticity() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.get_neutrino_inelasticity"]], "inelasticity_tau_decay() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.inelasticity_tau_decay"]], "random_tau_branch() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.random_tau_branch"]], "rejection_sampling() (in module nuradiomc.utilities.inelasticities)": [[40, "NuRadioMC.utilities.inelasticities.rejection_sampling"]], "arasim_southpole (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole"]], "nuradiomc.utilities.medium": [[41, "module-NuRadioMC.utilities.medium"]], "add_reflective_bottom() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.add_reflective_bottom"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_average_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_gradient_of_index_of_refraction"]], "get_ice_model() (in module nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.get_ice_model"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.get_index_of_refraction"]], "greenland_firn (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.greenland_firn"]], "greenland_perturbation (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation"]], "greenland_simple (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.greenland_simple"]], "mooresbay_simple (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple"]], "mooresbay_simple_2 (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[41, "NuRadioMC.utilities.medium.ARAsim_southpole.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[41, "NuRadioMC.utilities.medium.greenland_firn.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[41, "NuRadioMC.utilities.medium.greenland_perturbation.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[41, "NuRadioMC.utilities.medium.greenland_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[41, "NuRadioMC.utilities.medium.mooresbay_simple_2.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[41, "NuRadioMC.utilities.medium.southpole_2015.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[41, "NuRadioMC.utilities.medium.southpole_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[41, "NuRadioMC.utilities.medium.uniform_ice.set_ice_model_radiopropa"]], "southpole_2015 (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.southpole_2015"]], "southpole_simple (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.southpole_simple"]], "uniform_ice (class in nuradiomc.utilities.medium)": [[41, "NuRadioMC.utilities.medium.uniform_ice"]], "icemodel (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.IceModel"]], "icemodelsimple (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple"]], "nuradiomc.utilities.medium_base": [[42, "module-NuRadioMC.utilities.medium_base"]], "radiopropaicewrapper (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper"]], "scalarfieldbuilder (class in nuradiomc.utilities.medium_base)": [[42, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder"]], "add_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.add_module"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.add_reflective_bottom"]], "getgradient() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[42, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getGradient"]], "getvalue() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[42, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getValue"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_average_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_gradient_of_index_of_refraction"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.get_index_of_refraction"]], "get_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_module"]], "get_modules() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_modules"]], "get_scalar_field() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_scalar_field"]], "remove_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.remove_module"]], "replace_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[42, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.replace_module"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[42, "NuRadioMC.utilities.medium_base.IceModel.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[42, "NuRadioMC.utilities.medium_base.IceModelSimple.set_ice_model_radiopropa"]], "nuradiomc.utilities.merge_hdf5": [[43, "module-NuRadioMC.utilities.merge_hdf5"]], "merge2() (in module nuradiomc.utilities.merge_hdf5)": [[43, "NuRadioMC.utilities.merge_hdf5.merge2"]], "nuradiomc.utilities.plotting": [[45, "module-NuRadioMC.utilities.plotting"]], "plot_vertex_distribution() (in module nuradiomc.utilities.plotting)": [[45, "NuRadioMC.utilities.plotting.plot_vertex_distribution"]], "nuradiomc.utilities.runner": [[46, "module-NuRadioMC.utilities.runner"]], "nuradiomcrunner (class in nuradiomc.utilities.runner)": [[46, "NuRadioMC.utilities.runner.NuRadioMCRunner"]], "get_outputfilename() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[46, "NuRadioMC.utilities.runner.NuRadioMCRunner.get_outputfilename"]], "run() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[46, "NuRadioMC.utilities.runner.NuRadioMCRunner.run"]], "nuradiomc.utilities.runner_example": [[47, "module-NuRadioMC.utilities.runner_example"]], "task() (in module nuradiomc.utilities.runner_example)": [[47, "NuRadioMC.utilities.runner_example.task"]], "nuradiomc.utilities.split_hdf5": [[48, "module-NuRadioMC.utilities.split_hdf5"]], "split_hdf5_input_file() (in module nuradiomc.utilities.split_hdf5)": [[48, "NuRadioMC.utilities.split_hdf5.split_hdf5_input_file"]], "nuradioreco.detector": [[63, "module-NuRadioReco.detector"]], "nuradioreco.detector.ara": [[64, "module-NuRadioReco.detector.ARA"]], "nuradioreco.detector.ara.analog_components": [[65, "module-NuRadioReco.detector.ARA.analog_components"]], "get_system_response() (in module nuradioreco.detector.ara.analog_components)": [[65, "NuRadioReco.detector.ARA.analog_components.get_system_response"]], "load_system_response() (in module nuradioreco.detector.ara.analog_components)": [[65, "NuRadioReco.detector.ARA.analog_components.load_system_response"]], "nuradioreco.detector.arianna": [[66, "module-NuRadioReco.detector.ARIANNA"]], "nuradioreco.detector.arianna.analog_components": [[67, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "get_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_amplifier_response"]], "get_available_amplifiers() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_available_amplifiers"]], "get_cable_response() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response"]], "get_cable_response_parametrized() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response_parametrized"]], "load_amp_measurement() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.load_amp_measurement"]], "load_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[67, "NuRadioReco.detector.ARIANNA.analog_components.load_amplifier_response"]], "nuradioreco.detector.arianna.preprocessampresponses": [[68, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "preprocess_300amp() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[68, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.preprocess_300Amp"]], "save_preprocessed_amps() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[68, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.save_preprocessed_Amps"]], "nuradioreco.detector.lofar": [[69, "module-NuRadioReco.detector.LOFAR"]], "nuradioreco.detector.rno_g": [[70, "module-NuRadioReco.detector.RNO_G"]], "nuradioreco.detector.rno_g.analog_components": [[71, "module-NuRadioReco.detector.RNO_G.analog_components"]], "get_available_amplifiers() (in module nuradioreco.detector.rno_g.analog_components)": [[71, "NuRadioReco.detector.RNO_G.analog_components.get_available_amplifiers"]], "load_amp_response() (in module nuradioreco.detector.rno_g.analog_components)": [[71, "NuRadioReco.detector.RNO_G.analog_components.load_amp_response"]], "database (class in nuradioreco.detector.rno_g.db_mongo_read)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database"]], "nuradioreco.detector.rno_g.db_mongo_read": [[72, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "dictionarize_nested_lists() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists"]], "dictionarize_nested_lists_as_tuples() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists_as_tuples"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.query_modification_timestamps_per_station"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[72, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_detector_time"]], "database (class in nuradioreco.detector.rno_g.db_mongo_write)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database"]], "nuradioreco.detector.rno_g.db_mongo_write": [[73, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "add_entry_to_database() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_entry_to_database"]], "add_general_channel_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_channel_info_to_station"]], "add_general_device_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_device_info_to_station"]], "add_general_station_info() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_station_info"]], "add_measurement_protocol() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_measurement_protocol"]], "change_primary_antenna_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_antenna_measurement"]], "change_primary_cable_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_cable_measurement"]], "change_primary_downhole_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_downhole_measurement"]], "change_primary_drab_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_drab_measurement"]], "change_primary_iglu_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_iglu_measurement"]], "change_primary_surface_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_surface_measurement"]], "clone_collection_to_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.clone_collection_to_collection"]], "create_empty_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.create_empty_collection"]], "decommission_a_channel() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_channel"]], "decommission_a_device() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_device"]], "decommission_a_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_station"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.query_modification_timestamps_per_station"]], "rename_database_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.rename_database_collection"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_detector_time"]], "set_not_working() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_not_working"]], "update_current_primary() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[73, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.update_current_primary"]], "detector (class in nuradioreco.detector.rno_g.rnog_detector)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector"]], "nuradioreco.detector.rno_g.rnog_detector": [[74, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "export() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export"]], "export_as_string() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export_as_string"]], "get_absolute_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_absolute_position"]], "get_amplifier_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_amplifier_response"]], "get_antenna_model() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_cable_delay"]], "get_channel() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel"]], "get_channel_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_ids"]], "get_channel_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_orientation"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_signal_chain"]], "get_detector_time() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_detector_time"]], "get_devices() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_devices"]], "get_noise_temperature() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position"]], "get_relative_position_device() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position_device"]], "get_sampling_frequency() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_sampling_frequency"]], "get_signal_chain_components() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_components"]], "get_signal_chain_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_response"]], "get_site() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_site"]], "get_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station"]], "get_station_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station_ids"]], "get_time_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_time_delay"]], "has_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.is_channel_noiseless"]], "update() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[74, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.update"]], "nuradioreco.detector.amp": [[75, "module-NuRadioReco.detector.amp"]], "get_amp_response() (in module nuradioreco.detector.amp)": [[75, "NuRadioReco.detector.amp.get_amp_response"]], "antennapattern (class in nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.AntennaPattern"]], "antennapatternanalytic (class in nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic"]], "antennapatternbase (class in nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.AntennaPatternBase"]], "antennapatternprovider (class in nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.AntennaPatternProvider"]], "nuradioreco.detector.antennapattern": [[76, "module-NuRadioReco.detector.antennapattern"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapattern method)": [[76, "NuRadioReco.detector.antennapattern.AntennaPattern.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[76, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternbase method)": [[76, "NuRadioReco.detector.antennapattern.AntennaPatternBase.get_antenna_response_vectorized"]], "get_group_delay() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.get_group_delay"]], "get_pickle_antenna_response() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.get_pickle_antenna_response"]], "interpolate_linear() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.interpolate_linear"]], "interpolate_linear_vectorized() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.interpolate_linear_vectorized"]], "load_antenna_pattern() (nuradioreco.detector.antennapattern.antennapatternprovider method)": [[76, "NuRadioReco.detector.antennapattern.AntennaPatternProvider.load_antenna_pattern"]], "parametric_phase() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[76, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.parametric_phase"]], "parse_aera_xml_file() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.parse_AERA_XML_file"]], "parse_ara_file() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.parse_ARA_file"]], "parse_hfss_file() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.parse_HFSS_file"]], "parse_lofar_txt_file() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.parse_LOFAR_txt_file"]], "parse_rnog_xfdtd_file() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.parse_RNOG_XFDTD_file"]], "parse_wipld_file() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.parse_WIPLD_file"]], "preprocess_aera() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_AERA"]], "preprocess_ara() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_ARA"]], "preprocess_hfss() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_HFSS"]], "preprocess_lofar_txt() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_LOFAR_txt"]], "preprocess_rnog_xfdtd() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_RNOG_XFDTD"]], "preprocess_wipld() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_WIPLD"]], "preprocess_wipld_old() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_WIPLD_old"]], "preprocess_xfdtd() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.preprocess_XFDTD"]], "save_preprocessed_wipld() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD"]], "save_preprocessed_wipld_forara() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_forARA"]], "save_preprocessed_wipld_old() (in module nuradioreco.detector.antennapattern)": [[76, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_old"]], "detector() (in module nuradioreco.detector.detector)": [[77, "NuRadioReco.detector.detector.Detector"]], "nuradioreco.detector.detector": [[77, "module-NuRadioReco.detector.detector"]], "find_path() (in module nuradioreco.detector.detector)": [[77, "NuRadioReco.detector.detector.find_path"]], "find_reference_entry() (in module nuradioreco.detector.detector)": [[77, "NuRadioReco.detector.detector.find_reference_entry"]], "datetimeserializer (class in nuradioreco.detector.detector_base)": [[78, "NuRadioReco.detector.detector_base.DateTimeSerializer"]], "detectorbase (class in nuradioreco.detector.detector_base)": [[78, "NuRadioReco.detector.detector_base.DetectorBase"]], "nuradioreco.detector.detector_base": [[78, "module-NuRadioReco.detector.detector_base"]], "obj_class (nuradioreco.detector.detector_base.datetimeserializer attribute)": [[78, "NuRadioReco.detector.detector_base.DateTimeSerializer.OBJ_CLASS"]], "buffer_db() (in module nuradioreco.detector.detector_base)": [[78, "NuRadioReco.detector.detector_base.buffer_db"]], "decode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[78, "NuRadioReco.detector.detector_base.DateTimeSerializer.decode"]], "encode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[78, "NuRadioReco.detector.detector_base.DateTimeSerializer.encode"]], "get_absolute_position() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_channel"]], "get_channel_group_id() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_detector_time"]], "get_device() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_device"]], "get_device_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_station"]], "get_station_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.is_channel_noiseless"]], "update() (nuradioreco.detector.detector_base.detectorbase method)": [[78, "NuRadioReco.detector.detector_base.DetectorBase.update"]], "detector (class in nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.Detector"]], "nuradioreco.detector.detector_sql": [[79, "module-NuRadioReco.detector.detector_sql"]], "get_absolute_position_site() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_absolute_position_site"]], "get_amplifier_type() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_amplifier_type"]], "get_amplifier_type() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_antenna_model"]], "get_antenna_model_file() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_antenna_model_file"]], "get_antenna_orientation() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_antenna_type"]], "get_antenna_type() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_cable_delay"]], "get_cable_delays() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_cable_delays"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_cable_type_and_length"]], "get_everything() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_everything"]], "get_everything_channels() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_everything_channels"]], "get_everything_positions() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_everything_positions"]], "get_everything_stations() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_everything_stations"]], "get_number_of_channels() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_number_of_channels"]], "get_number_of_channels() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_relative_position"]], "get_relative_position() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_relative_position"]], "get_relative_positions() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_relative_positions"]], "get_relative_positions() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_relative_positions"]], "get_sampling_frequency() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.get_site"]], "get_station_type() (in module nuradioreco.detector.detector_sql)": [[79, "NuRadioReco.detector.detector_sql.get_station_type"]], "update() (nuradioreco.detector.detector_sql.detector method)": [[79, "NuRadioReco.detector.detector_sql.Detector.update"]], "detectorsysuncertainties (class in nuradioreco.detector.detector_sys_uncertainties)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties"]], "nuradioreco.detector.detector_sys_uncertainties": [[80, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "get_absolute_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel"]], "get_channel_group_id() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_detector_time"]], "get_device() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device"]], "get_device_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station"]], "get_station_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.is_channel_noiseless"]], "reset_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_orientation_offsets"]], "reset_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_position_offsets"]], "set_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_orientation_offsets"]], "set_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_position_offsets"]], "update() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[80, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.update"]], "nuradioreco.detector.filterresponse": [[81, "module-NuRadioReco.detector.filterresponse"]], "get_filter_response() (in module nuradioreco.detector.filterresponse)": [[81, "NuRadioReco.detector.filterresponse.get_filter_response"]], "get_filter_response_mini_circuits() (in module nuradioreco.detector.filterresponse)": [[81, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits"]], "get_filter_response_mini_circuits2() (in module nuradioreco.detector.filterresponse)": [[81, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits2"]], "genericdetector (class in nuradioreco.detector.generic_detector)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector"]], "nuradioreco.detector.generic_detector": [[82, "module-NuRadioReco.detector.generic_detector"]], "add_generic_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.add_generic_station"]], "add_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.add_station_properties_for_event"]], "get_absolute_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel"]], "get_channel_group_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel_ids"]], "get_default_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel"]], "get_default_channel_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel_id"]], "get_default_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station"]], "get_default_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station_id"]], "get_detector_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_detector_time"]], "get_device() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_device"]], "get_device_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_parallel_channels"]], "get_raw_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_channel"]], "get_raw_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_station"]], "get_reference_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station"]], "get_reference_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_id"]], "get_reference_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_ids"]], "get_reference_stations() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_stations"]], "get_relative_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_site"]], "get_site_coordinates() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_site_coordinates"]], "get_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_station"]], "get_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_ids"]], "get_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_properties_for_event"]], "get_unique_time_periods() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.get_unique_time_periods"]], "has_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.is_channel_noiseless"]], "set_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.set_event"]], "update() (nuradioreco.detector.generic_detector.genericdetector method)": [[82, "NuRadioReco.detector.generic_detector.GenericDetector.update"]], "nuradioreco.detector.response": [[83, "module-NuRadioReco.detector.response"]], "response (class in nuradioreco.detector.response)": [[83, "NuRadioReco.detector.response.Response"]], "get_names() (nuradioreco.detector.response.response method)": [[83, "NuRadioReco.detector.response.Response.get_names"]], "get_time_delay() (nuradioreco.detector.response.response method)": [[83, "NuRadioReco.detector.response.Response.get_time_delay"]], "plot() (nuradioreco.detector.response.response method)": [[83, "NuRadioReco.detector.response.Response.plot"]], "subtract_time_delay_from_response() (in module nuradioreco.detector.response)": [[83, "NuRadioReco.detector.response.subtract_time_delay_from_response"]], "nuradioreco.detector.sql_to_json": [[84, "module-NuRadioReco.detector.sql_to_json"]], "nuradioreco.detector.test_detector_db": [[85, "module-NuRadioReco.detector.test_detector_db"]], "nuradioreco.detector.visualize_detector": [[86, "module-NuRadioReco.detector.visualize_detector"]], "nuradioreco.framework": [[87, "module-NuRadioReco.framework"]], "baseshower (class in nuradioreco.framework.base_shower)": [[88, "NuRadioReco.framework.base_shower.BaseShower"]], "nuradioreco.framework.base_shower": [[88, "module-NuRadioReco.framework.base_shower"]], "deserialize() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.deserialize"]], "get_axis() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.get_id"]], "get_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.get_parameter"]], "has_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.has_parameter"]], "serialize() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.serialize"]], "set_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[88, "NuRadioReco.framework.base_shower.BaseShower.set_parameter"]], "basestation (class in nuradioreco.framework.base_station)": [[89, "NuRadioReco.framework.base_station.BaseStation"]], "nuradioreco.framework.base_station": [[89, "module-NuRadioReco.framework.base_station"]], "add_electric_field() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.add_electric_field"]], "deserialize() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameters"]], "get_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields_for_channels"]], "get_id() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_id"]], "get_parameter() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_parameters"]], "get_station_time() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_trigger"]], "get_triggers() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.has_parameter"]], "has_trigger() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.has_trigger"]], "has_triggered() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.is_neutrino"]], "remove_parameter() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.remove_triggers"]], "serialize() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_parameter_error"]], "set_station_time() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_station_time"]], "set_trigger() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_trigger"]], "set_triggered() (nuradioreco.framework.base_station.basestation method)": [[89, "NuRadioReco.framework.base_station.BaseStation.set_triggered"]], "basetrace (class in nuradioreco.framework.base_trace)": [[90, "NuRadioReco.framework.base_trace.BaseTrace"]], "nuradioreco.framework.base_trace": [[90, "module-NuRadioReco.framework.base_trace"]], "add_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.apply_time_shift"]], "deserialize() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.deserialize"]], "get_filtered_trace() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_number_of_samples"]], "get_sampling_rate() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_sampling_rate"]], "get_times() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_times"]], "get_trace() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_trace"]], "get_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.get_trace_start_time"]], "resample() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.resample"]], "serialize() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.set_frequency_spectrum"]], "set_trace() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.set_trace"]], "set_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[90, "NuRadioReco.framework.base_trace.BaseTrace.set_trace_start_time"]], "channel (class in nuradioreco.framework.channel)": [[91, "NuRadioReco.framework.channel.Channel"]], "nuradioreco.framework.channel": [[91, "module-NuRadioReco.framework.channel"]], "add_trace_start_time() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.apply_time_shift"]], "deserialize() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_frequency_spectrum"]], "get_group_id() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_group_id"]], "get_hilbert_envelope() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_id"]], "get_number_of_samples() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_parameter"]], "get_parameters() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_parameters"]], "get_sampling_rate() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_sampling_rate"]], "get_times() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_times"]], "get_trace() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.get_trace_start_time"]], "has_parameter() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.has_parameter"]], "resample() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.resample"]], "serialize() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.set_parameter"]], "set_trace() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.channel.channel method)": [[91, "NuRadioReco.framework.channel.Channel.set_trace_start_time"]], "electricfield (class in nuradioreco.framework.electric_field)": [[92, "NuRadioReco.framework.electric_field.ElectricField"]], "nuradioreco.framework.electric_field": [[92, "module-NuRadioReco.framework.electric_field"]], "add_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.apply_time_shift"]], "deserialize() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.deserialize"]], "get_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_channel_ids"]], "get_filtered_trace() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_parameter"]], "get_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_parameter_error"]], "get_parameters() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_parameters"]], "get_position() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_position"]], "get_ray_tracing_solution_id() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_shower_id"]], "get_times() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_times"]], "get_trace() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_trace"]], "get_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.get_unique_identifier"]], "has_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.has_channel_ids"]], "has_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.has_parameter"]], "has_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.has_parameter_error"]], "resample() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.resample"]], "serialize() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.serialize"]], "set_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.set_channel_ids"]], "set_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.set_parameter"]], "set_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.set_parameter_error"]], "set_position() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.set_position"]], "set_trace() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.set_trace"]], "set_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[92, "NuRadioReco.framework.electric_field.ElectricField.set_trace_start_time"]], "event (class in nuradioreco.framework.event)": [[93, "NuRadioReco.framework.event.Event"]], "nuradioreco.framework.event": [[93, "module-NuRadioReco.framework.event"]], "add_particle() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.add_particle"]], "add_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.add_shower"]], "add_sim_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.add_sim_shower"]], "deserialize() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.deserialize"]], "get_first_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_first_shower"]], "get_first_sim_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_first_sim_shower"]], "get_generator_info() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_generator_info"]], "get_hybrid_information() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_hybrid_information"]], "get_id() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_id"]], "get_interaction_products() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_interaction_products"]], "get_parameter() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_parameter"]], "get_parent() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_parent"]], "get_particle() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_particle"]], "get_particles() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_particles"]], "get_primary() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_primary"]], "get_run_number() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_run_number"]], "get_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_shower"]], "get_showers() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_showers"]], "get_sim_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_sim_shower"]], "get_sim_showers() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_sim_showers"]], "get_station() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_station"]], "get_station_ids() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_station_ids"]], "get_stations() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.get_stations"]], "has_generator_info() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.has_generator_info"]], "has_parameter() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.has_parameter"]], "has_particle() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.has_particle"]], "has_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.has_shower"]], "has_sim_shower() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.has_sim_shower"]], "has_triggered() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.has_triggered"]], "iter_modules() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.iter_modules"]], "register_module_event() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.register_module_event"]], "register_module_station() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.register_module_station"]], "serialize() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.serialize"]], "set_generator_info() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.set_generator_info"]], "set_id() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.set_id"]], "set_parameter() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.set_parameter"]], "set_station() (nuradioreco.framework.event.event method)": [[93, "NuRadioReco.framework.event.Event.set_station"]], "hybridinformation (class in nuradioreco.framework.hybrid_information)": [[94, "NuRadioReco.framework.hybrid_information.HybridInformation"]], "nuradioreco.framework.hybrid_information": [[94, "module-NuRadioReco.framework.hybrid_information"]], "add_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[94, "NuRadioReco.framework.hybrid_information.HybridInformation.add_hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[94, "NuRadioReco.framework.hybrid_information.HybridInformation.deserialize"]], "get_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[94, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_shower"]], "get_hybrid_showers() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[94, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_showers"]], "serialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[94, "NuRadioReco.framework.hybrid_information.HybridInformation.serialize"]], "hybridshower (class in nuradioreco.framework.hybrid_shower)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower"]], "nuradioreco.framework.hybrid_shower": [[95, "module-NuRadioReco.framework.hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.deserialize"]], "get_axis() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.get_coordinatesystem"]], "get_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.get_hybrid_detector"]], "get_id() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.get_id"]], "get_name() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.get_name"]], "get_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.get_parameter"]], "has_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.has_parameter"]], "serialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.serialize"]], "set_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.set_hybrid_detector"]], "set_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[95, "NuRadioReco.framework.hybrid_shower.HybridShower.set_parameter"]], "nuradioreco.framework.parameter_serialization": [[96, "module-NuRadioReco.framework.parameter_serialization"]], "deserialize() (in module nuradioreco.framework.parameter_serialization)": [[96, "NuRadioReco.framework.parameter_serialization.deserialize"]], "deserialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[96, "NuRadioReco.framework.parameter_serialization.deserialize_covariances"]], "serialize() (in module nuradioreco.framework.parameter_serialization)": [[96, "NuRadioReco.framework.parameter_serialization.serialize"]], "serialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[96, "NuRadioReco.framework.parameter_serialization.serialize_covariances"]], "ariannaparameters (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters"]], "emax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.Emax"]], "emin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.Emin"]], "nuradiomc_evtgen_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version"]], "nuradiomc_evtgen_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version_hash"]], "nuradiomc_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version"]], "nuradiomc_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version_hash"]], "nuradioreco.framework.parameters": [[97, "module-NuRadioReco.framework.parameters"]], "p2p_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.P2P_amplitude"]], "snr (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.SNR"]], "area (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.area"]], "atmospheric_model (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.atmospheric_model"]], "azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.azimuth"]], "block_offsets (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.block_offsets"]], "ccnc (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.ccnc"]], "channelparameters (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.channelParameters"]], "channels_max_amplitude (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.channels_max_amplitude"]], "charge_excess_profile_id (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.charge_excess_profile_id"]], "chi2_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.chi2_efield_time_direction_fit"]], "comm_duration (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_duration"]], "comm_period (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_period"]], "core (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.core"]], "cr_azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.cr_azimuth"]], "cr_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.cr_azimuth"]], "cr_dominant_polarisation (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.cr_dominant_polarisation"]], "cr_energy (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.cr_energy"]], "cr_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.cr_energy"]], "cr_energy_em (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.cr_energy_em"]], "cr_energy_em (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.cr_energy_em"]], "cr_spectrum_quadratic_term (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_quadratic_term"]], "cr_spectrum_slope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_slope"]], "cr_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.cr_xcorrelations"]], "cr_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.cr_xcorrelations"]], "cr_xmax (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.cr_xmax"]], "cr_zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.cr_zenith"]], "cr_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.cr_zenith"]], "deposited (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.deposited"]], "dirty_fft_channels (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.dirty_fft_channels"]], "distance_correlations (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.distance_correlations"]], "distance_shower_maximum_geometric (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_geometric"]], "distance_shower_maximum_grammage (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_grammage"]], "dt (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.dt"]], "electricfieldparameters (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters"]], "electromagnetic_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_energy"]], "electromagnetic_radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_radiation_energy"]], "energy (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.energy"]], "energy (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.energy"]], "energy_fluence_ratios (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.energy_fluence_ratios"]], "eventparameters (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.eventParameters"]], "fiducial_rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmax"]], "fiducial_rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmin"]], "fiducial_xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmax"]], "fiducial_xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmin"]], "fiducial_ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymax"]], "fiducial_ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymin"]], "fiducial_zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmax"]], "fiducial_zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmin"]], "flagged_channels (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.flagged_channels"]], "flavor (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.flavor"]], "flavor (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.flavor"]], "flavors (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.flavors"]], "generatorattributes (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.generatorAttributes"]], "hash_nuradiomc (nuradioreco.framework.parameters.eventparameters attribute)": [[97, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioMC"]], "hash_nuradioreco (nuradioreco.framework.parameters.eventparameters attribute)": [[97, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioReco"]], "inelasticity (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.inelasticity"]], "inelasticity (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.inelasticity"]], "interaction_type (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.interaction_type"]], "interaction_type (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.interaction_type"]], "interferometric_core (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.interferometric_core"]], "interferometric_shower_axis (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_axis"]], "interferometric_shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_maximum"]], "internal_clock_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.internal_clock_time"]], "k_l (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.k_L"]], "l1_supression_value (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.l1_supression_value"]], "magnetic_field_rotation (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_rotation"]], "magnetic_field_vector (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_vector"]], "max_amp_antenna (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna"]], "max_amp_antenna_envelope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna_envelope"]], "maximum_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude"]], "maximum_amplitude_envelope (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude_envelope"]], "n_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.n_events"]], "n_interaction (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.n_interaction"]], "n_samples (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.n_samples"]], "ndf_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.ndf_efield_time_direction_fit"]], "noise_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.noise_regions"]], "noise_rms (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.noise_rms"]], "nu_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.nu_azimuth"]], "nu_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.nu_energy"]], "nu_flavor (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.nu_flavor"]], "nu_inttype (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.nu_inttype"]], "nu_vertex (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.nu_vertex"]], "nu_vertex_distance (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.nu_vertex_distance"]], "nu_viewing_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.nu_viewing_angle"]], "nu_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.nu_xcorrelations"]], "nu_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.nu_xcorrelations"]], "nu_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.nu_zenith"]], "observation_level (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.observation_level"]], "parent_id (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.parent_id"]], "parent_id (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.parent_id"]], "particleparameters (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.particleParameters"]], "phimax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.phimax"]], "phimin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.phimin"]], "polarization_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle"]], "polarization_angle_expectation (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle_expectation"]], "primary_particle (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.primary_particle"]], "radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.radiation_energy"]], "ray_path_type (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.ray_path_type"]], "reflection_coefficient_phi (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_phi"]], "reflection_coefficient_theta (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_theta"]], "refractive_index_at_ground (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.refractive_index_at_ground"]], "rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.rmax"]], "rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.rmin"]], "seq_num (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_num"]], "seq_start_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_start_time"]], "seq_stop_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_stop_time"]], "showerparameters (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.showerParameters"]], "shower_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.shower_energy"]], "shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.shower_maximum"]], "signal_energy_fluence (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.signal_energy_fluence"]], "signal_ray_type (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.signal_ray_type"]], "signal_receiving_azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_azimuth"]], "signal_receiving_zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_zenith"]], "signal_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.signal_regions"]], "signal_time (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.signal_time"]], "signal_time (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.signal_time"]], "signal_time_offset (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.signal_time_offset"]], "sim_config (nuradioreco.framework.parameters.eventparameters attribute)": [[97, "NuRadioReco.framework.parameters.eventParameters.sim_config"]], "start_event_id (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.start_event_id"]], "stationparameters (class in nuradioreco.framework.parameters)": [[97, "NuRadioReco.framework.parameters.stationParameters"]], "station_time (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.station_time"]], "thetamax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.thetamax"]], "thetamin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.thetamin"]], "total_number_of_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.total_number_of_events"]], "trigger_thresholds (nuradioreco.framework.parameters.ariannaparameters attribute)": [[97, "NuRadioReco.framework.parameters.ARIANNAParameters.trigger_thresholds"]], "triggered (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.triggered"]], "type (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.type"]], "vertex (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.vertex"]], "vertex (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.vertex"]], "vertex_2d_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.vertex_2D_fit"]], "vertex_time (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.vertex_time"]], "vertex_time (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.vertex_time"]], "viewing_angles (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.viewing_angles"]], "volume (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.volume"]], "weight (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.weight"]], "xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.xmax"]], "xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.xmin"]], "ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.ymax"]], "ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.ymin"]], "zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[97, "NuRadioReco.framework.parameters.channelParameters.zenith"]], "zenith (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[97, "NuRadioReco.framework.parameters.electricFieldParameters.zenith"]], "zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[97, "NuRadioReco.framework.parameters.particleParameters.zenith"]], "zenith (nuradioreco.framework.parameters.showerparameters attribute)": [[97, "NuRadioReco.framework.parameters.showerParameters.zenith"]], "zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.zenith"]], "zenith_cr_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.zenith_cr_templatefit"]], "zenith_nu_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[97, "NuRadioReco.framework.parameters.stationParameters.zenith_nu_templatefit"]], "zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.zmax"]], "zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[97, "NuRadioReco.framework.parameters.generatorAttributes.zmin"]], "nuradioreco.framework.particle": [[98, "module-NuRadioReco.framework.particle"]], "particle (class in nuradioreco.framework.particle)": [[98, "NuRadioReco.framework.particle.Particle"]], "as_hdf5_dict() (nuradioreco.framework.particle.particle method)": [[98, "NuRadioReco.framework.particle.Particle.as_hdf5_dict"]], "deserialize() (nuradioreco.framework.particle.particle method)": [[98, "NuRadioReco.framework.particle.Particle.deserialize"]], "get_id() (nuradioreco.framework.particle.particle method)": [[98, "NuRadioReco.framework.particle.Particle.get_id"]], "get_parameter() (nuradioreco.framework.particle.particle method)": [[98, "NuRadioReco.framework.particle.Particle.get_parameter"]], "has_parameter() (nuradioreco.framework.particle.particle method)": [[98, "NuRadioReco.framework.particle.Particle.has_parameter"]], "serialize() (nuradioreco.framework.particle.particle method)": [[98, "NuRadioReco.framework.particle.Particle.serialize"]], "set_parameter() (nuradioreco.framework.particle.particle method)": [[98, "NuRadioReco.framework.particle.Particle.set_parameter"]], "nuradioreco.framework.radio_shower": [[99, "module-NuRadioReco.framework.radio_shower"]], "radioshower (class in nuradioreco.framework.radio_shower)": [[99, "NuRadioReco.framework.radio_shower.RadioShower"]], "deserialize() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.deserialize"]], "get_axis() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.get_id"]], "get_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.get_parameter"]], "get_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.get_station_ids"]], "has_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.has_parameter"]], "has_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.has_station_ids"]], "serialize() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.serialize"]], "set_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[99, "NuRadioReco.framework.radio_shower.RadioShower.set_parameter"]], "nuradioreco.framework.sim_channel": [[100, "module-NuRadioReco.framework.sim_channel"]], "simchannel (class in nuradioreco.framework.sim_channel)": [[100, "NuRadioReco.framework.sim_channel.SimChannel"]], "add_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.apply_time_shift"]], "deserialize() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_frequency_spectrum"]], "get_group_id() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_group_id"]], "get_hilbert_envelope() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_id"]], "get_number_of_samples() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_parameter"]], "get_parameters() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_parameters"]], "get_ray_tracing_solution_id() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_shower_id"]], "get_times() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_times"]], "get_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.get_unique_identifier"]], "has_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.has_parameter"]], "resample() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.resample"]], "serialize() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.set_parameter"]], "set_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[100, "NuRadioReco.framework.sim_channel.SimChannel.set_trace_start_time"]], "nuradioreco.framework.sim_station": [[101, "module-NuRadioReco.framework.sim_station"]], "simstation (class in nuradioreco.framework.sim_station)": [[101, "NuRadioReco.framework.sim_station.SimStation"]], "add_channel() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.add_channel"]], "add_electric_field() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.add_electric_field"]], "deserialize() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_channel"]], "get_channel_ids() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_channel_ids"]], "get_channels_by_channel_id() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_channel_id"]], "get_channels_by_ray_tracing_id() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_ray_tracing_id"]], "get_channels_by_shower_id() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_shower_id"]], "get_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields_for_channels"]], "get_id() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_magnetic_field_vector"]], "get_parameter() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_parameters"]], "get_ray_tracing_ids() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_ray_tracing_ids"]], "get_shower_ids() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_shower_ids"]], "get_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_simulation_weight"]], "get_station_time() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_trigger"]], "get_triggers() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.has_parameter"]], "has_trigger() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.has_trigger"]], "has_triggered() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.is_neutrino"]], "iter_channels() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.iter_channels"]], "remove_parameter() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.remove_triggers"]], "serialize() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_is_neutrino"]], "set_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_magnetic_field_vector"]], "set_parameter() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_parameter_error"]], "set_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_simulation_weight"]], "set_station_time() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_station_time"]], "set_trigger() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_trigger"]], "set_triggered() (nuradioreco.framework.sim_station.simstation method)": [[101, "NuRadioReco.framework.sim_station.SimStation.set_triggered"]], "nuradioreco.framework.station": [[102, "module-NuRadioReco.framework.station"]], "station (class in nuradioreco.framework.station)": [[102, "NuRadioReco.framework.station.Station"]], "add_channel() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.add_channel"]], "add_electric_field() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.add_electric_field"]], "deserialize() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_channel"]], "get_channel_ids() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_channel_ids"]], "get_electric_fields() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_electric_fields_for_channels"]], "get_id() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_magnetic_field_vector"]], "get_number_of_channels() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_number_of_channels"]], "get_parameter() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_parameter"]], "get_parameter_error() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_parameter_error"]], "get_parameters() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_parameters"]], "get_reference_direction() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_reference_direction"]], "get_reference_reconstruction() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_reference_reconstruction"]], "get_sim_station() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_sim_station"]], "get_station_time() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_trigger"]], "get_triggers() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.has_parameter"]], "has_sim_station() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.has_sim_station"]], "has_trigger() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.has_trigger"]], "has_triggered() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.is_neutrino"]], "iter_channel_group() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.iter_channel_group"]], "iter_channels() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.iter_channels"]], "remove_channel() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.remove_channel"]], "remove_parameter() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.remove_parameter"]], "remove_triggers() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.remove_triggers"]], "serialize() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.serialize"]], "set_arianna_parameter() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_parameter"]], "set_parameter_error() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_parameter_error"]], "set_reference_reconstruction() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_reference_reconstruction"]], "set_sim_station() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_sim_station"]], "set_station_time() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_station_time"]], "set_trigger() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_trigger"]], "set_triggered() (nuradioreco.framework.station.station method)": [[102, "NuRadioReco.framework.station.Station.set_triggered"]], "envelopephasedtrigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger"]], "envelopetrigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger"]], "highlowtrigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger"]], "integratedpowertrigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger"]], "nuradioreco.framework.trigger": [[103, "module-NuRadioReco.framework.trigger"]], "rnogsurfacetrigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger"]], "simplephasedtrigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger"]], "simplethresholdtrigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger"]], "trigger (class in nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.Trigger"]], "deserialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.deserialize"]], "deserialize() (in module nuradioreco.framework.trigger)": [[103, "NuRadioReco.framework.trigger.deserialize"]], "get_name() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.get_name"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.get_pre_trigger_times"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.get_trigger_settings"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.get_trigger_time"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.get_trigger_times"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.get_triggered_channels"]], "get_type() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.get_type"]], "has_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.has_triggered"]], "serialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.serialize"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.set_pre_trigger_times"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.set_trigger_time"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.set_trigger_times"]], "set_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.set_triggered"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[103, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[103, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[103, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[103, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[103, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[103, "NuRadioReco.framework.trigger.Trigger.set_triggered_channels"]], "units (nuradioreco.framework.trigger.rnogsurfacetrigger attribute)": [[103, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.units"]], "nuradioreco.modules": [[104, "module-NuRadioReco.modules"]], "nuradioreco.modules.ara": [[105, "module-NuRadioReco.modules.ARA"]], "nuradioreco.modules.ara.hardwareresponseincorporator": [[106, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[106, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[106, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "hardwareresponseincorporator (class in nuradioreco.modules.ara.hardwareresponseincorporator)": [[106, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[106, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.ara.triggersimulator": [[107, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "end() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[107, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.end"]], "has_triggered() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[107, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.has_triggered"]], "run() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[107, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.ara.triggersimulator)": [[107, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.arianna": [[108, "module-NuRadioReco.modules.ARIANNA"]], "nuradioreco.modules.arianna.hardwareresponseincorporator": [[109, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[109, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[109, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[109, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[109, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[109, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.arianna.hardwareresponseincorporator)": [[109, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[109, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.lofar": [[110, "module-NuRadioReco.modules.LOFAR"]], "nuradioreco.modules.lofar.beamformingdirectionfitter_lofar": [[111, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"]], "beamformingdirectionfitter (class in nuradioreco.modules.lofar.beamformingdirectionfitter_lofar)": [[111, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter"]], "begin() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[111, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.begin"]], "end() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[111, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.end"]], "geometric_delays() (in module nuradioreco.modules.lofar.beamformingdirectionfitter_lofar)": [[111, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.geometric_delays"]], "run() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[111, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.run"]], "geometricdelayfarfield() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[112, "NuRadioReco.modules.LOFAR.beamforming_utilities.GeometricDelayFarField"]], "nuradioreco.modules.lofar.beamforming_utilities": [[112, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"]], "beamformer() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[112, "NuRadioReco.modules.LOFAR.beamforming_utilities.beamformer"]], "geometric_delays() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[112, "NuRadioReco.modules.LOFAR.beamforming_utilities.geometric_delays"]], "mini_beamformer() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[112, "NuRadioReco.modules.LOFAR.beamforming_utilities.mini_beamformer"]], "nuradioreco.modules.lofar.stationgalacticcalibrator": [[113, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"]], "begin() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[113, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.begin"]], "end() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[113, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.end"]], "fourier_series() (in module nuradioreco.modules.lofar.stationgalacticcalibrator)": [[113, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.fourier_series"]], "run() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[113, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.run"]], "stationgalacticcalibrator (class in nuradioreco.modules.lofar.stationgalacticcalibrator)": [[113, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator"]], "nuradioreco.modules.lofar.stationpulsefinder": [[114, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"]], "begin() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[114, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.begin"]], "end() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[114, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.end"]], "find_snr_of_timeseries() (in module nuradioreco.modules.lofar.stationpulsefinder)": [[114, "NuRadioReco.modules.LOFAR.stationPulseFinder.find_snr_of_timeseries"]], "run() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[114, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.run"]], "stationpulsefinder (class in nuradioreco.modules.lofar.stationpulsefinder)": [[114, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder"]], "findrfi_lofar() (in module nuradioreco.modules.lofar.stationrfifilter)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.FindRFI_LOFAR"]], "nuradioreco.modules.lofar.stationrfifilter": [[115, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"]], "begin() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.begin"]], "end() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.end"]], "median_sorted_by_power() (in module nuradioreco.modules.lofar.stationrfifilter)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.median_sorted_by_power"]], "metadata_dir (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter property)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.metadata_dir"]], "num_double_zeros() (in module nuradioreco.modules.lofar.stationrfifilter)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.num_double_zeros"]], "run() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.run"]], "stationrfifilter (class in nuradioreco.modules.lofar.stationrfifilter)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter"]], "station_list (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter property)": [[115, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.station_list"]], "nuradioreco.modules.rno_g": [[116, "module-NuRadioReco.modules.RNO_G"]], "nuradioreco.modules.rno_g.channelblockoffsetfitter": [[117, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "add_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[117, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.add_offsets"]], "channelblockoffsets (class in nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[117, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets"]], "fit_block_offsets() (in module nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[117, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.fit_block_offsets"]], "remove_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[117, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.remove_offsets"]], "nuradioreco.modules.rno_g.hardwareresponseincorporator": [[118, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[118, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[118, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[118, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[118, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[118, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.rno_g.hardwareresponseincorporator)": [[118, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[118, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.analogtodigitalconverter": [[119, "module-NuRadioReco.modules.analogToDigitalConverter"]], "analogtodigitalconverter (class in nuradioreco.modules.analogtodigitalconverter)": [[119, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter"]], "apply_saturation() (in module nuradioreco.modules.analogtodigitalconverter)": [[119, "NuRadioReco.modules.analogToDigitalConverter.apply_saturation"]], "end() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[119, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.end"]], "get_digital_trace() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[119, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.get_digital_trace"]], "perfect_ceiling_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[119, "NuRadioReco.modules.analogToDigitalConverter.perfect_ceiling_comparator"]], "perfect_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[119, "NuRadioReco.modules.analogToDigitalConverter.perfect_comparator"]], "perfect_floor_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[119, "NuRadioReco.modules.analogToDigitalConverter.perfect_floor_comparator"]], "round_to_int() (in module nuradioreco.modules.analogtodigitalconverter)": [[119, "NuRadioReco.modules.analogToDigitalConverter.round_to_int"]], "run() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[119, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.run"]], "nuradioreco.modules.base": [[120, "module-NuRadioReco.modules.base"]], "nuradioreco.modules.base.module": [[121, "module-NuRadioReco.modules.base.module"]], "register_run() (in module nuradioreco.modules.base.module)": [[121, "NuRadioReco.modules.base.module.register_run"]], "setup_logger() (in module nuradioreco.modules.base.module)": [[121, "NuRadioReco.modules.base.module.setup_logger"]], "nuradioreco.modules.beamformingdirectionfitter": [[122, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "beamformingdirectionfitter (class in nuradioreco.modules.beamformingdirectionfitter)": [[122, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter"]], "begin() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[122, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.begin"]], "end() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[122, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.end"]], "get_array_of_channels() (in module nuradioreco.modules.beamformingdirectionfitter)": [[122, "NuRadioReco.modules.beamFormingDirectionFitter.get_array_of_channels"]], "run() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[122, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.run"]], "nuradioreco.modules.channeladdcabledelay": [[123, "module-NuRadioReco.modules.channelAddCableDelay"]], "channeladdcabledelay (class in nuradioreco.modules.channeladdcabledelay)": [[123, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay"]], "run() (nuradioreco.modules.channeladdcabledelay.channeladdcabledelay method)": [[123, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay.run"]], "nuradioreco.modules.channelantennadedispersion": [[124, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "channelantennadedispersion (class in nuradioreco.modules.channelantennadedispersion)": [[124, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion"]], "end() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[124, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.end"]], "run() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[124, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.run"]], "nuradioreco.modules.channelbandpassfilter": [[125, "module-NuRadioReco.modules.channelBandPassFilter"]], "begin() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[125, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.begin"]], "channelbandpassfilter (class in nuradioreco.modules.channelbandpassfilter)": [[125, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter"]], "end() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[125, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.end"]], "get_filter() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[125, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter"]], "get_filter_arguments() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter static method)": [[125, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter_arguments"]], "run() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[125, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.run"]], "test_equality() (in module nuradioreco.modules.channelbandpassfilter)": [[125, "NuRadioReco.modules.channelBandPassFilter.test_equality"]], "nuradioreco.modules.channelgalacticnoiseadder": [[126, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "begin() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[126, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.begin"]], "channelgalacticnoiseadder (class in nuradioreco.modules.channelgalacticnoiseadder)": [[126, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder"]], "run() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[126, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.run"]], "nuradioreco.modules.channelgenericnoiseadder": [[127, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "add_random_phases() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.add_random_phases"]], "bandlimited_noise() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise"]], "bandlimited_noise_from_precalculated_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise_from_precalculated_parameters"]], "begin() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.begin"]], "channelgenericnoiseadder (class in nuradioreco.modules.channelgenericnoiseadder)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder"]], "end() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.end"]], "fftnoise_fullfft() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.fftnoise_fullfft"]], "precalculate_bandlimited_noise_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.precalculate_bandlimited_noise_parameters"]], "run() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[127, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.run"]], "nuradioreco.modules.channellengthadjuster": [[128, "module-NuRadioReco.modules.channelLengthAdjuster"]], "begin() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[128, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.begin"]], "channellengthadjuster (class in nuradioreco.modules.channellengthadjuster)": [[128, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster"]], "end() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[128, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.end"]], "run() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[128, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.run"]], "nuradioreco.modules.channelresampler": [[129, "module-NuRadioReco.modules.channelResampler"]], "begin() (nuradioreco.modules.channelresampler.channelresampler method)": [[129, "NuRadioReco.modules.channelResampler.channelResampler.begin"]], "channelresampler (class in nuradioreco.modules.channelresampler)": [[129, "NuRadioReco.modules.channelResampler.channelResampler"]], "end() (nuradioreco.modules.channelresampler.channelresampler method)": [[129, "NuRadioReco.modules.channelResampler.channelResampler.end"]], "run() (nuradioreco.modules.channelresampler.channelresampler method)": [[129, "NuRadioReco.modules.channelResampler.channelResampler.run"]], "nuradioreco.modules.channelsignalreconstructor": [[130, "module-NuRadioReco.modules.channelSignalReconstructor"]], "begin() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[130, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.begin"]], "channelsignalreconstructor (class in nuradioreco.modules.channelsignalreconstructor)": [[130, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor"]], "end() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[130, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.end"]], "get_snr() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[130, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.get_SNR"]], "run() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[130, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.run"]], "nuradioreco.modules.channelstopfilter": [[131, "module-NuRadioReco.modules.channelStopFilter"]], "begin() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[131, "NuRadioReco.modules.channelStopFilter.channelStopFilter.begin"]], "channelstopfilter (class in nuradioreco.modules.channelstopfilter)": [[131, "NuRadioReco.modules.channelStopFilter.channelStopFilter"]], "end() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[131, "NuRadioReco.modules.channelStopFilter.channelStopFilter.end"]], "run() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[131, "NuRadioReco.modules.channelStopFilter.channelStopFilter.run"]], "nuradioreco.modules.channeltemplatecorrelation": [[132, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "begin() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[132, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.begin"]], "channeltemplatecorrelation (class in nuradioreco.modules.channeltemplatecorrelation)": [[132, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation"]], "end() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[132, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.end"]], "match_sampling() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[132, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.match_sampling"]], "run() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[132, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.run"]], "nuradioreco.modules.channeltimeoffsetcalculator": [[133, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "begin() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[133, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.begin"]], "channeltimeoffsetcalculator (class in nuradioreco.modules.channeltimeoffsetcalculator)": [[133, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator"]], "run() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[133, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.run"]], "nuradioreco.modules.channeltimewindow": [[134, "module-NuRadioReco.modules.channelTimeWindow"]], "begin() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[134, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.begin"]], "channeltimewindow (class in nuradioreco.modules.channeltimewindow)": [[134, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow"]], "end() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[134, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.end"]], "run() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[134, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.run"]], "nuradioreco.modules.correlationdirectionfitter": [[135, "module-NuRadioReco.modules.correlationDirectionFitter"]], "begin() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[135, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.begin"]], "correlationdirectionfitter (class in nuradioreco.modules.correlationdirectionfitter)": [[135, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter"]], "end() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[135, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.end"]], "run() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[135, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.run"]], "nuradioreco.modules.cosmicrayenergyreconstructor": [[136, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "begin() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[136, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.begin"]], "cosmicrayenergyreconstructor (class in nuradioreco.modules.cosmicrayenergyreconstructor)": [[136, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor"]], "run() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[136, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.run"]], "nuradioreco.modules.custom": [[137, "module-NuRadioReco.modules.custom"]], "nuradioreco.modules.custom.deltat": [[138, "module-NuRadioReco.modules.custom.deltaT"]], "nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution": [[139, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "begin() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[139, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.begin"]], "calculateamplitudeperraysolution (class in nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution)": [[139, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution"]], "end() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[139, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.end"]], "run() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[139, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.run"]], "nuradioreco.modules.efieldairtoicepropagator": [[140, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "begin() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[140, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.begin"]], "efieldairtoicepropagator (class in nuradioreco.modules.efieldairtoicepropagator)": [[140, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator"]], "end() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[140, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.end"]], "run() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[140, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.run"]], "nuradioreco.modules.efieldradiointerferometricreconstruction": [[141, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.begin"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.begin"]], "efieldinterferometricaxisreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco"]], "efieldinterferometricdepthreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.end"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.end"]], "find_maximum_in_plane() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.find_maximum_in_plane"]], "get_geometry_and_transformation() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_geometry_and_transformation"]], "get_station_data() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_station_data"]], "logger (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.logger"]], "plot_lateral_cross_section() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.plot_lateral_cross_section"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_interferometric_depth"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.reconstruct_interferometric_depth"]], "reconstruct_shower_axis() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_shower_axis"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.run"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.run"]], "sample_lateral_cross_section() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_lateral_cross_section"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_longitudinal_profile"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.sample_longitudinal_profile"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.update_atmospheric_model_and_refractivity_table"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[141, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.update_atmospheric_model_and_refractivity_table"]], "nuradioreco.modules.efieldtimedirectionfitter": [[142, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "begin() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[142, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.begin"]], "efieldtimedirectionfitter (class in nuradioreco.modules.efieldtimedirectionfitter)": [[142, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter"]], "end() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[142, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.end"]], "run() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[142, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.run"]], "nuradioreco.modules.efieldtovoltageconverter": [[143, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "begin() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[143, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.begin"]], "efieldtovoltageconverter (class in nuradioreco.modules.efieldtovoltageconverter)": [[143, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter"]], "end() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[143, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.end"]], "run() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[143, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.run"]], "nuradioreco.modules.efieldtovoltageconverterperefield": [[144, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "efieldtovoltageconverterperefield (class in nuradioreco.modules.efieldtovoltageconverterperefield)": [[144, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield"]], "end() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[144, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.end"]], "run() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[144, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.run"]], "nuradioreco.modules.electricfieldbandpassfilter": [[145, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "begin() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[145, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.begin"]], "electricfieldbandpassfilter (class in nuradioreco.modules.electricfieldbandpassfilter)": [[145, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter"]], "end() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[145, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.end"]], "run() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[145, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.run"]], "nuradioreco.modules.electricfieldresampler": [[146, "module-NuRadioReco.modules.electricFieldResampler"]], "begin() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[146, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.begin"]], "electricfieldresampler (class in nuradioreco.modules.electricfieldresampler)": [[146, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler"]], "end() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[146, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.end"]], "run() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[146, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.run"]], "nuradioreco.modules.electricfieldsignalreconstructor": [[147, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "begin() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[147, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.begin"]], "electricfieldsignalreconstructor (class in nuradioreco.modules.electricfieldsignalreconstructor)": [[147, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor"]], "end() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[147, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.end"]], "run() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[147, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.run"]], "nuradioreco.modules.eventtypeidentifier": [[148, "module-NuRadioReco.modules.eventTypeIdentifier"]], "begin() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[148, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.begin"]], "eventtypeidentifier (class in nuradioreco.modules.eventtypeidentifier)": [[148, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier"]], "run() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[148, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.run"]], "nuradioreco.modules.iftelectricfieldreconstructor": [[149, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "iftelectricfieldreconstructor (class in nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor)": [[150, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor"]], "nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor": [[150, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "begin() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[150, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.begin"]], "make_priors_plot() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[150, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.make_priors_plot"]], "run() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[150, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.run"]], "domainflipper (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper"]], "inserter (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter"]], "linearslopeoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator"]], "nuradioreco.modules.iftelectricfieldreconstructor.operators": [[151, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "slopespectrumoperator() (in module nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SlopeSpectrumOperator"]], "symmetrizingoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.domainflipper method)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.inserter method)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.linearslopeoperator method)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.symmetrizingoperator method)": [[151, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator.apply"]], "nuradioreco.modules.io": [[152, "module-NuRadioReco.modules.io"]], "nuradioreco.modules.io.lofar": [[153, "module-NuRadioReco.modules.io.LOFAR"]], "multifile_dal1 (class in nuradioreco.modules.io.lofar.rawtbbio)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1"]], "nuradioreco.modules.io.lofar.rawtbbio": [[154, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"]], "tbbdata_dal1 (class in nuradioreco.modules.io.lofar.rawtbbio)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1"]], "close_file() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.close_file"]], "close_file() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.close_file"]], "decode_if_needed() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.decode_if_needed"]], "find_and_set_polarization_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.find_and_set_polarization_delay"]], "get_itrf_antenna_positions() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_ITRF_antenna_positions"]], "get_itrf_antenna_positions() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_ITRF_antenna_positions"]], "get_lofar_centered_positions() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_LOFAR_centered_positions"]], "get_lofar_centered_positions() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_LOFAR_centered_positions"]], "get_all_sample_numbers() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_all_sample_numbers"]], "get_all_sample_numbers() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_all_sample_numbers"]], "get_antenna_names() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_antenna_names"]], "get_antenna_names() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_antenna_names"]], "get_antenna_set() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_antenna_set"]], "get_antenna_set() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_antenna_set"]], "get_data() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_data"]], "get_data() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_data"]], "get_filter_selection() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_filter_selection"]], "get_filter_selection() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_filter_selection"]], "get_full_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_full_data_lengths"]], "get_full_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_full_data_lengths"]], "get_geometric_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_geometric_delays"]], "get_nominal_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_nominal_data_lengths"]], "get_nominal_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_nominal_data_lengths"]], "get_nominal_sample_number() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_nominal_sample_number"]], "get_nominal_sample_number() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_nominal_sample_number"]], "get_sample_frequency() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_sample_frequency"]], "get_sample_frequency() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_sample_frequency"]], "get_station_id() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_station_ID"]], "get_station_id() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_station_ID"]], "get_station_name() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_station_name"]], "get_station_name() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_station_name"]], "get_time_from_second() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_time_from_second"]], "get_timestamp() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timestamp"]], "get_timestamp() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timestamp"]], "get_timestamp_as_datetime() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timestamp_as_datetime"]], "get_timing_callibration_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timing_callibration_delays"]], "get_timing_callibration_delays() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timing_callibration_delays"]], "get_timing_callibration_phases() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timing_callibration_phases"]], "get_timing_callibration_phases() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timing_callibration_phases"]], "get_total_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_total_delays"]], "has_antenna() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.has_antenna"]], "needs_metadata() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.needs_metadata"]], "needs_metadata() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.needs_metadata"]], "read_antenna_delays() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_antenna_delays"]], "read_antenna_pol_flips() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_antenna_pol_flips"]], "read_bad_antennas() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_bad_antennas"]], "read_station_delays() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_station_delays"]], "set_odd_polarization_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_odd_polarization_delay"]], "set_polarization_flips() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_polarization_flips"]], "set_station_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[154, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_station_delay"]], "nuradioreco.modules.io.lofar.rawtbbio_metadata": [[155, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"]], "convertitrftolocal() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.convertITRFToLocal"]], "convertphase_to_timing() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.convertPhase_to_Timing"]], "getclockcorrectionfromparsetaddition() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getClockCorrectionFromParsetAddition"]], "getclockcorrections() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getClockCorrections"]], "getitrfantennaposition() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getItrfAntennaPosition"]], "getstationphasecalibration() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getStationPhaseCalibration"]], "getstationpositions() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getStationPositions"]], "make_antennaid_filter() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.make_antennaID_filter"]], "mapantennasetkeyword() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[155, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.mapAntennasetKeyword"]], "nuradioreco.modules.io.lofar.rawtbbio_utilities": [[156, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"]], "antname_is_even() (in module nuradioreco.modules.io.lofar.rawtbbio_utilities)": [[156, "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.antName_is_even"]], "even_antname_to_odd() (in module nuradioreco.modules.io.lofar.rawtbbio_utilities)": [[156, "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.even_antName_to_odd"]], "nuradioreco.modules.io.lofar.readlofardata": [[157, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"]], "begin() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.begin"]], "check_trace_quality() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.check_trace_quality"]], "close_file() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.close_file"]], "end() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.end"]], "getlofartraces (class in nuradioreco.modules.io.lofar.readlofardata)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces"]], "get_metadata() (in module nuradioreco.modules.io.lofar.readlofardata)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.get_metadata"]], "get_stations() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.get_stations"]], "get_trace() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.get_trace"]], "lora_timestamp_to_blocknumber() (in module nuradioreco.modules.io.lofar.readlofardata)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.lora_timestamp_to_blocknumber"]], "readlofardata (class in nuradioreco.modules.io.lofar.readlofardata)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData"]], "run() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.run"]], "setup_trace_loading() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.setup_trace_loading"]], "tbb_filetag_from_utc() (in module nuradioreco.modules.io.lofar.readlofardata)": [[157, "NuRadioReco.modules.io.LOFAR.readLOFARData.tbb_filetag_from_utc"]], "nuradioreco.modules.io.nuradiorecoio": [[158, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "nuradiorecoio (class in nuradioreco.modules.io.nuradiorecoio)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio"]], "close_files() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.close_files"]], "get_detector() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_detector"]], "get_event() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event"]], "get_event_i() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_i"]], "get_event_ids() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_ids"]], "get_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_events"]], "get_filenames() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_filenames"]], "get_header() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_header"]], "get_n_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_n_events"]], "openfile() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[158, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.openFile"]], "nuradioreco.modules.io.rno_g": [[159, "module-NuRadioReco.modules.io.RNO_G"]], "nuradioreco.modules.io.rno_g.readrnogdatamattak": [[160, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "begin() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.begin"]], "end() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.end"]], "get_event() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event"]], "get_event_by_index() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event_by_index"]], "get_events_information() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_events_information"]], "get_time_offset() (in module nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.get_time_offset"]], "readrnogdata (class in nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData"]], "run() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.run"]], "set_selectors() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[160, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.set_selectors"]], "nuradioreco.modules.io.araroot": [[161, "module-NuRadioReco.modules.io.araroot"]], "nuradioreco.modules.io.coreas": [[163, "module-NuRadioReco.modules.io.coreas"]], "nuradioreco.modules.io.coreas.coreas": [[164, "module-NuRadioReco.modules.io.coreas.coreas"]], "calculate_simulation_weights() (in module nuradioreco.modules.io.coreas.coreas)": [[164, "NuRadioReco.modules.io.coreas.coreas.calculate_simulation_weights"]], "get_angles() (in module nuradioreco.modules.io.coreas.coreas)": [[164, "NuRadioReco.modules.io.coreas.coreas.get_angles"]], "make_sim_shower() (in module nuradioreco.modules.io.coreas.coreas)": [[164, "NuRadioReco.modules.io.coreas.coreas.make_sim_shower"]], "make_sim_station() (in module nuradioreco.modules.io.coreas.coreas)": [[164, "NuRadioReco.modules.io.coreas.coreas.make_sim_station"]], "nuradioreco.modules.io.coreas.readcoreas": [[165, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "begin() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[165, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[165, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreas)": [[165, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[165, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.run"]], "nuradioreco.modules.io.coreas.readcoreasshower": [[166, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "antenna_id() (in module nuradioreco.modules.io.coreas.readcoreasshower)": [[166, "NuRadioReco.modules.io.coreas.readCoREASShower.antenna_id"]], "begin() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[166, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[166, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.end"]], "readcoreasshower (class in nuradioreco.modules.io.coreas.readcoreasshower)": [[166, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower"]], "run() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[166, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.run"]], "nuradioreco.modules.io.coreas.readcoreasstation": [[167, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[167, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[167, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.end"]], "readcoreasstation (class in nuradioreco.modules.io.coreas.readcoreasstation)": [[167, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation"]], "run() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[167, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.run"]], "nuradioreco.modules.io.coreas.readcoreasstationgrid": [[168, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[168, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[168, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreasstationgrid)": [[168, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[168, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.run"]], "nuradioreco.modules.io.coreas.simulationselector": [[169, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "begin() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[169, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.begin"]], "end() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[169, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.end"]], "run() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[169, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.run"]], "simulationselector (class in nuradioreco.modules.io.coreas.simulationselector)": [[169, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector"]], "nuradioreco.modules.io.eventreader": [[170, "module-NuRadioReco.modules.io.eventReader"]], "begin() (nuradioreco.modules.io.eventreader.eventreader method)": [[170, "NuRadioReco.modules.io.eventReader.eventReader.begin"]], "end() (nuradioreco.modules.io.eventreader.eventreader method)": [[170, "NuRadioReco.modules.io.eventReader.eventReader.end"]], "eventreader (class in nuradioreco.modules.io.eventreader)": [[170, "NuRadioReco.modules.io.eventReader.eventReader"]], "get_detector() (nuradioreco.modules.io.eventreader.eventreader method)": [[170, "NuRadioReco.modules.io.eventReader.eventReader.get_detector"]], "get_header() (nuradioreco.modules.io.eventreader.eventreader method)": [[170, "NuRadioReco.modules.io.eventReader.eventReader.get_header"]], "run() (nuradioreco.modules.io.eventreader.eventreader method)": [[170, "NuRadioReco.modules.io.eventReader.eventReader.run"]], "nuradioreco.modules.io.eventwriter": [[171, "module-NuRadioReco.modules.io.eventWriter"]], "begin() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[171, "NuRadioReco.modules.io.eventWriter.eventWriter.begin"]], "end() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[171, "NuRadioReco.modules.io.eventWriter.eventWriter.end"]], "eventwriter (class in nuradioreco.modules.io.eventwriter)": [[171, "NuRadioReco.modules.io.eventWriter.eventWriter"]], "get_header() (in module nuradioreco.modules.io.eventwriter)": [[171, "NuRadioReco.modules.io.eventWriter.get_header"]], "run() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[171, "NuRadioReco.modules.io.eventWriter.eventWriter.run"]], "nuradioreco.modules.io.event_parser_factory": [[172, "module-NuRadioReco.modules.io.event_parser_factory"]], "iter_events_function() (in module nuradioreco.modules.io.event_parser_factory)": [[172, "NuRadioReco.modules.io.event_parser_factory.iter_events_function"]], "scan_files_function() (in module nuradioreco.modules.io.event_parser_factory)": [[172, "NuRadioReco.modules.io.event_parser_factory.scan_files_function"]], "nuradioreco.modules.io.snowshovel": [[173, "module-NuRadioReco.modules.io.snowshovel"]], "nuradioreco.modules.io.snowshovel.readariannadata": [[174, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[174, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[174, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadata)": [[174, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[174, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.run"]], "nuradioreco.modules.io.snowshovel.readariannadatacalib": [[175, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[175, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[175, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadatacalib)": [[175, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[175, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.run"]], "nuradioreco.modules.measured_noise": [[176, "module-NuRadioReco.modules.measured_noise"]], "nuradioreco.modules.measured_noise.arianna": [[177, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "nuradioreco.modules.measured_noise.arianna.noiseimporterroot": [[178, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "begin() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[178, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[178, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.arianna.noiseimporterroot)": [[178, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[178, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.run"]], "nuradioreco.modules.measured_noise.rno_g": [[179, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "nuradioreco.modules.measured_noise.rno_g.noiseimporter": [[180, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "begin() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[180, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[180, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.rno_g.noiseimporter)": [[180, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[180, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.run"]], "nuradioreco.modules.measured_noise.channelmeasurednoiseadder": [[181, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "begin() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[181, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.begin"]], "channelmeasurednoiseadder (class in nuradioreco.modules.measured_noise.channelmeasurednoiseadder)": [[181, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder"]], "end() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[181, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.end"]], "get_noise_station() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[181, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.get_noise_station"]], "run() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[181, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.run"]], "nuradioreco.modules.neutrinodirectionreconstructor": [[182, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos": [[183, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"]], "begin() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[183, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.begin"]], "end() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[183, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.end"]], "run() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[183, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.run"]], "voltagetoanalyticefieldconverterneutrinos (class in nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos)": [[183, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos"]], "nuradioreco.modules.neutrinovertexreconstructor": [[184, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "nuradioreco.modules.neutrinovertexreconstructor.create_lookup_table": [[185, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor": [[186, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.begin"]], "find_ray_type() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_ray_type"]], "find_receiving_zenith() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_receiving_zenith"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_signal_travel_time"]], "neutrino2dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[186, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.run"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor": [[187, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[187, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.begin"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[187, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_array_3d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[187, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_3d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[187, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[187, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_signal_travel_time"]], "neutrino3dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor)": [[187, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[187, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.run"]], "nuradioreco.modules.phasedarray": [[188, "module-NuRadioReco.modules.phasedarray"]], "nuradioreco.modules.phasedarray.triggersimulator": [[189, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "begin() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.begin"]], "calculate_time_delays() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.calculate_time_delays"]], "check_vertical_string() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.check_vertical_string"]], "end() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.end"]], "get_antenna_positions() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_antenna_positions"]], "get_channel_trace_start_time() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_channel_trace_start_time"]], "phase_signals() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phase_signals"]], "phased_trigger() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phased_trigger"]], "power_sum() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.power_sum"]], "run() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.phasedarray.triggersimulator)": [[189, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.sphericalwavefitter": [[190, "module-NuRadioReco.modules.sphericalWaveFitter"]], "begin() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[190, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.begin"]], "end() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[190, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.end"]], "run() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[190, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.run"]], "sphericalwavefitter (class in nuradioreco.modules.sphericalwavefitter)": [[190, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter"]], "nuradioreco.modules.templatedirectionfitter": [[191, "module-NuRadioReco.modules.templateDirectionFitter"]], "begin() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[191, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.begin"]], "end() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[191, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.end"]], "run() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[191, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.run"]], "templatedirectionfitter (class in nuradioreco.modules.templatedirectionfitter)": [[191, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter"]], "nuradioreco.modules.trigger": [[192, "module-NuRadioReco.modules.trigger"]], "nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[193, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "linear_fit() (in module nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger)": [[193, "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.linear_fit"]], "nuradioreco.modules.trigger.envelopetrigger": [[194, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "begin() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[194, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[194, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.end"]], "get_envelope_triggers() (in module nuradioreco.modules.trigger.envelopetrigger)": [[194, "NuRadioReco.modules.trigger.envelopeTrigger.get_envelope_triggers"]], "run() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[194, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.envelopetrigger)": [[194, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator"]], "nuradioreco.modules.trigger.highlowthreshold": [[195, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "begin() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[195, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[195, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.end"]], "get_high_low_triggers() (in module nuradioreco.modules.trigger.highlowthreshold)": [[195, "NuRadioReco.modules.trigger.highLowThreshold.get_high_low_triggers"]], "get_majority_logic() (in module nuradioreco.modules.trigger.highlowthreshold)": [[195, "NuRadioReco.modules.trigger.highLowThreshold.get_majority_logic"]], "run() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[195, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.highlowthreshold)": [[195, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.multihighlowthreshold": [[196, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "begin() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[196, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[196, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.end"]], "get_high_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[196, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_high_triggers"]], "get_low_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[196, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_low_triggers"]], "get_multiple_high_low_trigger() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[196, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_multiple_high_low_trigger"]], "run() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[196, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.multihighlowthreshold)": [[196, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.powerintegration": [[197, "module-NuRadioReco.modules.trigger.powerIntegration"]], "begin() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[197, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[197, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.end"]], "get_power_int_triggers() (in module nuradioreco.modules.trigger.powerintegration)": [[197, "NuRadioReco.modules.trigger.powerIntegration.get_power_int_triggers"]], "run() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[197, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.powerintegration)": [[197, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator"]], "nuradioreco.modules.trigger.rnog_surface_trigger": [[198, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "begin() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[198, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[198, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.end"]], "run() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[198, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.run"]], "schottky_diode() (in module nuradioreco.modules.trigger.rnog_surface_trigger)": [[198, "NuRadioReco.modules.trigger.rnog_surface_trigger.schottky_diode"]], "triggersimulator (class in nuradioreco.modules.trigger.rnog_surface_trigger)": [[198, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator"]], "nuradioreco.modules.trigger.simplethreshold": [[199, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "begin() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[199, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[199, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.end"]], "get_threshold_triggers() (in module nuradioreco.modules.trigger.simplethreshold)": [[199, "NuRadioReco.modules.trigger.simpleThreshold.get_threshold_triggers"]], "run() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[199, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.simplethreshold)": [[199, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator"]], "nuradioreco.modules.triggertimeadjuster": [[200, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "begin() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[200, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.begin"]], "run() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[200, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.run"]], "triggertimeadjuster (class in nuradioreco.modules.triggertimeadjuster)": [[200, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster"]], "nuradioreco.modules.voltagetoanalyticefieldconverter": [[201, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[201, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.begin"]], "covariance() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[201, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.covariance"]], "end() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[201, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.end"]], "run() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[201, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[201, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.stacked_lstsq"]], "voltagetoanalyticefieldconverter (class in nuradioreco.modules.voltagetoanalyticefieldconverter)": [[201, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverter": [[202, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[202, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[202, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.end"]], "get_array_of_channels() (in module nuradioreco.modules.voltagetoefieldconverter)": [[202, "NuRadioReco.modules.voltageToEfieldConverter.get_array_of_channels"]], "run() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[202, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoefieldconverter)": [[202, "NuRadioReco.modules.voltageToEfieldConverter.stacked_lstsq"]], "voltagetoefieldconverter (class in nuradioreco.modules.voltagetoefieldconverter)": [[202, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverterperchannel": [[203, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "begin() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[203, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[203, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.end"]], "run() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[203, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.run"]], "voltagetoefieldconverterperchannel (class in nuradioreco.modules.voltagetoefieldconverterperchannel)": [[203, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel"]], "nuradioreco.utilities": [[204, "module-NuRadioReco.utilities"]], "nuradioreco.utilities.analytic_pulse": [[205, "module-NuRadioReco.utilities.analytic_pulse"]], "amp_from_energy() (in module nuradioreco.utilities.analytic_pulse)": [[205, "NuRadioReco.utilities.analytic_pulse.amp_from_energy"]], "get_analytic_pulse() (in module nuradioreco.utilities.analytic_pulse)": [[205, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse"]], "get_analytic_pulse_freq() (in module nuradioreco.utilities.analytic_pulse)": [[205, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse_freq"]], "nuradioreco.utilities.bandpass_filter": [[206, "module-NuRadioReco.utilities.bandpass_filter"]], "get_filter_response() (in module nuradioreco.utilities.bandpass_filter)": [[206, "NuRadioReco.utilities.bandpass_filter.get_filter_response"]], "nuradioreco.utilities.cr_flux": [[207, "module-NuRadioReco.utilities.cr_flux"]], "get_analytic_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[207, "NuRadioReco.utilities.cr_flux.get_analytic_cr_flux"]], "get_cr_event_rate() (in module nuradioreco.utilities.cr_flux)": [[207, "NuRadioReco.utilities.cr_flux.get_cr_event_rate"]], "get_flux_per_energy_bin() (in module nuradioreco.utilities.cr_flux)": [[207, "NuRadioReco.utilities.cr_flux.get_flux_per_energy_bin"]], "get_interpolated_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[207, "NuRadioReco.utilities.cr_flux.get_interpolated_cr_flux"]], "get_measured_data() (in module nuradioreco.utilities.cr_flux)": [[207, "NuRadioReco.utilities.cr_flux.get_measured_data"]], "plot_measured_spectrum() (in module nuradioreco.utilities.cr_flux)": [[207, "NuRadioReco.utilities.cr_flux.plot_measured_spectrum"]], "nuradioreco.utilities.diodesimulator": [[208, "module-NuRadioReco.utilities.diodeSimulator"]], "calculate_noise_parameters() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[208, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.calculate_noise_parameters"]], "diodesimulator (class in nuradioreco.utilities.diodesimulator)": [[208, "NuRadioReco.utilities.diodeSimulator.diodeSimulator"]], "end() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[208, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.end"]], "tunnel_diode() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[208, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.tunnel_diode"]], "nuradioreco.utilities.fft": [[209, "module-NuRadioReco.utilities.fft"]], "freq2time() (in module nuradioreco.utilities.fft)": [[209, "NuRadioReco.utilities.fft.freq2time"]], "time2freq() (in module nuradioreco.utilities.fft)": [[209, "NuRadioReco.utilities.fft.time2freq"]], "nuradioreco.utilities.geometryutilities": [[210, "module-NuRadioReco.utilities.geometryUtilities"]], "get_efield_in_spherical_coords() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.get_efield_in_spherical_coords"]], "get_fresnel_angle() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.get_fresnel_angle"]], "get_fresnel_r_p() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_p"]], "get_fresnel_r_s() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_s"]], "get_fresnel_t_p() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_p"]], "get_fresnel_t_s() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_s"]], "get_time_delay_from_direction() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.get_time_delay_from_direction"]], "rot_x() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.rot_x"]], "rot_y() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.rot_y"]], "rot_z() (in module nuradioreco.utilities.geometryutilities)": [[210, "NuRadioReco.utilities.geometryUtilities.rot_z"]], "nuradioreco.utilities.ice": [[211, "module-NuRadioReco.utilities.ice"]], "get_refractive_index() (in module nuradioreco.utilities.ice)": [[211, "NuRadioReco.utilities.ice.get_refractive_index"]], "nuradioreco.utilities.interferometry": [[212, "module-NuRadioReco.utilities.interferometry"]], "fit_axis() (in module nuradioreco.utilities.interferometry)": [[212, "NuRadioReco.utilities.interferometry.fit_axis"]], "get_intersection_between_line_and_plane() (in module nuradioreco.utilities.interferometry)": [[212, "NuRadioReco.utilities.interferometry.get_intersection_between_line_and_plane"]], "get_signal() (in module nuradioreco.utilities.interferometry)": [[212, "NuRadioReco.utilities.interferometry.get_signal"]], "get_time_shifts() (in module nuradioreco.utilities.interferometry)": [[212, "NuRadioReco.utilities.interferometry.get_time_shifts"]], "interfere_traces_interpolation() (in module nuradioreco.utilities.interferometry)": [[212, "NuRadioReco.utilities.interferometry.interfere_traces_interpolation"]], "nuradioreco.utilities.io_utilities": [[213, "module-NuRadioReco.utilities.io_utilities"]], "read_pickle() (in module nuradioreco.utilities.io_utilities)": [[213, "NuRadioReco.utilities.io_utilities.read_pickle"]], "nuradioreco.utilities.logging": [[214, "module-NuRadioReco.utilities.logging"]], "addlogginglevel() (in module nuradioreco.utilities.logging)": [[214, "NuRadioReco.utilities.logging.addLoggingLevel"]], "setup_logger() (in module nuradioreco.utilities.logging)": [[214, "NuRadioReco.utilities.logging.setup_logger"]], "nuradioreco.utilities.metaclasses": [[215, "module-NuRadioReco.utilities.metaclasses"]], "singleton (class in nuradioreco.utilities.metaclasses)": [[215, "NuRadioReco.utilities.metaclasses.Singleton"]], "mro() (nuradioreco.utilities.metaclasses.singleton method)": [[215, "NuRadioReco.utilities.metaclasses.Singleton.mro"]], "nuradioreco.utilities.noise": [[216, "module-NuRadioReco.utilities.noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegenerator method)": [[216, "NuRadioReco.utilities.noise.thermalNoiseGenerator.generate_noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[216, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise"]], "generate_noise2() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[216, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise2"]], "rolled_sum_roll() (in module nuradioreco.utilities.noise)": [[216, "NuRadioReco.utilities.noise.rolled_sum_roll"]], "rolled_sum_slicing() (in module nuradioreco.utilities.noise)": [[216, "NuRadioReco.utilities.noise.rolled_sum_slicing"]], "rolled_sum_take() (in module nuradioreco.utilities.noise)": [[216, "NuRadioReco.utilities.noise.rolled_sum_take"]], "rolling_indices() (in module nuradioreco.utilities.noise)": [[216, "NuRadioReco.utilities.noise.rolling_indices"]], "thermalnoisegenerator (class in nuradioreco.utilities.noise)": [[216, "NuRadioReco.utilities.noise.thermalNoiseGenerator"]], "thermalnoisegeneratorphasedarray (class in nuradioreco.utilities.noise)": [[216, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray"]], "nuradioreco.utilities.particle_names": [[217, "module-NuRadioReco.utilities.particle_names"]], "particle_id() (in module nuradioreco.utilities.particle_names)": [[217, "NuRadioReco.utilities.particle_names.particle_id"]], "particle_name() (in module nuradioreco.utilities.particle_names)": [[217, "NuRadioReco.utilities.particle_names.particle_name"]], "nuradioreco.utilities.signal_processing": [[218, "module-NuRadioReco.utilities.signal_processing"]], "half_hann_window() (in module nuradioreco.utilities.signal_processing)": [[218, "NuRadioReco.utilities.signal_processing.half_hann_window"]], "nuradioreco.utilities.templates": [[219, "module-NuRadioReco.utilities.templates"]], "templates (class in nuradioreco.utilities.templates)": [[219, "NuRadioReco.utilities.templates.Templates"]], "get_cr_ref_template() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.get_cr_ref_template"]], "get_cr_ref_templates() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.get_cr_ref_templates"]], "get_nu_ref_template() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.get_nu_ref_template"]], "get_nu_ref_templates() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.get_nu_ref_templates"]], "get_set_of_cr_templates() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates"]], "get_set_of_cr_templates_full() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates_full"]], "get_set_of_nu_templates() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.get_set_of_nu_templates"]], "set_template_directory() (nuradioreco.utilities.templates.templates method)": [[219, "NuRadioReco.utilities.templates.Templates.set_template_directory"]], "nuradioreco.utilities.timing": [[220, "module-NuRadioReco.utilities.timing"]], "analyze_timing() (in module nuradioreco.utilities.timing)": [[220, "NuRadioReco.utilities.timing.analyze_timing"]], "nuradioreco.utilities.tracewindows": [[221, "module-NuRadioReco.utilities.traceWindows"]], "get_window_around_maximum() (in module nuradioreco.utilities.tracewindows)": [[221, "NuRadioReco.utilities.traceWindows.get_window_around_maximum"]], "nuradioreco.utilities.trace_utilities": [[222, "module-NuRadioReco.utilities.trace_utilities"]], "apply_butterworth() (in module nuradioreco.utilities.trace_utilities)": [[222, "NuRadioReco.utilities.trace_utilities.apply_butterworth"]], "butterworth_filter_trace() (in module nuradioreco.utilities.trace_utilities)": [[222, "NuRadioReco.utilities.trace_utilities.butterworth_filter_trace"]], "delay_trace() (in module nuradioreco.utilities.trace_utilities)": [[222, "NuRadioReco.utilities.trace_utilities.delay_trace"]], "get_channel_voltage_from_efield() (in module nuradioreco.utilities.trace_utilities)": [[222, "NuRadioReco.utilities.trace_utilities.get_channel_voltage_from_efield"]], "get_efield_antenna_factor() (in module nuradioreco.utilities.trace_utilities)": [[222, "NuRadioReco.utilities.trace_utilities.get_efield_antenna_factor"]], "get_electric_field_energy_fluence() (in module nuradioreco.utilities.trace_utilities)": [[222, "NuRadioReco.utilities.trace_utilities.get_electric_field_energy_fluence"]], "upsampling_fir() (in module nuradioreco.utilities.trace_utilities)": [[222, "NuRadioReco.utilities.trace_utilities.upsampling_fir"]], "nuradioreco.utilities.units": [[223, "module-NuRadioReco.utilities.units"]], "nuradioreco.utilities.version": [[224, "module-NuRadioReco.utilities.version"]], "get_nuradiomc_commit_hash() (in module nuradioreco.utilities.version)": [[224, "NuRadioReco.utilities.version.get_NuRadioMC_commit_hash"]], "get_nuradioreco_commit_hash() (in module nuradioreco.utilities.version)": [[224, "NuRadioReco.utilities.version.get_NuRadioReco_commit_hash"]], "get_git_commit_hash() (in module nuradioreco.utilities.version)": [[224, "NuRadioReco.utilities.version.get_git_commit_hash"]]}})